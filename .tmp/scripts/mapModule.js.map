{"version":3,"sources":["mapModule.js"],"names":[],"mappings":"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","file":"mapModule.js","sourcesContent":["/*eslint-env browser, jquery */\n/*global ol */\n/**\n * OL3 module.\n * @see {@link http://openlayers.org/en/v3.12.1/apidoc/}\n * @class\n * @external $\n * @external Basil\n * @external ol\n * @param {Object} map - ol initialized map\n * @param {Object} settings - Module settings override\n * @return {Object} Public functions / variables\n */\n/*eslint-disable no-unused-vars*/\nvar MapModule = function (map, settings) {\n    /*eslint-enable no-unused-vars*/\n    'use strict';\n\n    var defaults = {\n        ol: {\n        },\n        basil: {\n        },\n        narrowWidth: 300,\n        flatHeight: 200,\n        centerOnPosition: true,\n        debug: true\n    };\n\n    var $map;\n    var basil;\n\n\n\n    /**\n     * Save map state using cookies or local storage\n     * @public\n     */\n    var storeMapChanges = function () {\n\n        if (!basil) {\n            return false;\n        }\n\n        var view = map.getView();\n\n        var getters = {'center': 'getCenter', 'resolution': 'getResolution', 'rotation': 'getRotation'};\n        $.each(getters, function (key, getter) {\n            view.on('change:' + key, function (e) {\n                basil.set(key, this[getter]());\n                console.log(key + ' stored after view ' + e.type, basil.get(key));\n            });\n        });\n\n        // Store map move changes\n        //map.on('moveend', function (e) {\n        //    basil.set('center', this.getView().getCenter());\n        //    console.log('Center stored after map ' + e.type, basil.get('center'));\n        //});\n\n        // Store map render changes\n        //map.on('postrender', function (e) {\n        //    basil.set('zoom', this.getView().getZoom());\n        //    console.log('Zoom stored after map ' + e.type, basil.get('zoom'));\n        //});\n\n    };\n\n\n\n    /**\n     * Save map state using cookies or local storage\n     * @public\n     * @return {Boolean} Restore success\n     */\n    var restoreMapProperties = function () {\n\n        if (!basil) {\n            return false;\n        }\n\n        var ok = false;\n        var view = map.getView();\n        var value;\n\n        // Restore some view properties\n        var setters = {'center': 'setCenter', 'resolution': 'setResolution', 'rotation': 'setRotation'};\n        $.each(setters, function (key, setter) {\n            value = basil.get(key);\n            if (value !== null) {\n                if (typeof view[setter] === 'function') {\n                    view[setter](value);\n                } else {\n                    view.set(key, value);\n                }\n                console.log('View ' + key + ' restored', value);\n                ok = true;\n            } else {\n                console.log('View ' + key + ' was not stored');\n            }\n        });\n\n        return ok;\n\n    };\n\n\n\n    /**\n     * Display event logs\n     * @public\n     */\n    var debug = function () {\n\n        var view = map.getView();\n\n        // pointermove postcompose postrender precompose\n        'change change:layerGroup change:size change:target change:view click dblclick moveend pointerdrag propertychange singleclick'.split(' ').forEach(function (eventType) {\n            map.on(eventType, function (e) {\n                console.log('Map', e.type);\n                if (e.key) {\n                    console.log('New ' + e.key, map.get(e.key));\n                }\n            });\n        });\n\n        'change change:center change:resolution change:rotation propertychange'.split(' ').forEach(function (eventType) {\n            view.on(eventType, function (e) {\n                console.log('View', e.type);\n                if (e.key) {\n                    console.log('New ' + e.key, view.get(e.key));\n                }\n            });\n        });\n        view.on('change:resolution', function () {\n            console.log('New zoom', view.getZoom());\n        });\n\n    };\n\n\n\n    /**\n     * Return the selected base layer name\n     * @public\n     */\n    var getSelectedBaseLayer = function () {\n\n      var layers = map.getLayers();\n\n      $.each(layers, function (i, l) {\n        //var BL = l.get('baselayer');\n        if (l.getVisible()) {\n            console.log('Selected layer', l.get('name'));\n        } else {\n            console.log('Unselected layer', l.get('name'));\n        }\n        l.on('change:visible', function () {\n            // this.getVisible() ? $li.addClass('checked') : $li.removeClass('checked') ;\n            if (this.getVisible()) {\n                console.log('Selected layer', this.get('name'));\n            }\n        });\n      });\n    };\n\n\n\n    /**\n     * Finds recursively the layer with the specified key and value.\n     * @param {ol.layer.Base} layer\n     * @param {String} key\n     * @param {any} value\n     * @returns {ol.layer.Base}\n     */\n    var findLayerBy = function (layer, key, value) {\n\n        // If it's a single layer and the value was found, return the layer\n        if (layer.get(key) === value) {\n            return layer;\n        }\n\n        // If it's a group, search recursively\n        if (layer.getLayers) {\n            var layers = layer.getLayers().getArray();\n            var result;\n            layers.forEach(function (l) {\n                result = findLayerBy(l, key, value);\n                if (result) {\n                    return result;\n                }\n            });\n        }\n\n        // Else\n        return null;\n\n    };\n\n\n\n    /**\n     * Center the map at a given position and make a zoom\n     * @public\n     * @param {number} longitude - Longitude at EPSG:4326 projection\n     * @param {number} latitude - Latitude at EPSG:4326 projection\n     */\n    var setCenter = function (longitude, latitude) {\n\n        var view = map.getView();\n        view.setCenter(ol.proj.transform([longitude, latitude], 'EPSG:4326', 'EPSG:3857'));\n        console.log('Map centered at longitude: ' + longitude + ' latitude: ' + latitude);\n\n    };\n\n\n\n    /**\n     * Try to geolocate user and center map on the position\n     * @public\n     */\n    var setCenterOnPosition = function () {\n\n        var view = map.getView();\n        var geolocation = new ol.Geolocation({\n            projection: view.getProjection(),\n            tracking: true\n        });\n\n        geolocation.once('change:position', function () {\n            view.setCenter(geolocation.getPosition());\n        });\n\n    };\n\n\n\n    /**\n     * Change zoom level\n     * @public\n     * @param {Integer} zoom - Zoom level from 0 to 21\n     */\n    var setZoom = function (zoom) {\n\n        zoom = parseInt(zoom);\n        if (zoom) {\n            map.getView().setZoom(zoom);\n        }\n\n    };\n\n\n\n    /**\n     * Zoom out and adjust center to fit the view extent\n     * @public\n     */\n    var fitView = function () {\n\n        var view = map.getView();\n        var extent = view.getExtent();\n        view.fit(extent, map.getSize());\n\n    };\n\n\n\n    /**\n     * Zoom out and adjust center to fit all layers in the map viewport\n     * @public\n     */\n    var fitLayers = function () {\n\n        var view = map.getView();\n        var extent = ol.extent.createEmpty();\n        map.getLayers().forEach(function (layer) {\n            ol.extent.extend(extent, layer.getSource().getExtent());\n        });\n        view.fit(extent, map.getSize());\n\n    };\n\n\n\n    /**\n     * Zoom out and adjust center to fit the layer features\n     * @public\n     * @param {Object} ol3 vector layer\n     */\n    var fitVectorLayer = function (layer) {\n\n        var extent = layer.getSource().getExtent();\n        map.getView().fit(extent, map.getSize());\n\n    };\n\n\n\n    /**\n     * Zoom out and adjust center to fil a vectore layer feature\n     * @see {@link http://openlayers.org/en/v3.4.0/examples/center.html}\n     * @public\n     * @param {String} id - Feature id\n     * @param {Object} layer - Vector layer\n     * @param {Object} options - ol3 fit function parameters\n     */\n    var fitLayerGeometry = function (id, layer, options) {\n\n        var source = layer.getSource();\n        var feature = source.getFeatureById(id);\n        var polygon = /** @type {ol.geom.SimpleGeometry} */ (feature.getGeometry());\n        var size = /** @type {ol.Size} */ (map.getSize());\n        var view = map.getView();\n\n        view.fit(polygon, size, $.extend({\n            padding: [0, 0, 0, 0],\n            constrainResolution: false\n            // nearest: true,\n            // minResolution: 50\n        }, options));\n\n    };\n\n\n\n    /**\n     * Add a .flat and .narrow class to the map container according to map size\n     * @param {Number} width - Map width\n     * @param {Number} height - Map height\n     */\n    var updateSize = function () {\n\n        map.updateSize();\n\n        //var $map = $('#' + map.get('target'));\n\n        //$map.toggleClass('narrow', ($map.width() < settings.narrowWidth));\n        //$map.toggleClass('flat', ($map.height() < settings.flatHeight));\n\n        var $el = $map.find('.layer-switcher');\n        if ($el) {\n            $map.toggleClass('inline-layer-switcher', ($map.height() >= 200 && $map.height() < 500));\n            $map.toggleClass('no-layer-switcher', ($map.width() < 300 || $map.height() < 200));\n        }\n\n        $el = $map.find('.ol-zoomslider');\n        if ($el) {\n            $map.toggleClass('no-zoomslider', ($map.height() < 300));\n        }\n\n    };\n\n\n\n    /**\n     * Get all tiles in rectangle area\n     * @public\n     * @param {Array} coord - Longitude, latitude\n     * @param {Integer} zoom - Zoom\n     * @return {Array}\n     */\n    /*var getTileURL = function (coord, zoom) {\n\n        var cor = transform2(coord[0], coord[1]);\n        var lon = cor[0];\n        var lat = cor[1];\n        var out = [];\n        var xtile = parseInt(Math.floor((lon + 180) / 360 * (1 << zoom)));\n        var ytile = parseInt(Math.floor((1 - Math.log(Math.tan(lat.toRad()) + 1 / Math.cos(lat.toRad())) / Math.PI) / 2 * (1 << zoom)));\n        console.log('>> ' + zoom + '/' + xtile + '/' + ytile);\n        out[0] = zoom;\n        out[1] = xtile;\n        out[2] = ytile;\n\n        return out;\n\n    };*/\n\n\n\n    /**\n     * Get all tiles in rectangle area\n     * @public\n     * @param {Array} coord1 - Longitude, latitude\n     * @param {Array} coord2 - Longitude, latitude\n     */\n    /*var getAllTiles = function (coord1, coord2) {\n\n        var out1 = getTileURL(coord1, 10);\n        var out2 = getTileURL(coord2, 10);\n        var outTmp1;\n\n        if(out1[1] > out2[1]) {\n            outTmp1 = out1[1];\n            out1[1] = out2[1];\n            out2[1] = outTmp1;\n        }\n        if(out1[2] > out2[2]) {\n            outTmp1 = out1[2];\n            out1[2] = out2[2];\n            out2[2] = outTmp1;\n        }\n\n        console.log('zoom' + out1[0] + ' from ' + out1[1] + ' to ' + out2[1] + ' from ' + out1[2] + ' to ' + out2[2]);\n        while(out1[1] <= out2[1]) {\n            while(out1[2] <= out2[2]) {\n                console.log('*** ' + out1[1] + '/' + out1[2]);\n                out1[2]++;\n            }\n            out1[1]++;\n        }\n\n    };*/\n\n\n\n    /**\n     * Execute common tasks after map initialisation\n     * @private\n     */\n    var init = function () {\n\n        // Merge default and custom settings\n        settings = $.extend(true, {}, defaults, settings);\n\n        // Define map container\n        $map = $('#' + map.get('target'));\n\n        // Redraw the map when the screen size change\n        window.onresize = function () {\n            updateSize();\n        };\n\n        // Add a .flat and .narrow class to the map container according to map size\n        updateSize();\n\n        // Init Basil\n        if (typeof window.Basil !== 'undefined') {\n            // Define an unique namespace to store map data\n            if (!settings.basil.namespace) {\n                settings.basil.namespace = map.get('target');\n            }\n            basil = new window.Basil(settings.basil);\n\n            // Try to restore map center and zoom from the local storage\n            if (!restoreMapProperties()) {\n                // Or center map on user position and set a default zoom\n                if (settings.centerOnPosition) {\n                    setCenterOnPosition();\n                    map.getView().setZoom(12);\n                }\n            }\n\n            // Check map events and store changes to local storage\n            storeMapChanges();\n\n        }\n\n        if (settings.debug) {\n            debug();\n        }\n\n    };\n\n\n\n    init();\n\n\n\n    return {\n        findLayerBy: findLayerBy,\n        fitLayerGeometry: fitLayerGeometry,\n        fitLayers: fitLayers,\n        fitVectorLayer: fitVectorLayer,\n        fitView: fitView,\n        getSelectedBaseLayer: getSelectedBaseLayer,\n        map: map,\n        restoreMapProperties: restoreMapProperties,\n        setCenter: setCenter,\n        setCenterOnPosition: setCenterOnPosition,\n        settings: settings,\n        setZoom: setZoom,\n        storeMapChanges: storeMapChanges,\n        updateSize: updateSize\n    };\n\n};\n"],"sourceRoot":"/source/"}