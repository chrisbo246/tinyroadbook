{"version":3,"sources":["../../app/scripts/mapModule.js"],"names":[],"mappings":"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","file":"mapModule.js","sourcesContent":["//jslint browser: true\n//global console, window, escape, FileReader, $, ol, controls, mapControlsModule\n\n/**\n * OL3 module.\n * @external jQuery\n * @external ol3\n * @see {@link http://openlayers.org/en/v3.12.1/apidoc/}\n * @module\n * @returns {Object} Public functions and variables\n */\nvar mapModule = (function () {\n    'use strict';\n\n    var map,\n        draw,\n        ready = $.Deferred();\n\n\n\n    /**\n     * Draw map\n     * @public\n     */\n    var init = function (target) {\n\n        ready.resolve();\n\n        return map;\n\n    };\n\n\n\n    /**\n     * Add a predefined control on a initialized map\n     * (Remove control with map.removeControl(control);)\n     * @private\n     * @param {string} control - Predefined control variable name\n     * @param {object} map - OL3 initialized map\n     */\n    var _addControl = function (control, map) {\n        if (!map || !controls[control]) {\n            return;\n        }\n        map.addControl(mapControlsModule.controls[control]);\n    };\n\n\n\n\n    /**\n     * Center the map at a given position and make a zoom\n     * @public\n     * @param {number} longitude - Longitude at EPSG:4326 projection\n     * @param {number} latitude - Latitude at EPSG:4326 projection\n     * @param {integer} [zoom] - Zoom from 0 to 18\n     */\n    var centerMap = function (longitude, latitude, zoom) {\n\n        var view = map.getView();\n        view.setCenter(ol.proj.transform([longitude, latitude], 'EPSG:4326', 'EPSG:3857'));\n        if (zoom) {\n            view.setZoom(zoom);\n        }\n        console.log('Map centered at longitude: ' + longitude + ' latitude: ' + latitude + ' zoom: ' + zoom);\n    };\n\n\n\n    /**\n     * Center map on user position\n     * @public\n     * @param {Object} map - OL3 map\n     */\n    var centerOnPosition = function (map) {\n\n        var view = map.getView();\n\n        var geolocation = new ol.Geolocation({\n            projection: view.getProjection(),\n            tracking: true\n        });\n\n        geolocation.once('change:position', function () {\n            view.setCenter(geolocation.getPosition());\n            //view.setResolution(2.388657133911758);\n            view.setZoom(10);\n        });\n        \n    };\n\n\n\n    /**\n     * Center the map on a vector source and adjust zoom\n     * @see {@link http://openlayers.org/en/v3.4.0/examples/center.html}\n     * @public\n     */\n    var fitLayerGeometry = function (id, map, layer, featureId) {\n\n        var source = layer.getSource();\n        var feature = source.getFeatureById(id);\n        var polygon = /** @type {ol.geom.SimpleGeometry} */ (feature.getGeometry());\n        var size = /** @type {ol.Size} */ (map.getSize());\n\n        var view = map.getView();\n        view.fit(polygon, size, {\n            padding: [0, 0, 0, 0],\n            constrainResolution: false\n            // nearest: true,\n            // minResolution: 50\n        });\n    };\n\n\n\n    /**\n     * Fit all layers in the map viewport\n     * @public\n     * @param {Object} map - OL3 map\n     */\n    var fitAll = function (map) {\n\n        var extent = ol.extent.createEmpty();\n        map.getLayers().forEach(function (layer) {\n            ol.extent.extend(extent, layer.getSource().getExtent());\n        });\n        map.getView().fit(extent, map.getSize());\n\n    };\n\n\n\n    /**\n     * Zoom out to view extent\n     * @public\n     * @param {Object} map - OL3 map\n     */\n    var zoomOut = function (map) {\n        //var extent = map.  .getSource().getExtent();\n        var view = map.getView();\n        var extent = view.getExtent();\n        view.fit(extent, map.getSize());\n    };\n\n\n\n    /**\n     * Update layer source url from a file input\n     * <input id=\"gpx_file_path\" type=\"file\" accept=\".gpx\" />\n     * @see {@link http://www.html5rocks.com/en/tutorials/file/dndfiles/}\n     * @public\n     * @param {string} selector - File input ID\n     * @param {Object} layer - OL3 vector layer\n     */\n    var setFileSource = function (selector, layer) {\n\n        if (!(window.File && window.FileReader && window.FileList && window.Blob)) {\n            console.warn('The File APIs are not fully supported in this browser.');\n        }\n\n        var $filePath = $(selector);\n        $filePath.on('change', function (e) {\n\n            var files = e.target.files;\n            files.forEach(function (f) {\n\n                var reader = new FileReader();\n                reader.onload = (function (theFile) {\n                    return function (e) {\n                        layer.setProperties({\n                            title: escape(theFile.name),\n                            source: new ol.source.Vector({\n                                url: e.target.result,\n                                format: new ol.format.GPX()\n                            }),\n                            visible: true\n                        });\n                    };\n                })(f);\n\n                reader.readAsDataURL(f);\n\n            });\n\n        });\n\n    };\n\n\n\n    return {\n        map: map,\n        ready: ready,\n        init: init,\n        centerOnPosition: centerOnPosition,\n        setFileSource: setFileSource,\n        fitAll: fitAll\n    };\n\n})();"]}