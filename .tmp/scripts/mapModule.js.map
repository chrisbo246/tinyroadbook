{"version":3,"sources":["mapModule.js"],"names":[],"mappings":"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","file":"mapModule.js","sourcesContent":["/*eslint-env browser, jquery */\n/*global ol */\n/**\n * OL3 module.\n * @see {@link http://openlayers.org/en/v3.12.1/apidoc/}\n * @module\n * @external $\n * @external Basil\n * @external ol\n * @param {Object} map - ol initialized map\n * @param {Object} settings - Module settings override\n * @return {Object} Public functions / variables\n */\n/*eslint-disable no-unused-vars*/\nvar MapModule = function (map, settings) {\n    /*eslint-enable no-unused-vars*/\n    'use strict';\n\n    var defaults = {\n        ol: {\n        },\n        basil: {\n        }\n    };\n\n    settings = $.extend(true, {}, defaults, settings);\n\n\n\n    // Global variables\n    var basil;\n\n\n    // Init Basil\n    if (!basil && typeof window.Basil !== 'undefined') {\n        // Define an unique namespace to store map data\n        if (!settings.basil.namespace) {\n            settings.basil.namespace = map.get('target');\n        }\n        basil = new window.Basil(settings.basil);\n    }\n\n\n\n    /**\n     * Save map state using cookies or local storage\n     * @public\n     */\n    var storeMapState = function () {\n\n        if (!basil) {\n            return false;\n        }\n\n        var view = map.getView();\n\n        // Store view center changes\n        view.on('change:center', function () {\n            basil.set('center', this.getCenter()); //, {'namespace': settings.basil.namespace}\n        });\n\n        // Store view resolution changes\n        view.on('change:resolution', function () {\n            basil.set('zoom', this.getZoom());\n        });\n\n        // Store map move changes\n        map.on('moveend', function () {\n            basil.set('center', view.getCenter());\n        });\n\n        // Store map render changes\n        map.on('postrender', function () {\n            basil.set('zoom', view.getZoom());\n        });\n\n        // Save / restore visible layers\n        /*var layers = map.getLayers();\n        mapLayersModule.treatLayers(map1, function (l) {\n            if (l.getVisible()) {\n                console.log('Selected layer', l.get('name'));\n            } else {\n                console.log('Unselected layer', l.get('name'));\n            }\n        });*/\n\n    };\n\n\n\n    /**\n     * Save map state using cookies or local storage\n     * @public\n     * @return {Boolean} Restore success\n     */\n    var restoreMapState = function () {\n\n        if (!basil) {\n            return false;\n        }\n\n        var ok = false;\n        var view = map.getView();\n\n        // Restore map center\n        if (basil.get('center')) {\n            view.setCenter(basil.get('center'));\n            ok = true;\n        }\n\n        // Restore map zoom\n        if (basil.get('zoom')) {\n            view.setZoom(basil.get('zoom'));\n            ok = true;\n        }\n\n        // Save / restore visible layers\n        /*var layers = map.getLayers();\n        mapLayersModule.treatLayers(map1, function (l) {\n            if (l.getVisible()) {\n                console.log('Selected layer', l.get('name'));\n            } else {\n                console.log('Unselected layer', l.get('name'));\n            }\n        });*/\n\n        return ok;\n\n    };\n\n\n\n    /**\n     * Display event logs\n     * @public\n     */\n    var debug = function () {\n\n        var target = map.get('target');\n        var view = map.getView();\n\n        map.on('change change:layerGroup change:size change:target change:view click dblclick moveend pointerdrag pointermove postcompose postrender precompose propertychange singleclick', function (e) {\n            console.log(target + ' map ', e);\n            console.log(target + ' map ' + e.name + ' event firered', e.value);\n        });\n\n        view.on('change change:center change:resolution change:rotation propertychange', function (e) {\n            console.log(target + ' map view ', e);\n            console.log(target + ' map view ' + e.name + ' event firered', e.value);\n        });\n\n        /*map.on('moveend', function () {\n            console.log(target + ' map moved', view.getCenter());\n        });\n        map.on('postrender', function () {\n            console.log(target + ' map zoom changed after postrender', view.getZoom());\n        });\n        view.on('change:center', function () {\n            console.log(target + ' view center changes', this.getCenter());\n        });\n        view.on('change:resolution', function () {\n            console.log(target + ' view zoom changed', this.getZoom());\n        });*/\n\n    };\n\n\n\n    /**\n     * Add a predefined control on a initialized map\n     * (Remove control with map.removeControl(control);)\n     * @private\n     * @param {string} control - Predefined control variable name\n     */\n    /*var addControl = function (control) {\n        if (!controls[control]) {\n            return false;\n        }\n        map.addControl(mapControlsModule.controls[control]);\n    };*/\n\n\n\n    /**\n     * Return the selected base layer name\n     * @public\n     */\n    var getSelectedBaseLayer = function () {\n\n      var layers = map.getLayers();\n\n      $.each(layers, function (i, l) {\n        //var BL = l.get('baselayer');\n        if (l.getVisible()) {\n            console.log('Selected layer', l.get('name'));\n        } else {\n            console.log('Unselected layer', l.get('name'));\n        }\n        l.on('change:visible', function () {\n            // this.getVisible() ? $li.addClass('checked') : $li.removeClass('checked') ;\n            if (this.getVisible()) {\n                console.log('Selected layer', this.get('name'));\n            }\n        });\n      });\n    };\n\n\n\n    /**\n     * Center the map at a given position and make a zoom\n     * @public\n     * @param {number} longitude - Longitude at EPSG:4326 projection\n     * @param {number} latitude - Latitude at EPSG:4326 projection\n     */\n    var setCenter = function (longitude, latitude) {\n        var view = map.getView();\n        view.setCenter(ol.proj.transform([longitude, latitude], 'EPSG:4326', 'EPSG:3857'));\n        console.log('Map centered at longitude: ' + longitude + ' latitude: ' + latitude);\n    };\n\n\n\n    /**\n     * Try to geolocate user and center map on the position\n     * @public\n     */\n    var setCenterOnPosition = function () {\n\n        var view = map.getView();\n        var geolocation = new ol.Geolocation({\n            projection: view.getProjection(),\n            tracking: true\n        });\n\n        geolocation.once('change:position', function () {\n            view.setCenter(geolocation.getPosition());\n        });\n\n    };\n\n\n\n    /**\n     * Change zoom level\n     * @public\n     * @param {Integer} zoom - Zoom level from 0 to 21\n     */\n    var setZoom = function (zoom) {\n        zoom = parseInt(zoom);\n        if (zoom) {\n            map.getView().setZoom(zoom);\n        }\n    };\n\n\n\n    /**\n     * Zoom out and adjust center to fit the view extent\n     * @public\n     */\n    var fitView = function () {\n        var view = map.getView();\n        var extent = view.getExtent();\n        view.fit(extent, map.getSize());\n    };\n\n\n\n    /**\n     * Zoom out and adjust center to fit all layers in the map viewport\n     * @public\n     */\n    var fitLayers = function () {\n        var view = map.getView();\n        var extent = ol.extent.createEmpty();\n        map.getLayers().forEach(function (layer) {\n            ol.extent.extend(extent, layer.getSource().getExtent());\n        });\n        view.fit(extent, map.getSize());\n    };\n\n\n\n    /**\n     * Zoom out and adjust center to fit the layer features\n     * @public\n     * @param {Object} ol3 vector layer\n     */\n    var fitVectorLayer = function (layer) {\n        var view = map.getView();\n        var extent = layer.getSource().getExtent();\n        view.fit(extent, map.getSize());\n    };\n\n\n\n    /**\n     * Zoom out and adjust center to fil a vectore layer feature\n     * @see {@link http://openlayers.org/en/v3.4.0/examples/center.html}\n     * @public\n     * @param {String} id - Feature id\n     * @param {Object} layer - Vector layer\n     * @param {Object} options - ol3 fit function parameters\n     */\n    var fitLayerGeometry = function (id, layer, options) {\n        var source = layer.getSource();\n        var feature = source.getFeatureById(id);\n        var polygon = /** @type {ol.geom.SimpleGeometry} */ (feature.getGeometry());\n        var size = /** @type {ol.Size} */ (map.getSize());\n        var view = map.getView();\n        view.fit(polygon, size, $.extend({\n            padding: [0, 0, 0, 0],\n            constrainResolution: false\n            // nearest: true,\n            // minResolution: 50\n        }, options));\n    };\n\n\n\n    return {\n        settings: settings,\n        map: map,\n        basil: basil,\n        debug: debug,\n        setZoom: setZoom,\n        setCenter: setCenter,\n        setCenterOnPosition: setCenterOnPosition,\n        getSelectedBaseLayer: getSelectedBaseLayer,\n        storeMapState: storeMapState,\n        restoreMapState: restoreMapState,\n        fitView: fitView,\n        fitLayers: fitLayers,\n        fitVectorLayer: fitVectorLayer,\n        fitLayerGeometry: fitLayerGeometry\n    };\n\n};\n"],"sourceRoot":"/source/"}