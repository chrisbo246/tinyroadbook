{"version":3,"sources":["mapLayersModule.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAUA,IAAI,kBAAkB,YAAa;;AAE/B,iBAF+B;;AAI/B,QAAI,WAAW;AACX,eAAO,KAAP;AACA,qBAAa,kEAAb;AACA,oBAAY;AACR,qBAAS,KAAT;SADJ;AAGA,eAAO,EAAP;KANA,CAJ2B;;AAc/B,QAAI,eAAe,CAAC,MAAD,EAAS,OAAT,EAAkB,SAAlB,EAA6B,OAA7B,EAAsC,OAAtC,EAA+C,MAA/C,EAAuD,QAAvD,EAAiE,YAAjE,CAAf,CAd2B;;AAgB/B,QAAI,gBAAgB,CAAC,UAAD,EAAa,SAAb,EAAwB,SAAxB,EACjB,OADiB,EACR,aADQ,EACO,eADP,EACwB,aADxB,EACuC,aADvC,EAEjB,UAFiB,EAEL,UAFK,EAEO,KAFP,EAEc,QAFd,EAEwB,QAFxB,EAEkC,QAFlC,EAE4C,MAF5C,EAGjB,gBAHiB,EAGC,WAHD,EAGc,WAHd,EAG2B,UAH3B,EAGuC,aAHvC,EAIjB,SAJiB,EAIN,QAJM,EAII,YAJJ,EAIkB,MAJlB,EAI0B,KAJ1B,EAIiC,SAJjC,CAAhB;;;AAhB2B,QAuB3B,gBAAgB,CAAC,SAAD,EAAY,aAAZ,EAA2B,aAA3B,EACjB,KADiB,EACV,YADU,EACI,UADJ,EACgB,SADhB,EAC2B,SAD3B,EACsC,KADtC,EAC6C,MAD7C,EACqD,MADrD,EAC6D,KAD7D,EAEjB,KAFiB,EAEV,KAFU,EAEH,KAFG,EAEI,QAFJ,EAEc,UAFd,EAE0B,UAF1B,EAEsC,KAFtC,EAE6C,KAF7C,EAGjB,iBAHiB,EAGE,mBAHF,EAGuB,kBAHvB,CAAhB,CAvB2B;;AA4B/B,QAAI,eAAe,CAAC,cAAD,EAAiB,QAAjB,EAA2B,MAA3B,EAAmC,MAAnC,EAA2C,OAA3C,EAAoD,cAApD,EACf,QADe,EACL,OADK,EACI,MADJ,CAAf,CA5B2B;;AA+B/B,QAAI,kBAAkB,EAAC,YAAY,aAAZ,EAA2B,SAAS,UAAT,EAAqB,QAAQ,SAAR,EAAmB,OAAO,QAAP,EAAtF;;;;AA/B2B,QAmC3B,qBAAqB,EAAC,QAAQ,SAAR,EAAmB,SAAS,UAAT,EAAqB,UAAU,WAAV,EAAuB,QAAQ,SAAR,EAArF,CAnC2B;AAoC/B,QAAI,yBAAyB,EAAC,SAAS,UAAT,EAAqB,WAAW,YAAX,EAAyB,YAAY,aAAZ,EAA2B,oBAAoB,qBAApB,EAA2C,YAAY,aAAZ;AAC9I,oBAAY,aAAZ,EAA2B,cAAc,eAAd,EAA+B,SAAS,UAAT,EAAqB,UAAU,WAAV,EAD/E,CApC2B;AAsC/B,QAAI,yBAAyB,EAAC,SAAS,UAAT,EAAqB,WAAW,YAAX,EAAyB,YAAY,aAAZ,EAA2B,oBAAoB,qBAApB,EAA2C,YAAY,aAAZ;AAC9I,oBAAY,aAAZ,EAA2B,cAAc,eAAd,EAA+B,SAAS,UAAT,EAAqB,UAAU,WAAV,EAD/E,CAtC2B;;AA0C/B,QAAI,WAAW,MAAC,CAAO,QAAP,CAAgB,QAAhB,KAA6B,QAA7B,GAAyC,QAA1C,GAAqD,OAArD,CA1CgB;;AA4C/B,QAAI,SAAS,EAAT,CA5C2B;AA6C/B,QAAI,aAAJ,CA7C+B;AA8C/B,QAAI,KAAJ,CA9C+B;;AAgD/B,QAAI,OAAO,KAAP,KAAiB,UAAjB,EAA6B;AAC7B,gBAAQ,IAAI,OAAO,KAAP,CAAa,SAAS,KAAT,CAAzB,CAD6B;KAAjC;;;;;;;AAhD+B,QA2D3B,QAAQ,SAAR,KAAQ,CAAU,KAAV,EAAiB;;AAEzB,YAAI,CAAC,SAAS,KAAT,EAAgB;AACjB,0BAAc,QAAd,GADiB;AAEjB,mBAAO,KAAP,CAFiB;SAArB;;;AAFyB,uOAQzB,CAAgO,KAAhO,CAAsO,GAAtO,EAA2O,OAA3O,CAAmP,UAAU,SAAV,EAAqB;AACpQ,kBAAM,EAAN,CAAS,SAAT,EAAoB,UAAU,CAAV,EAAa;AAC7B,oBAAI,EAAE,GAAF,EAAO;AACP,4BAAQ,GAAR,CAAY,WAAW,EAAE,GAAF,GAAQ,UAAnB,EAA+B,MAAM,GAAN,CAAU,EAAE,GAAF,CAArD,EADO;iBAAX,MAEO;AACH,4BAAQ,GAAR,CAAY,EAAE,MAAF,CAAS,GAAT,CAAa,MAAb,IAAuB,QAAvB,GAAkC,EAAE,IAAF,EAAQ,CAAtD,EADG;iBAFP;aADgB,CAApB,CADoQ;SAArB,CAAnP,CARyB;KAAjB;;;;;;;AA3DmB,QAuF3B,oBAAoB,SAApB,iBAAoB,CAAU,KAAV,EAAiB;;;AAGrC,cAAM,EAAN,CAAS,gBAAT,EAA2B,YAAY;;AAEnC,gBAAI,YAAY,MAAM,GAAN,CAAU,MAAV,CAAZ,CAF+B;AAGnC,gBAAI,SAAJ,EAAe;;AAEX,oBAAI,aAAa,MAAM,aAAN,EAAb,CAFO;AAGX,oBAAI,MAAM,YAAN,CAHO;AAIX,oBAAI,QAAQ;AACR,6BAAS,WAAW,OAAX;AACT,4BAAQ,WAAW,MAAX;AACR,6BAAS,WAAW,OAAX;iBAHT,CAJO;AASX,sBAAM,GAAN,CAAU,GAAV,EAAe,KAAf,EAAsB,EAAC,aAAa,SAAb,EAAvB,EATW;AAUX,wBAAQ,GAAR,CAAY,YAAY,oBAAZ,EAAkC,KAA9C,EAVW;aAAf;SAHuB,CAA3B,CAHqC;KAAjB;;;;;;;AAvFO,QAsH3B,eAAe,SAAf,YAAe,CAAU,KAAV,EAAiB;;AAEhC,YAAI,YAAY,MAAM,GAAN,CAAU,MAAV,CAAZ,CAF4B;AAGhC,YAAI,SAAJ,EAAe;;AAEX,gBAAI,MAAM,YAAN,CAFO;AAGX,gBAAI,QAAQ,MAAM,GAAN,CAAU,GAAV,EAAe,EAAC,aAAa,SAAb,EAAhB,CAAR,CAHO;AAIX,gBAAI,UAAU,IAAV,EAAgB;AAChB,sBAAM,aAAN,CAAoB,KAApB,EADgB;AAEhB,wBAAQ,GAAR,CAAY,YAAY,GAAZ,GAAkB,GAAlB,GAAwB,WAAxB,EAAqC,KAAjD,EAFgB;aAApB;SAJJ;KAHe;;;;;;;;;AAtHY,QA+I3B,SAAS,SAAT,MAAS,CAAU,IAAV,EAAgB,UAAhB,EAA4B;;AAErC,YAAI,CAAC,OAAO,IAAP,CAAD,EAAe;AACf,oBAAQ,IAAR,CAAa,OAAO,kCAAP,CAAb,CADe;AAEf,mBAAO,KAAP,CAFe;SAAnB;;;AAFqC,YAQjC,QAAQ,OAAO,IAAP,GAAR,CARiC;;AAUrC,cAAM,KAAN;;;AAVqC,aAarC,CAAM,aAAN,CAAoB,EAAE,MAAF,CAAS,IAAT,EAAe,EAAf,EAAmB,SAAS,UAAT,EAAqB,UAAxC,CAApB;;;AAbqC,YAgBjC,QAAQ,MAAM,GAAN,CAAU,OAAV,CAAR,CAhBiC;AAiBrC,YAAI,KAAJ,EAAW;AACP,kBAAM,GAAN,CAAU,OAAV,EAAmB,QACb,mEADa,GACyD,IADzD,GACgE,IADhE,GAEb,mDAFa,CAAnB,CADO;SAAX;;AAMA,YAAI,KAAJ,EAAW;AACP,yBAAa,KAAb,EADO;AAEP,8BAAkB,KAAlB,EAFO;SAAX;;AAKA,eAAO,KAAP,CA5BqC;KAA5B;;;;;;;;AA/IkB,QAsL3B,cAAc,SAAd,WAAc,CAAU,KAAV,EAAiB,EAAjB,EAAqB;;AAEnC,UAAE,IAAF,CAAO,MAAP,EAAe,UAAU,CAAV,EAAa,CAAb,EAAgB;AAC3B,gBAAI,EAAE,SAAF,EAAJ,EAAmB;AACf,4BAAY,CAAZ,EAAe,EAAf,EADe;aAAnB,MAEO;AACH,mBAAG,CAAH,EADG;aAFP;SADW,CAAf,CAFmC;KAArB;;;;;;;AAtLa,QAyM3B,uBAAuB,SAAvB,oBAAuB,CAAU,YAAV,EAAwB;;AAE/C,YAAI,MAAJ,EAAY,GAAZ,EAAiB,KAAjB,EAAwB,KAAxB,EAA+B,IAA/B,CAF+C;;AAI/C,YAAI,CAAC,IAAI,OAAJ,EAAa;AACd,oBAAQ,IAAR,CAAa,wBAAb,EADc;AAEd,mBAAO,KAAP,CAFc;SAAlB;;AAKA,YAAI,QAAQ,EAAE,YAAF,CAAR,CAT2C;AAU/C,cAAM,OAAN,CAAc;AACV,sBAAU,oGAAV;SADJ,EAGK,EAHL,CAGQ,eAHR,EAGyB,YAAW;AAC5B,qBAAS,KAAK,QAAL;;;AADmB,gBAIxB,OAAO,EAAP,CAAU,mCAAV,CAAJ,EAAoD;AAChD,sBAAM,OAAO,IAAP,CAAY,aAAZ,CAAN,CADgD;AAEhD,wBAAQ,cAAc,aAAd,CAA4B,MAA5B,CAAR,CAFgD;AAGhD,oBAAI,OAAO,UAAU,IAAV,EAAgB;AACvB,kCAAc,GAAd,CAAkB,GAAlB,EAAuB,KAAvB,EADuB;iBAA3B;aAHJ;;;AAJ4B,gBAaxB,OAAO,EAAP,CAAU,2CAAV,CAAJ,EAA4D;AACxD,wBAAQ,cAAc,aAAd,CAA4B,MAA5B,CAAR,CADwD;AAExD,wBAAQ,MAAM,KAAN,CAAY,IAAZ,CAAR,CAFwD;AAGxD,gCAAgB,aAAhB,EAA+B,KAA/B,EAHwD;aAA5D;;;AAb4B,gBAoBxB,OAAO,EAAP,CAAU,iDAAV,CAAJ,EAAkE;AAC9D,wBAAQ,cAAc,aAAd,CAA4B,MAA5B,CAAR,CAD8D;AAE9D,iCAAiB,aAAjB,EAAgC,KAAhC,EAAuC;AACnC,oCAAgB,WAAhB;AACA,uCAAmB,WAAnB;iBAFJ;;AAF8D,aAAlE;;;AApB4B,gBA8BxB,OAAO,EAAP,CAAU,mCAAV,CAAJ,EAAoD;AAChD,sBAAM,OAAO,IAAP,CAAY,aAAZ,CAAN,CADgD;AAEhD,wBAAQ,cAAc,aAAd,CAA4B,MAA5B,CAAR,CAFgD;AAGhD,uBAAO,OAAO,IAAP,CAAY,UAAZ,CAAP,CAHgD;AAIhD,wBAAQ,cAAc,QAAd,EAAR,CAJgD;AAKhD,oBAAI,mBAAmB,IAAnB,aAAmC,MAAM,mBAAmB,IAAnB,CAAN,EAAnC,EAAoE;AACpE,4BAAQ,MAAM,mBAAmB,IAAnB,CAAN,GAAR,CADoE;AAEpE,wBAAI,uBAAuB,GAAvB,aAAsC,MAAM,uBAAuB,GAAvB,CAAN,EAAtC,EAA0E;AAC1E,8BAAM,uBAAuB,GAAvB,CAAN,EAAmC,KAAnC,EAD0E;qBAA9E;iBAFJ;aALJ;SA9BiB,CAHzB,CA+CK,EA/CL,CA+CQ,aA/CR,EA+CuB,YAAY;;AAE3B,mBAAO,KAAP,CAF2B;SAAZ,CA/CvB,CAV+C;KAAxB;;;;;;;AAzMI,QAgR3B,mBAAmB,SAAnB,gBAAmB,CAAU,KAAV,EAAiB,YAAjB,EAA+B,iBAA/B,EAAkD;;AAErE,YAAI,MAAJ,EAAY,OAAZ,EAAqB,GAArB,EAA0B,KAA1B,CAFqE;;AAIrE,YAAI,QAAQ,EAAE,YAAF,CAAR,CAJiE;AAKrE,YAAI,cAAc,MAAM,IAAN,CAAW,iBAAX,CAAd;;;AALiE,qBAQrE,GAAgB,KAAhB;;;AARqE,mBAWrE,CAAY,IAAZ;;;AAXqE,YAcjE,aAAa,cAAc,cAAd,CAA6B,KAA7B,EAAoC,GAAG,KAAH,EAAU,YAA9C,CAAb,CAdiE;AAerE,gBAAQ,GAAR,CAAY,aAAZ,EAA2B,UAA3B;;;AAfqE,YAkBjE,YAAY,MAAM,OAAN,EAAZ,CAlBiE;AAmBrE,gBAAQ,GAAR,CAAY,YAAZ,EAA0B,SAA1B,EAnBqE;AAoBrE,YAAI,kBAAkB,MAAM,aAAN,CAAoB,KAApB,CAAlB,CApBiE;AAqBrE,gBAAQ,GAAR,CAAY,kBAAZ,EAAgC,eAAhC,EArBqE;AAsBrE,YAAI,OAAO,MAAM,SAAN,KAAoB,UAA3B,EAAuC;AACvC,gBAAI,SAAS,MAAM,SAAN,EAAT,CADmC;SAA3C;AAGA,YAAI,OAAO,MAAM,QAAN,KAAmB,UAA1B,EAAsC;AACtC,gBAAI,QAAQ,MAAM,QAAN,EAAR,CADkC;SAA1C;;;;AAzBqE,YA+BjE,QAAQ,UAAR,CA/BiE;AAgCrE,cAAM,IAAN,CAAW,GAAX,EAhCqE;AAiCrE,cAAM,OAAN,CAAc,UAAU,IAAV,EAAgB;AAC1B,sBAAU,YAAY,GAAZ,CAAgB,qBAAqB,IAArB,GAA4B,IAA5B,CAA1B,CAD0B;AAE1B,sBAAU,OAAV,CAAkB,UAAU,IAAV,EAAgB;AAC9B,wBAAQ,GAAR,CAAY,wBAAwB,IAAxB,GAA+B,IAA/B,CAAZ,CAAiD,IAAjD,GACK,IADL,CACU,aADV,EACyB,IADzB,CAC8B,MAAM,IAAN,GAAa,GAAb,CAD9B,CAD8B;aAAhB,CAAlB,CAF0B;SAAhB,CAAd,CAjCqE;;AAyCrE,YAAI,MAAJ,EAAY;;;AAGR,gBAAI,cAAc,cAAc,cAAd,CAA6B,MAA7B,EAAqC,GAAG,MAAH,EAAW,aAAhD,CAAd,CAHI;AAIR,oBAAQ,GAAR,CAAY,oBAAZ,EAAkC,WAAlC;;;AAJQ,gBAOJ,aAAa,OAAO,OAAP,EAAb,CAPI;AAQR,oBAAQ,GAAR,CAAY,mBAAZ,EAAiC,UAAjC,EARQ;AASR,gBAAI,mBAAmB,OAAO,aAAP,CAAqB,KAArB,CAAnB,CATI;AAUR,oBAAQ,GAAR,CAAY,yBAAZ,EAAuC,gBAAvC;;;;;AAVQ,gBAeJ,OAAO,OAAO,SAAP,KAAqB,UAA5B,EAAwC;AACxC,oBAAI,SAAS,OAAO,SAAP,EAAT,CADoC;aAA5C;;AAIA,gBAAI,wBAAwB,EAAxB,CAnBI;AAoBR,cAAE,IAAF,CAAO,eAAP,EAAwB,UAAU,IAAV,EAAgB,OAAhB,EAAyB;AAC7C,oBAAI,OAAO,OAAO,OAAP,CAAP,KAA2B,UAA3B,EAAuC;AACvC,4BAAQ,OAAO,OAAP,GAAR,CADuC;AAEvC,wBAAI,SAAS,CAAC,iBAAiB,IAAjB,CAAD,EAAyB;AAClC,8CAAsB,IAAtB,IAA8B,KAA9B,CADkC;qBAAtC;iBAFJ;aADoB,CAAxB,CApBQ;AA4BR,oBAAQ,GAAR,CAAY,yBAAZ,EAAuC,qBAAvC;;;;AA5BQ,iBAgCR,GAAQ,WAAR,CAhCQ;AAiCR,kBAAM,IAAN,CAAW,GAAX,EAjCQ;AAkCR,kBAAM,OAAN,CAAc,UAAU,IAAV,EAAgB;AAC1B,0BAAU,YAAY,GAAZ,CAAgB,sBAAsB,IAAtB,GAA6B,IAA7B,CAA1B,CAD0B;AAE1B,2BAAW,OAAX,CAAmB,UAAU,IAAV,EAAgB;AAC/B,4BAAQ,GAAR,CAAY,wBAAwB,IAAxB,GAA+B,IAA/B,CAAZ,CAAiD,IAAjD,GACK,IADL,CACU,aADV,EACyB,IADzB,CAC8B,MAAM,IAAN,GAAa,GAAb,CAD9B,CAD+B;iBAAhB,CAAnB,CAF0B;AAM1B,kBAAE,IAAF,CAAO,qBAAP,EAA8B,UAAU,IAAV,EAAgB;AAC1C,4BAAQ,GAAR,CAAY,wBAAwB,IAAxB,GAA+B,IAA/B,CAAZ,CAAiD,IAAjD,GACK,IADL,CACU,aADV,EACyB,IADzB,CAC8B,MAAM,IAAN,GAAa,GAAb,CAD9B,CAD0C;iBAAhB,CAA9B;;;;AAN0B,aAAhB,CAAd,CAlCQ;;AAiDR,gBAAI,MAAJ,EAAY;;;AAGR,oBAAI,cAAc,cAAc,cAAd,CAA6B,MAA7B,EAAqC,GAAG,MAAH,EAAW,aAAhD,CAAd,CAHI;AAIR,wBAAQ,GAAR,CAAY,oBAAZ,EAAkC,WAAlC;;;;AAJQ,qBAQR,GAAQ,WAAR,CARQ;AASR,sBAAM,IAAN,CAAW,GAAX,EATQ;AAUR,sBAAM,OAAN,CAAc,UAAU,IAAV,EAAgB;AAC1B,8BAAU,YAAY,GAAZ,CAAgB,sBAAsB,IAAtB,GAA6B,IAA7B,CAA1B,CAD0B;AAE1B,4BAAQ,IAAR,GACK,IADL,CACU,aADV,EACyB,IADzB,CAC8B,MAAM,IAAN,GAAa,GAAb,CAD9B,CAF0B;iBAAhB,CAAd,CAVQ;AAeR,wBAAQ,GAAR,CAAY,qBAAZ,EAAmC,IAAnC,GAfQ;aAAZ;;;;;;;;;;;;;;;;;;;;;;SAjDJ;AAAY;AAgGZ,YAAI,KAAJ,EAAW;;AAEP,gBAAI,aAAa,cAAc,cAAd,CAA6B,KAA7B,EAAoC,GAAG,KAAH,EAAU,YAA9C,CAAb,CAFG;AAGP,oBAAQ,GAAR,CAAY,mBAAZ,EAAiC,UAAjC,EAHO;;AAKP,gBAAI,kBAAkB,EAAlB,CALG;;AAOP,cAAE,IAAF,CAAO,kBAAP,EAA2B,UAAU,IAAV,EAAgB,OAAhB,EAAyB;AAChD,oBAAI,OAAO,MAAM,OAAN,CAAP,KAA0B,UAA1B,EAAsC;;AAEtC,oCAAgB,IAAhB,IAAwB,EAAxB,CAFsC;AAGtC,4BAAQ,MAAM,OAAN,GAAR,CAHsC;;AAKtC,wBAAI,KAAJ,EAAW;AACP,qCAAa,cAAc,cAAd,CAA6B,KAA7B,EAAoC,GAAG,KAAH,EAAU,YAA9C,CAAb;;;AADO,4BAIH,UAAJ,EAAgB;AACZ,oCAAQ,GAAR,CAAY,iBAAiB,IAAjB,GAAwB,QAAxB,EAAkC,UAA9C;;;;AADY,iCAKZ,GAAQ,UAAR,CALY;AAMZ,kCAAM,IAAN,CAAW,GAAX,EANY;AAOZ,kCAAM,OAAN,CAAc,UAAU,IAAV,EAAgB;AAC1B,0CAAU,YAAY,GAAZ,CAAgB,qBAAqB,IAArB,GAA4B,IAA5B,CAA1B,CAD0B;;AAG1B,kCAAE,IAAF,CAAO,sBAAP,EAA+B,UAAU,IAAV,EAAgB,OAAhB,EAAyB;AACpD,wCAAI,OAAO,MAAM,OAAN,CAAP,KAA0B,UAA1B,EAAsC;AACtC,gDAAQ,MAAM,OAAN,GAAR;;AADsC,uDAGtC,CAAgB,IAAhB,EAAsB,IAAtB,IAA8B,KAA9B,CAHsC;AAItC,gDAAQ,GAAR,CAAY,wBAAwB,IAAxB,GAA+B,IAA/B,CAAZ,CAAiD,IAAjD,GACK,IADL,CACU,aADV,EACyB,IADzB,CAC8B,MAAM,IAAN,GAAa,GAAb,CAD9B,CAJsC;qCAA1C;iCAD2B,CAA/B,CAH0B;6BAAhB,CAAd,CAPY;yBAAhB,MAuBO;AACH,4CAAgB,IAAhB,IAAwB,KAAxB,CADG;yBAvBP;qBAJJ;iBALJ;aADuB,CAA3B,CAPO;AA+CP,oBAAQ,GAAR,CAAY,wBAAZ,EAAsC,eAAtC,EA/CO;SAAX;;;AAzIqE,YA6LjE,eAAJ,EAAqB;AACjB,wBAAY,IAAZ,CAAiB,QAAjB,EAA2B,MAA3B,CAAkC,mCAAlC,EAAuE,IAAvE,CAA4E,YAAY;AACpF,yBAAS,EAAE,IAAF,CAAT,CADoF;AAEpF,sBAAM,OAAO,IAAP,CAAY,aAAZ,CAAN,CAFoF;AAGpF,oBAAI,gBAAgB,GAAhB,MAAyB,IAAzB,EAA+B;AAC/B,4BAAQ,gBAAgB,GAAhB,CAAR,CAD+B;AAE/B,kCAAc,aAAd,CAA4B,MAA5B,EAAoC,KAApC,EAF+B;AAG/B,4BAAQ,GAAR,CAAY,oBAAoB,GAApB,GAA0B,YAA1B,EAAwC,KAApD,EAH+B;iBAAnC;aAHwE,CAA5E,CADiB;SAArB;;AAYA,YAAI,gBAAJ,EAAsB;AAClB,wBAAY,IAAZ,CAAiB,QAAjB,EAA2B,MAA3B,CAAkC,oCAAlC,EAAwE,IAAxE,CAA6E,YAAY;AACrF,yBAAS,EAAE,IAAF,CAAT,CADqF;AAErF,sBAAM,OAAO,IAAP,CAAY,aAAZ,CAAN,CAFqF;AAGrF,oBAAI,iBAAiB,GAAjB,MAA0B,IAA1B,EAAgC;AAChC,4BAAQ,iBAAiB,GAAjB,CAAR,CADgC;AAEhC,kCAAc,aAAd,CAA4B,MAA5B,EAAoC,KAApC,EAFgC;AAGhC,4BAAQ,GAAR,CAAY,qBAAqB,GAArB,GAA2B,YAA3B,EAAyC,KAArD,EAHgC;iBAApC;aAHyE,CAA7E,CADkB;SAAtB;AAWA,YAAI,qBAAJ,EAA2B;AACvB,wBAAY,IAAZ,CAAiB,QAAjB,EAA2B,MAA3B,CAAkC,oCAAlC,EAAwE,IAAxE,CAA6E,YAAY;AACrF,yBAAS,EAAE,IAAF,CAAT,CADqF;AAErF,sBAAM,OAAO,IAAP,CAAY,aAAZ,CAAN,CAFqF;AAGrF,oBAAI,sBAAsB,GAAtB,MAA+B,IAA/B,EAAqC;AACrC,4BAAQ,sBAAsB,GAAtB,CAAR,CADqC;AAErC,kCAAc,aAAd,CAA4B,MAA5B,EAAoC,KAApC,EAFqC;AAGrC,4BAAQ,GAAR,CAAY,qBAAqB,GAArB,GAA2B,YAA3B,EAAyC,KAArD,EAHqC;iBAAzC;aAHyE,CAA7E,CADuB;SAA3B;;;;;;;;;;AApNqE,YAwOjE,WAAJ,EAAiB;AACb,wBAAY,IAAZ,CAAiB,QAAjB,EAA2B,MAA3B,CAAkC,iDAAlC,EAAqF,IAArF,CAA0F,YAAY;AAClG,wBAAQ,GAAR,CAAY,0BAAZ,EAAwC,KAAxC,EADkG;aAAZ,CAA1F,CADa;SAAjB;;AAMA,YAAI,eAAJ,EAAqB;AACjB,gBAAI,SAAJ,CADiB;AAEjB,wBAAY,IAAZ,CAAiB,QAAjB,EAA2B,MAA3B,CAAkC,mCAAlC,EAAuE,IAAvE,CAA4E,YAAY;AACpF,yBAAS,EAAE,IAAF,CAAT,CADoF;AAEpF,4BAAY,OAAO,IAAP,CAAY,UAAZ,CAAZ,CAFoF;AAGpF,sBAAM,OAAO,IAAP,CAAY,aAAZ,CAAN,CAHoF;AAIpF,oBAAI,aAAa,GAAb,IAAoB,gBAAgB,SAAhB,CAApB,IAAkD,gBAAgB,SAAhB,EAA2B,GAA3B,MAAoC,IAApC,EAA0C;AAC5F,4BAAQ,gBAAgB,SAAhB,EAA2B,GAA3B,CAAR,CAD4F;AAE5F,4BAAQ,GAAR,CAAY,YAAY,GAAZ,GAAkB,GAAlB,GAAwB,IAAxB,WAAuC,qDAAvC,GAAgD,GAAhD,EAAqD,KAAjE,EAF4F;AAG5F,kCAAc,aAAd,CAA4B,MAA5B,EAAoC,KAApC,EAH4F;iBAAhG;aAJwE,CAA5E,CAFiB;SAArB;;;;AA9OqE,4BA8PrE,CAAqB,YAArB,EA9PqE;KAAlD;;;;;;;;AAhRQ,QA0hB3B,kBAAkB,SAAlB,eAAkB,CAAU,KAAV,EAAiB,GAAjB,EAAsB;;AAExC,YAAI,CAAC,KAAD,EAAQ;AACR,mBAAO,KAAP,CADQ;SAAZ;;AAIA,YAAI,SAAS,MAAM,SAAN,EAAT,CANoC;;AAQxC,YAAI,OAAO,OAAO,OAAP,KAAmB,WAA1B,EAAuC;AACvC,gBAAI,EAAE,OAAF,CAAU,GAAV,CAAJ,EAAoB;AAChB,uBAAO,OAAP,CAAe,GAAf,EADgB;aAApB,MAEO;AACH,sBAAM,EAAE,IAAF,CAAO,GAAP,CAAN,CADG;AAEH,uBAAO,MAAP,CAAc,GAAd,EAFG;aAFP;SADJ;;;;KARkB;AAAsB;;;;;;;;AA1hBb,QAyjB3B,mBAAmB,SAAnB,gBAAmB,CAAU,KAAV,EAAiB,KAAjB,EAAwB,eAAxB,EAAyC;;AAE5D,YAAI,MAAM,MAAN,KAAiB,CAAjB,EAAoB;AACpB,mBAAO,KAAP,CADoB;SAAxB;;AAIA,YAAI,SAAS,MAAM,SAAN,EAAT;;;AANwD,cAS5D,CAAO,KAAP,GAT4D;;AAW5D,YAAI,MAAM,cAAc,MAAd,CAAqB,KAArB,EAA4B,UAAU,MAAV,EAAkB;;;AAGpD,gBAAI,SAAS,OAAO,SAAP,EAAT,CAHgD;AAIpD,gBAAI,WAAW,OAAO,YAAP,CAAoB,MAApB,EAA4B,eAA5B,CAAX,CAJgD;AAKpD,mBAAO,WAAP,CAAmB,QAAnB;;;AALoD,iBAQpD,CAAM,UAAN,CAAiB,IAAjB,EARoD;SAAlB,CAAlC;;;;;;;;AAXwD,eA6BrD,GAAP,CA7B4D;KAAzC;;;;;;;;AAzjBQ,QAkmB3B,iBAAiB,SAAjB,cAAiB,CAAU,OAAV,EAAmB;;AACpC,YAAI,SAAS,CAAT,CADgC;AAEpC,YAAI,OAAO,QAAQ,GAAR,CAAY,MAAZ,CAAP;AAFgC,YAGhC,QAAQ,KAAK,KAAL,CAAW,uBAAX,CAAR,CAHgC;AAIpC,YAAI,KAAJ,EAAW;AACP,gBAAI,QAAQ,SAAS,MAAM,CAAN,CAAT,EAAmB,EAAnB,CAAR,CADG;AAEP,gBAAI,UAAU,SAAS,MAAM,CAAN,CAAT,EAAmB,EAAnB,CAAV,CAFG;AAGP,qBAAS,KAAK,KAAL,GAAa,OAAb,CAHF;SAAX;AAKA,YAAI,OAAO,IAAI,IAAJ,EAAP,CATgC;AAUpC,YAAI,QAAQ,IAAI,IAAJ,CAAS,KAAK,OAAL,KACjB,CAAC,KAAK,iBAAL,KAA2B,MAA3B,CAAD,GAAsC,KAAtC,CADA;;AAVgC,YAahC,QAAQ,KAAK,GAAL,CAAS,KAAK,MAAM,QAAN,EAAL,GAAyB,MAAM,UAAN,KAAqB,EAArB,CAA1C,CAbgC;AAcpC,YAAI,QAAQ,EAAR,EAAY;AACZ,oBAAQ,KAAK,KAAL,CADI;SAAhB;AAGA,YAAI,UAAU,QAAQ,IAAI,QAAQ,EAAR,CAAZ,CAjBsB;AAkBpC,eAAO,CAAC,IAAI,GAAG,KAAH,CAAS,KAAT,CAAe;AACvB,kBAAM,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACpB,uBAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,OAAnB,CAAP;;AADoB,aAAlB,CAAN;AAIA,oBAAQ,IAAI,GAAG,KAAH,CAAS,MAAT,CAAgB;AACxB,uBAAO,SAAP;aADI,CAAR;SALI,CAAD,CAAP,CAlBoC;KAAnB;;;AAlmBU,UAgoB/B,CAAO,aAAP,GAAuB,YAAY;AAC/B,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,eAAN;AACA,mBAAO,wFAAP;AACA,qBAAS,IAAT;AACA,kBAAM,MAAN;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;;AAEtB,sBAAM,CACF,WAAW,4CAAX;;AADE,iBAAN;aAFI,CAAR;SALG,CAAP,CAD+B;KAAZ,CAhoBQ;AA+oB/B,WAAO,UAAP,GAAoB,YAAY;AAC5B,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,YAAN;AACA,mBAAO,uFAAP;AACA,kBAAM,MAAN;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,8BAAc,CACV,IAAI,GAAG,WAAH,CAAe;AACf,0BAAM,qBACE,qDADF;iBADV,CADU,EAKV,GAAG,MAAH,CAAU,GAAV,CAAc,WAAd,CALJ;AAOA,6BAAa,IAAb;AACA,sBAAM,CACF,qDADE,EAEF,kDAFE,CAAN;aATI,CAAR;SAJG,CAAP,CAD4B;KAAZ,CA/oBW;AAoqB/B,WAAO,yBAAP,GAAmC,YAAY;AAC3C,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,2BAAN;AACA,mBAAO,4FAAP;AACA,kBAAM,MAAN;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,8BAAc,CACV,IAAI,GAAG,WAAH,CAAe;AACf,0BAAM,qBACE,0DADF;iBADV,CADU,EAKV,GAAG,MAAH,CAAU,GAAV,CAAc,WAAd,CALJ;AAOA,qBAAK,WAAW,mDAAX;aARD,CAAR;SAJG,CAAP,CAD2C;KAAZ,CApqBJ;AAqrB/B,WAAO,WAAP,GAAqB,YAAY;AAC7B,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,aAAN;AACA,mBAAO,8EAAP;AACA,kBAAM,MAAN;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,QAAV,CAAmB;AAC3B,uBAAO,KAAP;aADI,CAAR;SAJG,CAAP,CAD6B;KAAZ,CArrBU;AA+rB/B,WAAO,WAAP,GAAqB,YAAY;AAC7B,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,aAAN;AACA,mBAAO,iFAAP;AACA,kBAAM,MAAN;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,QAAV,CAAmB;AAC3B,uBAAO,KAAP;aADI,CAAR;SAJG,CAAP,CAD6B;KAAZ;;AA/rBU,UA0sB/B,CAAO,YAAP,GAAsB,YAAY;AAC9B,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,cAAN;AACA,mBAAO,0FAAP;AACA,kBAAM,MAAN;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,8BAAc,CACV,IAAI,GAAG,WAAH,CAAe;AACf,0BAAM,qBACE,yDADF;iBADV,CADU,EAKV,GAAG,MAAH,CAAU,GAAV,CAAc,WAAd,CALJ;AAOA,qBAAK,0DAAL;aARI,CAAR;SAJG,CAAP,CAD8B;KAAZ;;AA1sBS,UA4tB/B,CAAO,sBAAP,GAAgC,YAAY;AACxC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,wBAAN;AACA,mBAAO,yFAAP;AACA,kBAAM,MAAN;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,8BAAc,CACV,IAAI,GAAG,WAAH,CAAe;AACf,0BAAM,qBACE,2DADF;iBADV,CADU,EAKV,GAAG,MAAH,CAAU,GAAV,CAAc,WAAd,CALJ;AAOA,qBAAK,+DAAL;aARI,CAAR;SAJG,CAAP,CADwC;KAAZ;;AA5tBD,UA8uB/B,CAAO,0BAAP,GAAoC,YAAY;AAC5C,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,4BAAN;AACA,mBAAO,6FAAP;AACA,kBAAM,MAAN;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,8BAAc,CACV,IAAI,GAAG,WAAH,CAAe;AACf,0BAAM,qBACE,2DADF;iBADV,CADU,EAKV,GAAG,MAAH,CAAU,GAAV,CAAc,WAAd,CALJ;AAOA,qBAAK,qEAAL;aARI,CAAR;SAJG,CAAP,CAD4C;KAAZ;;AA9uBL,UAgwB/B,CAAO,sBAAP,GAAgC,YAAY;AACxC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,wBAAN;AACA,mBAAO,wFAAP;AACA,kBAAM,MAAN;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,8BAAc,CACV,IAAI,GAAG,WAAH,CAAe;AACf,0BAAM,qBACE,2DADF;iBADV,CADU,EAKV,GAAG,MAAH,CAAU,GAAV,CAAc,WAAd,CALJ;AAOA,qBAAK,gEAAL;aARI,CAAR;SAJG,CAAP,CADwC;KAAZ;;AAhwBD,UAkxB/B,CAAO,oBAAP,GAA8B,YAAY;AACtC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,sBAAN;AACA,mBAAO,iGAAP;AACA,kBAAM,MAAN;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,8BAAc,CACV,IAAI,GAAG,WAAH,CAAe;AACf,0BAAM,qBACE,2DADF;iBADV,CADU,EAKV,GAAG,MAAH,CAAU,GAAV,CAAc,WAAd,CALJ;AAOA,qBAAK,+DAAL;aARI,CAAR;SAJG,CAAP,CADsC;KAAZ,CAlxBC;AAmyB/B,WAAO,MAAP,GAAgB,YAAY;AACxB,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,QAAN;AACA,mBAAO,oFAAP;AACA,kBAAM,MAAN;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,6BAAa,WAAb;AACA,8BAAc,CACV,IAAI,GAAG,WAAH,CAAe;AACf,0BAAM,oEACE,oDADF;iBADV,CADU,CAAd;AAMA,qBAAK,WAAW,iDAAX,GACG,2CADH;aARD,CAAR;SAJG,CAAP,CADwB;KAAZ,CAnyBe;AAqzB/B,WAAO,oBAAP,GAA8B,YAAY;AACtC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,sBAAN;AACA,mBAAO,wFAAP;AACA,kBAAM,MAAN;AACA,oBAAQ,CAAC,CAAC,QAAD,EAAW,OAAZ,EAAqB,CAAC,OAAD,EAAU,OAA/B,CAAR;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,cAAV,CAAyB;AACjC,qBAAK,WAAW,kEAAX,GAAgF,qCAAhF;aADD,CAAR;SALG,CAAP,CADsC;KAAZ,CArzBC;AAg0B/B,WAAO,SAAP,GAAmB,YAAY;AAC3B,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,WAAN;AACA,mBAAO,gFAAP;AACA,kBAAM,MAAN;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,6BAAa,WAAb;AACA,qBAAK,WAAW,kEAAX;aAFD,CAAR;SAJG,CAAP,CAD2B;KAAZ,CAh0BY;AA20B/B,WAAO,aAAP,GAAuB,YAAY;AAC/B,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,eAAN;AACA,mBAAO,wFAAP;AACA,kBAAM,MAAN;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,6BAAa,WAAb;AACA,qBAAK,WAAW,iFAAX;;AAFiB,aAAlB,CAAR;SAJG,CAAP,CAD+B;KAAZ,CA30BQ;AAu1B/B,WAAO,eAAP,GAAyB,YAAY;AACjC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,iBAAN;AACA,mBAAO,mFAAP;AACA,kBAAM,MAAN;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,6BAAa,WAAb;;AAEA,qBAAK,WAAW,+EAAX;;AAHiB,aAAlB,CAAR;SAJG,CAAP,CADiC;KAAZ,CAv1BM;AAo2B/B,WAAO,QAAP,GAAkB,YAAY;AAC1B,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,UAAN;AACA,mBAAO,4EAAP;AACA,kBAAM,MAAN;AACA,qBAAS,EAAT;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,QAAV,CAAmB;AAC3B,qBAAK,SAAS,WAAT;AACL,4BAAY,MAAZ;aAFI,CAAR;SALG,CAAP,CAD0B;KAAZ,CAp2Ba;AAg3B/B,WAAO,UAAP,GAAoB,YAAY;AAC5B,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,YAAN;AACA,mBAAO,+EAAP;AACA,kBAAM,MAAN;AACA,qBAAS,EAAT;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,QAAV,CAAmB;AAC3B,qBAAK,SAAS,WAAT;AACL,4BAAY,QAAZ;aAFI,CAAR;SALG,CAAP,CAD4B;KAAZ,CAh3BW;AA43B/B,WAAO,oBAAP,GAA8B,YAAY;AACtC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,sBAAN;AACA,mBAAO,2FAAP;AACA,kBAAM,MAAN;AACA,qBAAS,EAAT;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,QAAV,CAAmB;AAC3B,qBAAK,SAAS,WAAT;AACL,4BAAY,kBAAZ;aAFI,CAAR;SALG,CAAP,CADsC;KAAZ,CA53BC;AAw4B/B,WAAO,eAAP,GAAyB,YAAY;AACjC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,iBAAN;AACA,mBAAO,+EAAP;AACA,kBAAM,MAAN;AACA,qBAAS,EAAT;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,QAAV,CAAmB;AAC3B,qBAAK,SAAS,WAAT;AACL,4BAAY,aAAZ;aAFI,CAAR;SALG,CAAP,CADiC;KAAZ,CAx4BM;AAo5B/B,WAAO,kBAAP,GAA4B,YAAY;AACpC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,oBAAN;AACA,mBAAO,kFAAP;AACA,kBAAM,MAAN;AACA,qBAAS,EAAT;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,QAAV,CAAmB;AAC3B,qBAAK,SAAS,WAAT;AACL,4BAAY,gBAAZ;aAFI,CAAR;SALG,CAAP,CADoC;KAAZ;;;;AAp5BG,UAm6B/B,CAAO,WAAP,GAAqB,YAAY;AAC7B,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,aAAN;AACA,mBAAO,yEAAP;AACA,kBAAM,MAAN;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,MAAV,CAAiB;AACzB,uBAAO,OAAP;aADI,CAAR;SAJG,CAAP,CAD6B;KAAZ,CAn6BU;AA66B/B,WAAO,eAAP,GAAyB,YAAY;AACjC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,iBAAN;AACA,mBAAO,gFAAP;AACA,kBAAM,MAAN;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,MAAV,CAAiB;AACzB,uBAAO,YAAP;aADI,CAAR;SAJG,CAAP,CADiC;KAAZ,CA76BM;AAu7B/B,WAAO,qBAAP,GAA+B,YAAY;AACvC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,uBAAN;AACA,mBAAO,gFAAP;AACA,kBAAM,MAAN;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,MAAV,CAAiB;AACzB,uBAAO,kBAAP;aADI,CAAR;SAJG,CAAP,CADuC;KAAZ,CAv7BA;AAi8B/B,WAAO,gBAAP,GAA0B,YAAY;AAClC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,kBAAN;AACA,mBAAO,gFAAP;AACA,kBAAM,MAAN;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,MAAV,CAAiB;AACzB,uBAAO,YAAP;aADI,CAAR;SAJG,CAAP,CADkC;KAAZ;;AAj8BK,UA48B/B,CAAO,aAAP,GAAuB,YAAY;AAC/B,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,eAAN;AACA,mBAAO,6EAAP;AACA,kBAAM,MAAN;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,MAAV,CAAiB;AACzB,uBAAO,SAAP;aADI,CAAR;SAJG,CAAP,CAD+B;KAAZ,CA58BQ;AAs9B/B,WAAO,uBAAP,GAAiC,YAAY;AACzC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,qBAAN;AACA,mBAAO,sFAAP;AACA,kBAAM,MAAN;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,MAAV,CAAiB;AACzB,uBAAO,gBAAP;aADI,CAAR;SAJG,CAAP,CADyC;KAAZ,CAt9BF;AAg+B/B,WAAO,eAAP,GAAyB,YAAY;AACjC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,iBAAN;AACA,mBAAO,QAAP;AACA,kBAAM,MAAN;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,sBAAM,EAAN;aADI,CAAR;SAJG,CAAP,CADiC;KAAZ,CAh+BM;AA0+B/B,WAAO,iBAAP,GAA2B,YAAY;AACnC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,mBAAN;AACA,mBAAO,yFAAP;AACA,kBAAM,MAAN;;AAEA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,yBAAS,EAAT;AACA,sBAAM,CACF,uEADE,CAAN;aAFI,CAAR;SALG,CAAP,CADmC;KAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA1+BI,UA4hC/B,CAAO,UAAP,GAAoB,YAAY;AAC5B,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,YAAN;AACA,mBAAO,qFAAP;AACA,qBAAS,IAAT;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,6BAAa,WAAb;AACA,qBAAK,WAAW,gFAAX;;AAFiB,aAAlB,CAAR;SAJG,CAAP,CAD4B;KAAZ,CA5hCW;AAwiC/B,WAAO,YAAP,GAAsB,YAAY;AAC9B,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,cAAN;AACA,mBAAO,sFAAP;AACA,qBAAS,IAAT;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,6BAAa,WAAb;AACA,qBAAK,WAAW,kEAAX;aAFD,CAAR;SAJG,CAAP,CAD8B;KAAZ,CAxiCS;AAmjC/B,WAAO,WAAP,GAAqB,YAAY;AAC7B,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,aAAN;AACA,mBAAO,gFAAP;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,QAAV,CAAmB;AAC3B,uBAAO,KAAP;aADI,CAAR;SAHG,CAAP,CAD6B;KAAZ,CAnjCU;AA4jC/B,WAAO,aAAP,GAAuB,YAAY;AAC/B,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,eAAN;AACA,mBAAO,uFAAP;AACA,qBAAS,GAAT;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,8BAAc,CACV,IAAI,GAAG,WAAH,CAAe;AACf,0BAAM,mKAAN;iBADJ,CADU,EAIV,GAAG,MAAH,CAAU,GAAV,CAAc,WAAd,CAJJ;AAMA,6BAAa,IAAb;AACA,qBAAK,+CAAL;;;;;;AARsB,aAAlB,CAAR;SAJG,CAAP,CAD+B;KAAZ,CA5jCQ;AAklC/B,WAAO,YAAP,GAAsB,YAAY;AAC9B,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,cAAN;AACA,mBAAO,sFAAP;AACA,qBAAS,GAAT;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,8BAAc,CACV,IAAI,GAAG,WAAH,CAAe;AACf,0BAAM,mKAAN;iBADJ,CADU,EAIV,GAAG,MAAH,CAAU,GAAV,CAAc,WAAd,CAJJ;AAMA,6BAAa,IAAb;AACA,qBAAK,8CAAL;aARI,CAAR;SAJG,CAAP,CAD8B;KAAZ,CAllCS;AAmmC/B,WAAO,iBAAP,GAA2B,YAAY;AACnC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,mBAAN;AACA,mBAAO,oFAAP;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,MAAV,CAAiB;AACzB,uBAAO,cAAP;aADI,CAAR;SAHG,CAAP,CADmC;KAAZ,CAnmCI;AA4mC/B,WAAO,iBAAP,GAA2B,YAAY;AACnC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,mBAAN;AACA,mBAAO,4EAAP;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,MAAV,CAAiB;AACzB,uBAAO,cAAP;aADI,CAAR;SAHG,CAAP,CADmC;KAAZ,CA5mCI;AAqnC/B,WAAO,gBAAP,GAA0B,YAAY;AAClC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,kBAAN;AACA,mBAAO,2EAAP;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,MAAV,CAAiB;AACzB,uBAAO,aAAP;aADI,CAAR;SAHG,CAAP,CADkC;KAAZ;;AArnCK,UA+nC/B,CAAO,gBAAP,GAA0B,YAAY;AAClC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,kBAAN;AACA,mBAAO,wFAAP;AACA,qBAAS,GAAT;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,qBAAK,sEAAL;aADI,CAAR;SAJG,CAAP,CADkC;KAAZ,CA/nCK;AAyoC/B,WAAO,gBAAP,GAA0B,YAAY;AAClC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,kBAAN;AACA,mBAAO,wFAAP;AACA,qBAAS,GAAT;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,qBAAK,sEAAL;aADI,CAAR;SAJG,CAAP,CADkC;KAAZ;;AAzoCK,UAopC/B,CAAO,mBAAP,GAA6B,YAAY;AACrC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,qBAAN;AACA,mBAAO,oGAAP;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,yBAAS,EAAT;AACA,qBAAK,qEAAL;aAFI,CAAR;SAHG,CAAP,CADqC;KAAZ,CAppCE;AA8pC/B,WAAO,mBAAP,GAA6B,YAAY;AACrC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,qBAAN;AACA,mBAAO,2GAAP;AACA,qBAAS,GAAT;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,qBAAK,qEAAL;aADI,CAAR;SAJG,CAAP,CADqC;KAAZ,CA9pCE;AAwqC/B,WAAO,mBAAP,GAA6B,YAAY;AACrC,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,qBAAN;AACA,mBAAO,iGAAP;AACA,qBAAS,GAAT;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,qBAAK,qEAAL;aADI,CAAR;SAJG,CAAP,CADqC;KAAZ;;;;;AAxqCE,QAwrC3B,YAAY,SAAZ,SAAY,GAAY;AACxB,gBAAQ,IAAR,CAAa,mCAAb,EADwB;KAAZ;;;;;;;;;;AAxrCe,QAssC3B,QAAQ,SAAR,KAAQ,CAAU,MAAV,EAAkB,IAAlB,EAAwB;AAClC,YAAI,iBAAiB,OAAO,CAAP,CAAjB,CAD8B;AAElC,YAAI,QAAQ,eAAe,KAAf,CAFsB;AAGlC,YAAI,SAAS,eAAe,MAAf,CAHqB;AAIlC,YAAI,gBAAgB,eAAe,IAAf,CAJc;AAKlC,YAAI,YAAY,IAAI,iBAAJ,CAAsB,cAAc,MAAd,CAAlC,CAL8B;AAMlC,YAAI,KAAK,KAAK,UAAL,GAAkB,CAAlB,CANyB;AAOlC,YAAI,OAAO,QAAQ,CAAR,CAPuB;AAQlC,YAAI,OAAO,SAAS,CAAT,CARuB;AASlC,YAAI,QAAQ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAR,CAT8B;AAUlC,YAAI,QAAQ,IAAI,KAAK,EAAL,CAVkB;AAWlC,YAAI,SAAS,KAAK,EAAL,GAAU,CAAV,CAXqB;AAYlC,YAAI,QAAQ,KAAK,EAAL,GAAU,KAAK,KAAL,GAAa,GAAvB,CAZsB;AAalC,YAAI,QAAQ,KAAK,EAAL,GAAU,KAAK,KAAL,GAAa,GAAvB,CAbsB;AAclC,YAAI,WAAW,KAAK,GAAL,CAAS,KAAT,CAAX,CAd8B;AAelC,YAAI,WAAW,KAAK,GAAL,CAAS,KAAT,CAAX,CAf8B;AAgBlC,YAAI,MAAJ,EAAY,MAAZ,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,MAApC,EACI,EADJ,EACQ,EADR,EACY,IADZ,EACkB,IADlB,EACwB,KADxB,EAC+B,MAD/B,EACuC,YADvC,EACqD,MADrD,CAhBkC;AAkBlC,aAAK,SAAS,CAAT,EAAY,UAAU,IAAV,EAAgB,EAAE,MAAF,EAAU;AACzC,iBAAK,WAAW,CAAX,GAAe,CAAf,GAAmB,SAAS,CAAT,CADiB;AAEzC,iBAAK,WAAW,IAAX,GAAkB,IAAlB,GAAyB,SAAS,CAAT,CAFW;AAGzC,iBAAK,SAAS,CAAT,EAAY,UAAU,IAAV,EAAgB,EAAE,MAAF,EAAU;AACzC,qBAAK,WAAW,CAAX,GAAe,CAAf,GAAmB,SAAS,CAAT,CADiB;AAEzC,qBAAK,WAAW,IAAX,GAAkB,IAAlB,GAAyB,SAAS,CAAT;;AAFW,sBAIzC,GAAS,CAAC,SAAS,KAAT,GAAiB,EAAjB,CAAD,GAAwB,CAAxB,CAJgC;AAKzC,sBAAM,CAAN,IAAW,cAAc,MAAd,CAAX,CALyC;AAMzC,sBAAM,CAAN,IAAW,cAAc,SAAS,CAAT,CAAzB,CANyC;AAOzC,sBAAM,CAAN,IAAW,cAAc,SAAS,CAAT,CAAzB,CAPyC;AAQzC,sBAAM,CAAN,IAAW,cAAc,SAAS,CAAT,CAAzB,CARyC;AASzC,qBAAK,KAAK,IAAL,IAAa,MAAM,CAAN,IAAW,MAAM,CAAN,IAAW,CAAX,GAAe,MAAM,CAAN,IAAW,CAAX,CAAvC;;AAToC,sBAWzC,GAAS,CAAC,SAAS,KAAT,GAAiB,EAAjB,CAAD,GAAwB,CAAxB,CAXgC;AAYzC,sBAAM,CAAN,IAAW,cAAc,MAAd,CAAX,CAZyC;AAazC,sBAAM,CAAN,IAAW,cAAc,SAAS,CAAT,CAAzB,CAbyC;AAczC,sBAAM,CAAN,IAAW,cAAc,SAAS,CAAT,CAAzB,CAdyC;AAezC,sBAAM,CAAN,IAAW,cAAc,SAAS,CAAT,CAAzB,CAfyC;AAgBzC,qBAAK,KAAK,IAAL,IAAa,MAAM,CAAN,IAAW,MAAM,CAAN,IAAW,CAAX,GAAe,MAAM,CAAN,IAAW,CAAX,CAAvC,CAhBoC;AAiBzC,uBAAO,CAAC,KAAK,EAAL,CAAD,GAAY,EAAZ;;AAjBkC,sBAmBzC,GAAS,CAAC,KAAK,KAAL,GAAa,MAAb,CAAD,GAAwB,CAAxB,CAnBgC;AAoBzC,sBAAM,CAAN,IAAW,cAAc,MAAd,CAAX,CApByC;AAqBzC,sBAAM,CAAN,IAAW,cAAc,SAAS,CAAT,CAAzB,CArByC;AAsBzC,sBAAM,CAAN,IAAW,cAAc,SAAS,CAAT,CAAzB,CAtByC;AAuBzC,sBAAM,CAAN,IAAW,cAAc,SAAS,CAAT,CAAzB,CAvByC;AAwBzC,qBAAK,KAAK,IAAL,IAAa,MAAM,CAAN,IAAW,MAAM,CAAN,IAAW,CAAX,GAAe,MAAM,CAAN,IAAW,CAAX,CAAvC;;AAxBoC,sBA0BzC,GAAS,CAAC,KAAK,KAAL,GAAa,MAAb,CAAD,GAAwB,CAAxB,CA1BgC;AA2BzC,sBAAM,CAAN,IAAW,cAAc,MAAd,CAAX,CA3ByC;AA4BzC,sBAAM,CAAN,IAAW,cAAc,SAAS,CAAT,CAAzB,CA5ByC;AA6BzC,sBAAM,CAAN,IAAW,cAAc,SAAS,CAAT,CAAzB,CA7ByC;AA8BzC,sBAAM,CAAN,IAAW,cAAc,SAAS,CAAT,CAAzB,CA9ByC;AA+BzC,qBAAK,KAAK,IAAL,IAAa,MAAM,CAAN,IAAW,MAAM,CAAN,IAAW,CAAX,GAAe,MAAM,CAAN,IAAW,CAAX,CAAvC,CA/BoC;AAgCzC,uBAAO,CAAC,KAAK,EAAL,CAAD,GAAY,EAAZ,CAhCkC;AAiCzC,wBAAQ,KAAK,IAAL,CAAU,KAAK,IAAL,CAAU,OAAO,IAAP,GAAc,OAAO,IAAP,CAAlC,CAAR,CAjCyC;AAkCzC,yBAAS,KAAK,KAAL,CAAW,IAAX,EAAiB,CAAC,IAAD,CAA1B,CAlCyC;AAmCzC,oBAAI,SAAS,CAAT,EAAY;AACd,6BAAS,SAAS,MAAT,CADK;iBAAhB,MAEO,IAAI,SAAS,MAAT,EAAiB;AAC1B,6BAAS,QAAQ,MAAR,GAAiB,MAAjB,CADiB;iBAArB,MAEA;AACL,6BAAS,SAAS,MAAT,CADJ;iBAFA;AAKP,+BAAe,WAAW,KAAK,GAAL,CAAS,KAAT,CAAX,GACX,WAAW,KAAK,GAAL,CAAS,KAAT,CAAX,GAA6B,KAAK,GAAL,CAAS,QAAQ,MAAR,CAAtC,CA3CqC;AA4CzC,yBAAS,CAAC,SAAS,KAAT,GAAiB,MAAjB,CAAD,GAA4B,CAA5B,CA5CgC;AA6CzC,yBAAS,MAAM,YAAN,CA7CgC;AA8CzC,0BAAU,MAAV,IAAoB,MAApB,CA9CyC;AA+CzC,0BAAU,SAAS,CAAT,CAAV,GAAwB,MAAxB,CA/CyC;AAgDzC,0BAAU,SAAS,CAAT,CAAV,GAAwB,MAAxB,CAhDyC;AAiDzC,0BAAU,SAAS,CAAT,CAAV,GAAwB,cAAc,SAAS,CAAT,CAAtC,CAjDyC;aAA3C;SAHF;AAuDA,eAAO,IAAI,SAAJ,CAAc,SAAd,EAAyB,KAAzB,EAAgC,MAAhC,CAAP,CAzEkC;KAAxB,CAtsCmB;;AAkxC/B,WAAO,kBAAP,GAA4B,YAAY;AACpC,eAAO,IAAI,GAAG,KAAH,CAAS,KAAT,CAAe;AACtB,kBAAM,oBAAN;AACA,mBAAO,8EAAP;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,MAAV,CAAiB;AACzB,yBAAS,CACL,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACd,yBAAK,6DAAL;AACA,iCAAa,WAAb;iBAFJ,CADK,CAAT;AAMA,+BAAe,OAAf;AACA,2BAAW,KAAX;aARI,CAAR;AAUA,qBAAS,GAAT;SAbG,CAAP,CADoC;KAAZ;;AAlxCG,UAoyC/B,CAAO,SAAP,GAAmB,YAAY;AAC3B,eAAO,IAAI,GAAG,KAAH,CAAS,MAAT,CAAgB;AACvB,kBAAM,WAAN;AACA,mBAAO,YAAP;AACA,mBAAO,cAAP;AACA,2BAAe,IAAf;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,MAAV,CAAiB;AACrB,+BAAe,KAAf;AACA,4BAAY,WAAZ;AACA,qBAAK,wBAAL;AACA,wBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,EAAZ;aAJA,CAAR;;;;;;;AALuB,SAApB,CAAP,CAD2B;KAAZ,CApyCY;AAwzC/B,WAAO,OAAP,GAAiB,YAAY;AACzB,eAAO,IAAI,GAAG,KAAH,CAAS,MAAT,CAAgB;AACvB,kBAAM,SAAN;AACA,mBAAO,YAAP;AACA,qBAAS,KAAT;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,MAAV,CAAiB;AACzB,qBAAK,EAAL;AACA,wBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,EAAZ;aAFI,CAAR;AAIA,mBAAO,IAAI,GAAG,KAAH,CAAS,KAAT,CAAe;AACtB,wBAAQ,IAAI,GAAG,KAAH,CAAS,MAAT,CAAgB;AACxB,2BAAO,SAAP;AACA,2BAAO,CAAP;iBAFI,CAAR;aADG,CAAP;SARG,CAAP,CADyB;KAAZ,CAxzCc;;AA00C/B,WAAO,aAAP,GAAuB,YAAY;AAC/B,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,SAAN;AACA,mBAAO,aAAP;;;AAFqB,SAAlB,CAAP,CAD+B;KAAZ,CA10CQ;AAk1C/B,WAAO,aAAP,GAAuB,YAAY;AAC/B,eAAO,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACrB,kBAAM,eAAN;AACA,mBAAO,QAAP;AACA,oBAAQ,IAAI,GAAG,MAAH,CAAU,GAAV,CAAc;AACtB,sBAAM,EAAN;aADI,CAAR;SAHG,CAAP,CAD+B;KAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAl1CQ,WAi/CxB;AACH,gBAAQ,MAAR;AACA,0BAAkB,gBAAlB;AACA,0BAAkB,gBAAlB;AACA,uBAAe,aAAf;AACA,kBAAU,QAAV;AACA,qBAAa,WAAb;AACA,yBAAiB,eAAjB;KAPJ,CAj/C+B;CAAZ,EAAnB","file":"mapLayersModule.js","sourcesContent":["/*eslint-env browser, jquery */\n/*global console, $, ol, Basil, parsley, commonsModule */\n/**\n * OL3 layers module.\n * @module\n * @external $\n * @external ol\n * @return {Object} Public functions / variables\n */\n/*eslint-disable no-unused-vars*/\nvar mapLayersModule = (function () {\n    /*eslint-enable no-unused-vars*/\n    'use strict';\n\n    var settings = {\n        debug: false,\n        bingMapsKey: 'Ak-dzM4wZjSqTlzveKz5u0d4IQ4bRzVI309GxmkgSVr1ewS6iPSrOvOKhA-CJlm3',\n        properties: {\n            visible: false\n        },\n        basil: {\n        }\n    };\n\n    var olLayerTypes = ['Base', 'Group', 'Heatmap', 'Image', 'Layer', 'Tile', 'Vector', 'VectorTile'];\n\n    var olSourceTypes = ['BingMaps', 'CartoDB', 'Cluster',\n       'Image', 'ImageCanvas', 'ImageMapGuide', 'ImageStatic', 'ImageVector',\n       'ImageWMS', 'MapQuest', 'OSM', 'Raster', 'Source', 'Stamen', 'Tile',\n       'TileArcGISRest', 'TileDebug', 'TileImage', 'TileJSON', 'TileUTFGrid',\n       'TileWMS', 'Vector', 'VectorTile', 'WMTS', 'XYZ', 'Zoomify'];\n       // 'ImageArcGISRest', 'ImageEvent', 'RasterEvent', 'TileEvent', 'VectorEvent', 'UrlTile',\n\n    var olFormatTypes = ['GMLBase', 'JSONFeature', 'TextFeature',\n       'XML', 'XMLFeature', 'EsriJSON', 'Feature', 'GeoJSON', 'GML', 'GML2', 'GML3', 'GPX',\n       'IGC', 'KML', 'MVT', 'OSMXML', 'Polyline', 'TopoJSON', 'WFS', 'WKT',\n       'WMSCapabilities', 'WMSGetFeatureInfo', 'WMTSCapabilities'];\n\n    var olStyleTypes = ['AtlasManager', 'Circle', 'Fill', 'Icon', 'Image', 'RegularShape',\n        'Stroke', 'Style', 'Text'];\n\n    var olSourceGetters = {'revision': 'getRevision', 'state': 'getState', 'urls': 'getUrls', 'url': 'getUrl'};\n        //'attributions': 'getAttributions', 'logo': 'getLogo', 'projection': 'getProjection',\n        //'tileGrid': 'getTileGrid', 'tileLoadFunction': 'getTileLoadFunction', 'tileUrlFunction': 'getTileUrlFunction'\n    //var olSourceSetters = {'revision': 'setRevision', 'state': 'setState', 'urls': 'setUrls', 'url': 'setUrl'};\n    var olStyleTypeGetters = {'Fill': 'getFill', 'Image': 'getImage', 'Stroke': 'getStroke', 'Text': 'getText'};\n    var olStylePropertyGetters = {'color': 'getColor', 'lineCap': 'getLineCap', 'geometry': 'getGeometry', 'geometryFunction': 'getGeometryFunction', 'lineDash': 'getLineDash',\n        'lineJoin': 'getLineJoin', 'miterLimit': 'getMiterLimit', 'width': 'getWidth', 'zIndex': 'getZIndex'};\n    var olStylePropertySetters = {'color': 'setColor', 'lineCap': 'setLineCap', 'geometry': 'setGeometry', 'geometryFunction': 'setGeometryFunction', 'lineDash': 'setLineDash',\n        'lineJoin': 'setLineJoin', 'miterLimit': 'setMiterLimit', 'width': 'setWidth', 'zIndex': 'getZIndex'};\n\n\n    var protocol = (window.location.protocol === 'https:') ? 'https:' : 'http:';\n\n    var layers = {};\n    var selectedLayer;\n    var basil;\n\n    if (typeof Basil === 'function') {\n        basil = new window.Basil(settings.basil);\n    }\n\n\n\n    /**\n     * Display some logs about layer events\n     * @private\n     * @param {Object} layer - ol.layer\n     */\n    var debug = function (layer) {\n\n        if (!settings.debug) {\n            commonsModule.hideLogs();\n            return false;\n        }\n\n        // postcompose precompose render propertychange\n        'change change:blur change:extent change:gradient change:layers change:maxResolution change:minResolution change:opacity change:preload change:radius change:source change:useInterimTilesOnError change:visible change:zIndex'.split(' ').forEach(function (eventType) {\n            layer.on(eventType, function (e) {\n                if (e.key) {\n                    console.log('Layer ' + e.key + ' changed', layer.get(e.key));\n                } else {\n                    console.log(e.target.get('name') + ' layer' + e.type, e);\n                }\n\n            });\n        });\n\n    };\n\n\n\n    /**\n     * Restore some properties from the local storage and save changes\n     * @private\n     * @param {Object} layer - ol.layer\n     */\n    var watchLayerChanges = function (layer) {\n\n        // Store layer properties changes\n        layer.on('propertychange', function () {\n\n            var namespace = layer.get('name');\n            if (namespace) {\n\n                var properties = layer.getProperties();\n                var key = 'properties';\n                var value = {\n                    visible: properties.visible,\n                    zIndex: properties.zIndex,\n                    opacity: properties.opacity\n                };\n                basil.set(key, value, {'namespace': namespace});\n                console.log(namespace + ' properties stored', value);\n\n            }\n\n        });\n\n    };\n\n\n\n    /**\n     * Restore all layers properties from the local storage\n     * @private\n     * @param {Object} layer - ol.layer\n     */\n    var restoreLayer = function (layer) {\n\n        var namespace = layer.get('name');\n        if (namespace) {\n\n            var key = 'properties';\n            var value = basil.get(key, {'namespace': namespace});\n            if (value !== null) {\n                layer.setProperties(value);\n                console.log(namespace + ' ' + key + ' restored', value);\n            }\n\n        }\n\n    };\n\n\n\n    /**\n     * Create a new layer using predefined settings\n     * @public\n     * @param {string} name - Predefined layer (variable name)\n     * @param {Object} [properties] - Layer custom parameters\n     * @return {Object} OL3 layer\n     */\n    var create = function (name, properties) {\n\n        if (!layers[name]) {\n            console.warn(name + ' layer definition is not defined');\n            return false;\n        }\n\n        // Define the new layer with a predefined layer\n        var layer = layers[name]();\n\n        debug(layer);\n\n        // Apply default and custom settings\n        layer.setProperties($.extend(true, {}, settings.properties, properties));\n\n        // Append a link to the settings after each title\n        var title = layer.get('title');\n        if (title) {\n            layer.set('title', title\n                + ' <a href=\"#layer_settings_modal\" data-toggle=\"modal\" data-layer=\"' + name + '\">'\n                + '<span class=\"glyphicon glyphicon-cog\"></span></a>');\n        }\n\n        if (basil) {\n            restoreLayer(layer);\n            watchLayerChanges(layer);\n        }\n\n        return layer;\n    };\n\n\n\n    /**\n     * Apply a function on (nested) layers\n     * @public\n     * @param {Object} layer - Map object or layer group\n     * @param {function} fn - Function with layer as parameter, to apply to each layer\n     */\n    var treatLayers = function (layer, fn) {\n\n        $.each(layers, function (i, l) {\n            if (l.getLayers()) {\n                treatLayers(l, fn);\n            } else {\n                fn(l);\n            }\n        });\n\n    };\n\n\n\n    /**\n     * Live update layer values once a field was validated by Parsley\n     * @public\n     * @param {Object} layer - Map object or layer group\n     */\n    var validateSettingsForm = function (formSelector) {\n\n        var $input, key, value, style, type;\n\n        if (!$().parsley) {\n            console.warn('Parsley is not defined');\n            return false;\n        }\n\n        var $form = $(formSelector);\n        $form.parsley({\n            excluded: 'input[type=button], input[type=submit], input[type=reset], input[type=hidden], [disabled], :hidden'\n        })\n            .on('field:success', function() {\n                $input = this.$element;\n\n                // Update layer properties\n                if ($input.is('[data-ol-layer][data-ol-property]')) {\n                    key = $input.data('ol-property');\n                    value = commonsModule.getInputValue($input);\n                    if (key && value !== null) {\n                        selectedLayer.set(key, value);\n                    }\n                }\n\n                // Update source urls\n                if ($input.is('[data-ol-source][data-ol-property=\"urls\"]')) {\n                    value = commonsModule.getInputValue($input);\n                    value = value.split('\\n');\n                    updateSourceUrl(selectedLayer, value);\n                }\n\n                // Update source features\n                if ($input.is('[data-ol-source=\"Vector\"][data-ol-format=\"GPX\"]')) {\n                    value = commonsModule.getInputValue($input);\n                    loadFileFeatures(selectedLayer, value, {\n                        dataProjection: 'EPSG:4326',\n                        featureProjection: 'EPSG:3857'\n                    });\n                    //mapModule.fitVectorLayer(selectedLayer);\n                }\n\n                // Update layer style\n                if ($input.is('[data-ol-style][data-ol-property]')) {\n                    key = $input.data('ol-property');\n                    value = commonsModule.getInputValue($input);\n                    type = $input.data('ol-style');\n                    style = selectedLayer.getStyle();\n                    if (olStyleTypeGetters[type] && typeof style[olStyleTypeGetters[type]]) {\n                        style = style[olStyleTypeGetters[type]]();\n                        if (olStylePropertySetters[key] && typeof style[olStylePropertySetters[key]]) {\n                            style[olStylePropertySetters[key]](value);\n                        }\n                    }\n                }\n\n            })\n            .on('form:submit', function () {\n                // Prevent form submission\n                return false;\n            });\n\n    };\n\n\n\n    /**\n     * Edit layer\n     * @public\n     * @param {Object} layer - Map object or layer group\n     */\n    var initSettingsForm = function (layer, formSelector, formGroupSelector) {\n\n        var $input, $groups, key, value;\n\n        var $form = $(formSelector);\n        var $formGroups = $form.find(formGroupSelector);\n\n        // Memorize the selected layer\n        selectedLayer = layer;\n\n        // Hide every form groups\n        $formGroups.hide();\n\n        // Get layer types\n        var layerTypes = commonsModule.getInstancesOf(layer, ol.layer, olLayerTypes);\n        console.log('Layer types', layerTypes);\n\n        // Get layer properties\n        var layerKeys = layer.getKeys();\n        console.log('Layer keys', layerKeys);\n        var layerProperties = layer.getProperties(layer);\n        console.log('Layer properties', layerProperties);\n        if (typeof layer.getSource === 'function') {\n            var source = layer.getSource();\n        }\n        if (typeof layer.getStyle === 'function') {\n            var style = layer.getStyle();\n        }\n\n        // Unhide filtered form groups\n        //$groups = $formGroups.has('[data-ol-layer]');\n        var types = layerTypes;\n        types.push('*');\n        types.forEach(function (type) {\n            $groups = $formGroups.has('[data-ol-layer=\"' + type + '\"]');\n            layerKeys.forEach(function (key2) {\n                $groups.has('[data-ol-property=\"' + key2 + '\"]').show()\n                    .find('label small').html('(' + type + ')');\n            });\n        });\n\n        if (source) {\n\n            // Get source types\n            var sourceTypes = commonsModule.getInstancesOf(source, ol.source, olSourceTypes);\n            console.log('Layer source types', sourceTypes);\n\n            // Get source properties\n            var sourceKeys = source.getKeys();\n            console.log('Layer source keys', sourceKeys);\n            var sourceProperties = source.getProperties(layer);\n            console.log('Layer source properties', sourceProperties);\n            //if (typeof source.getUrls === 'function') {\n            //    var sourceUrls = source.getUrls(layer);\n            //    console.log('Source URLs', sourceUrls);\n            //}\n            if (typeof source.getFormat === 'function') {\n                var format = source.getFormat();\n            }\n\n            var sourceExtraProperties = {};\n            $.each(olSourceGetters, function (key2, getter2) {\n                if (typeof source[getter2] === 'function') {\n                    value = source[getter2]();\n                    if (value && !sourceProperties[key2]) {\n                        sourceExtraProperties[key2] = value;\n                    }\n                }\n            });\n            console.log('Source extra properties', sourceExtraProperties);\n\n            // Unhide filtered form groups\n            //$groups = $formGroups.has('[data-ol-source]');\n            types = sourceTypes;\n            types.push('*');\n            types.forEach(function (type) {\n                $groups = $formGroups.has('[data-ol-source=\"' + type + '\"]');\n                sourceKeys.forEach(function (key2) {\n                    $groups.has('[data-ol-property=\"' + key2 + '\"]').show()\n                        .find('label small').html('(' + type + ')');\n                });\n                $.each(sourceExtraProperties, function (key2) {\n                    $groups.has('[data-ol-property=\"' + key2 + '\"]').show()\n                        .find('label small').html('(' + type + ')');\n                });\n                //if (sourceUrls) {\n                //    $groups.has('[data-ol-property=\"urls\"]').show();\n                //}\n            });\n\n            if (format) {\n\n                // Get format types\n                var formatTypes = commonsModule.getInstancesOf(format, ol.format, olFormatTypes);\n                console.log('Layer format types', formatTypes);\n\n                // Unhide filtered form groups\n                //$groups = $formGroups.has('[data-ol-format]');\n                types = formatTypes;\n                types.push('*');\n                types.forEach(function (type) {\n                    $groups = $formGroups.has('[data-ol-format=\"' + type + '\"]');\n                    $groups.show()\n                        .find('label small').html('(' + type + ')');\n                });\n                $groups.has('[data-ol-format=\"\"]').show();\n\n            }\n\n            /*\n            if (typeof source.getFeatures === 'function'') {\n                var features = source.getFeatures();\n            }\n\n            if (features) {\n                $.each(features, function (i, feature) {\n\n                    var id = feature.getId();\n                    console.log('Feature id', id);\n                    var keys = feature.getKeys();\n                    console.log('Feature keys', keys);\n\n                    if (typeof feature.getFormat === 'function') {\n                        format = feature.getFormat();\n                    }\n\n                    if (format) {\n                        var types = commonsModule.getInstancesOf(format, ol.format, olFormatTypes);\n                        console.log('Feature format types', types);\n                    }\n\n                });\n            }\n            */\n\n        }\n\n        if (style) {\n\n            var styleTypes = commonsModule.getInstancesOf(style, ol.style, olStyleTypes);\n            console.log('Layer style types', styleTypes);\n\n            var styleProperties = {};\n\n            $.each(olStyleTypeGetters, function (key2, getter2) {\n                if (typeof style[getter2] === 'function') {\n\n                    styleProperties[key2] = {};\n                    value = style[getter2]();\n\n                    if (value) {\n                        styleTypes = commonsModule.getInstancesOf(value, ol.style, olStyleTypes);\n\n                        // If property is a child style\n                        if (styleTypes) {\n                            console.log('Child style ' + key2 + ' found', styleTypes);\n\n                            // Unhide filtered form groups\n                            //$groups = $formGroups.has('[data-ol-style]');\n                            types = styleTypes;\n                            types.push('*');\n                            types.forEach(function (type) {\n                                $groups = $formGroups.has('[data-ol-style=\"' + type + '\"]');\n\n                                $.each(olStylePropertyGetters, function (key3, getter3) {\n                                    if (typeof value[getter3] === 'function') {\n                                        value = value[getter3]();\n                                        //console.log(key2 + ' ' + key3 + '(' + (typeof value) + ')', value);\n                                        styleProperties[key2][key3] = value;\n                                        $groups.has('[data-ol-property=\"' + key3 + '\"]').show()\n                                            .find('label small').html('(' + type + ')');\n                                    }\n                                });\n\n                            });\n\n\n                        } else {\n                            styleProperties[key2] = value;\n                        }\n                    }\n\n                }\n            });\n            console.log('Layer style properties', styleProperties);\n\n        }\n\n        // Populate fields with layer properties\n        if (layerProperties) {\n            $formGroups.find(':input').filter('[data-ol-layer][data-ol-property]').each(function () {\n                $input = $(this);\n                key = $input.data('ol-property');\n                if (layerProperties[key] !== null) {\n                    value = layerProperties[key];\n                    commonsModule.setInputValue($input, value);\n                    console.log('Layer property ' + key + ' populated', value);\n                }\n            });\n        }\n\n        if (sourceProperties) {\n            $formGroups.find(':input').filter('[data-ol-source][data-ol-property]').each(function () {\n                $input = $(this);\n                key = $input.data('ol-property');\n                if (sourceProperties[key] !== null) {\n                    value = sourceProperties[key];\n                    commonsModule.setInputValue($input, value);\n                    console.log('Source property ' + key + ' populated', value);\n                }\n            });\n        }\n        if (sourceExtraProperties) {\n            $formGroups.find(':input').filter('[data-ol-source][data-ol-property]').each(function () {\n                $input = $(this);\n                key = $input.data('ol-property');\n                if (sourceExtraProperties[key] !== null) {\n                    value = sourceExtraProperties[key];\n                    commonsModule.setInputValue($input, value);\n                    console.log('Source property ' + key + ' populated', value);\n                }\n            });\n        }\n        /*if (sourceUrls) {\n            $formGroups.find(':input').filter('[data-ol-source][data-ol-property=\"urls\"]').each(function () {\n                $input = $(this);\n                value = sourceUrls;\n                commonsModule.setInputValue($input, value);\n                console.log('Layer input \"URL\" populated', value);\n            });\n        }*/\n\n        if (formatTypes) {\n            $formGroups.find(':input').filter('[data-ol-source=\"Vector\"][data-ol-format=\"GPX\"]').each(function () {\n                console.log('Layer input \"file\" ready', value);\n            });\n        }\n\n        if (styleProperties) {\n            var styleType;\n            $formGroups.find(':input').filter('[data-ol-style][data-ol-property]').each(function () {\n                $input = $(this);\n                styleType = $input.data('ol-style');\n                key = $input.data('ol-property');\n                if (styleType && key && styleProperties[styleType] && styleProperties[styleType][key] !== null) {\n                    value = styleProperties[styleType][key];\n                    console.log(styleType + ' ' + key + ' (' + (typeof value) + ')', value);\n                    commonsModule.setInputValue($input, value);\n                }\n            });\n        }\n\n        // Initialize Parsley excluding hidden fields\n        // and update layer properties when the form is submitted\n        validateSettingsForm(formSelector);\n\n    };\n\n\n\n    /**\n     * Update layer source url\n     * @public\n     * @param {Object} layer - OL3 layer\n     * @param {String|array} url - URL\n     */\n    var updateSourceUrl = function (layer, url) {\n\n        if (!layer) {\n            return false;\n        }\n\n        var source = layer.getSource();\n\n        if (typeof source.setUrls !== 'undefined') {\n            if ($.isArray(url)) {\n                source.setUrls(url);\n            } else {\n                url = $.trim(url);\n                source.setUrl(url);\n            }\n        }\n\n        // Show layer if the URL is defined, else hide layer\n        //layer.setVisible((url));\n\n    };\n\n\n\n    /**\n     * Update the GPX layer with the input file values\n     * @private\n     * @param {Object} layer - OL layer\n     * @param {Object} files - Input file [files]\n     * @param {Object} featuresOptions - Features options\n     */\n    var loadFileFeatures = function (layer, files, featuresOptions) {\n\n        if (files.length === 0) {\n            return false;\n        }\n\n        var source = layer.getSource();\n\n        // Remove all features\n        source.clear();\n\n        var dfd = commonsModule.reader(files, function (result) {\n\n            // Import features from files\n            var format = source.getFormat();\n            var features = format.readFeatures(result, featuresOptions);\n            source.addFeatures(features);\n\n            // Display layer\n            layer.setVisible(true);\n\n        });\n\n        // Refresh the layerswitcher control\n        //layerSwitcherControl.renderPanel();\n\n        // Adjust the view to fit tracks\n        //mapMod1.fitVectorLayer(gpxLayer);\n\n        return dfd;\n\n    };\n\n\n\n    // Styles ______________________________________________________________________________________\n    /**\n     * Timezones layer style\n     * @see http://openlayers.org/en/v3.4.0/examples/kml-timezones.html\n     * @private\n     */\n    var timezonesStyle = function (feature) { // feature, resolution\n        var offset = 0;\n        var name = feature.get('name'); // e.g. GMT -08:30\n        var match = name.match(/([\\-+]\\d{2}):(\\d{2})$/);\n        if (match) {\n            var hours = parseInt(match[1], 10);\n            var minutes = parseInt(match[2], 10);\n            offset = 60 * hours + minutes;\n        }\n        var date = new Date();\n        var local = new Date(date.getTime() +\n            (date.getTimezoneOffset() + offset) * 60000);\n        // offset from local noon (in hours)\n        var delta = Math.abs(12 - local.getHours() + (local.getMinutes() / 60));\n        if (delta > 12) {\n            delta = 24 - delta;\n        }\n        var opacity = 0.75 * (1 - delta / 12);\n        return [new ol.style.Style({\n            fill: new ol.style.Fill({\n                color: [0x55, 0x55, 0x55, opacity]\n                    //color: [0xff, 0xff, 0x33, opacity]\n            }),\n            stroke: new ol.style.Stroke({\n                color: '#ffffff'\n            })\n        })];\n    };\n\n    // Base layers _________________________________________________________________________________\n    layers.openStreetMap = function () {\n        return new ol.layer.Tile({\n            name: 'openStreetMap',\n            title: 'Road Map<small> (by <a href=\"https://www.openstreetmap.org\">OpenStreetMap</a>)</small>', // (offline)\n            visible: true,\n            type: 'base',\n            source: new ol.source.OSM({\n                // crossOrigin: null,\n                urls: [\n                    protocol + '//a.tile.openstreetmap.org/{z}/{x}/{y}.png'\n                    //'../../Datas/Tiles/osm_mapnik/{z}/{x}/{y}.png'\n                ]\n            })\n        });\n    };\n    layers.openSeaMap = function () {\n        return new ol.layer.Tile({\n            name: 'openSeaMap',\n            title: 'Shipping lanes<small> (by <a href=\"http://www.openseamap.org\">OpenSeaMap</a>)</small>',\n            type: 'base',\n            source: new ol.source.OSM({\n                attributions: [\n                    new ol.Attribution({\n                        html: 'All maps &copy; ' +\n                                '<a href=\"http://www.openseamap.org/\">OpenSeaMap</a>'\n                    }),\n                    ol.source.OSM.ATTRIBUTION\n                ],\n                crossOrigin: null,\n                urls: [\n                    'http://tiles.openseamap.org/seamark/{z}/{x}/{y}.png',\n                    'http://t1.openseamap.org/seamark/{z}/{x}/{y}.png'\n                ]\n            })\n        });\n    };\n    layers.openStreetMapHumanitarian = function () {\n        return new ol.layer.Tile({\n            name: 'openStreetMapHumanitarian',\n            title: 'Humanitarian <small>(by <a href=\"https://www.openstreetmap.org\">OpenStreetMap</a>)</small>',\n            type: 'base',\n            source: new ol.source.OSM({\n                attributions: [\n                    new ol.Attribution({\n                        html: 'All maps &copy; ' +\n                                '<a href=\"http://www.openstreetmap.fr/\">OpenStreetMap</a>'\n                    }),\n                    ol.source.OSM.ATTRIBUTION\n                ],\n                url: protocol + '//tile-{a-c}.openstreetmap.fr/hot/{z}/{x}/{y}.png'\n            })\n        });\n    };\n    layers.mapquestOSM = function () {\n        return new ol.layer.Tile({\n            name: 'mapquestOSM',\n            title: 'Road map<small> (by <a href=\"http://open.mapquest.com\">MapQuest</a>)</small>',\n            type: 'base',\n            source: new ol.source.MapQuest({\n                layer: 'osm'\n            })\n        });\n    };\n    layers.mapquestSat = function () {\n        return new ol.layer.Tile({\n            name: 'mapquestSat',\n            title: 'Aerial view<small> (by <a href=\"http://open.mapquest.com\">MapQuest</a>)</small>',\n            type: 'base',\n            source: new ol.source.MapQuest({\n                layer: 'sat'\n            })\n        });\n    };\n    // http://thunderforest.com/maps/opencyclemap/\n    layers.openCycleMap = function () {\n        return new ol.layer.Tile({\n            name: 'openCycleMap',\n            title: 'Cycling roads<small> (by <a href=\"http://www.opencyclemap.org\">OpenCycleMap</a>)</small>',\n            type: 'base',\n            source: new ol.source.OSM({\n                attributions: [\n                    new ol.Attribution({\n                        html: 'All maps &copy; ' +\n                                '<a href=\"http://www.opencyclemap.org/\">OpenCycleMap</a>'\n                    }),\n                    ol.source.OSM.ATTRIBUTION\n                ],\n                url: 'http://{a-c}.tile.opencyclemap.org/cycle/{z}/{x}/{y}.png'\n            })\n        });\n    };\n    // http://thunderforest.com/maps/transport/\n    layers.thunderforestTransport = function () {\n        return new ol.layer.Tile({\n            name: 'thunderforestTransport',\n            title: 'Transports<small> (by <a href=\"http://www.thunderforest.com\">ThunderForest</a>)</small>',\n            type: 'base',\n            source: new ol.source.OSM({\n                attributions: [\n                    new ol.Attribution({\n                        html: 'All maps &copy; ' +\n                                '<a href=\"http://www.thunderforest.com/\">ThunderForest</a>'\n                    }),\n                    ol.source.OSM.ATTRIBUTION\n                ],\n                url: 'http://{a-c}.tile.thunderforest.com/transport/{z}/{x}/{y}.png'\n            })\n        });\n    };\n    // http://thunderforest.com/maps/transport-dark/\n    layers.thunderforestTransportDark = function () {\n        return new ol.layer.Tile({\n            name: 'thunderforestTransportDark',\n            title: 'Transport dark<small> (by <a href=\"http://www.thunderforest.com\">ThunderForest</a>)</small>',\n            type: 'base',\n            source: new ol.source.OSM({\n                attributions: [\n                    new ol.Attribution({\n                        html: 'All maps &copy; ' +\n                                '<a href=\"http://www.thunderforest.com/\">ThunderForest</a>'\n                    }),\n                    ol.source.OSM.ATTRIBUTION\n                ],\n                url: 'https://{a-c}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png'\n            })\n        });\n    };\n    // http://thunderforest.com/maps/landscape/\n    layers.thunderforestLandscape = function () {\n        return new ol.layer.Tile({\n            name: 'thunderforestLandscape',\n            title: 'Landscape<small> (by <a href=\"http://www.thunderforest.com\">ThunderForest</a>)</small>',\n            type: 'base',\n            source: new ol.source.OSM({\n                attributions: [\n                    new ol.Attribution({\n                        html: 'All maps &copy; ' +\n                                '<a href=\"http://www.thunderforest.com/\">ThunderForest</a>'\n                    }),\n                    ol.source.OSM.ATTRIBUTION\n                ],\n                url: 'https://{a-c}.tile.thunderforest.com/landscape/{z}/{x}/{y}.png'\n            })\n        });\n    };\n    // http://thunderforest.com/maps/outdoors/\n    layers.thunderforestOutdoor = function () {\n        return new ol.layer.Tile({\n            name: 'thunderforestOutdoor',\n            title: 'Outdoor activities<small> (by <a href=\"http://www.thunderforest.com\">ThunderForest</a>)</small>',\n            type: 'base',\n            source: new ol.source.OSM({\n                attributions: [\n                    new ol.Attribution({\n                        html: 'All maps &copy; ' +\n                                '<a href=\"http://www.thunderforest.com/\">ThunderForest</a>'\n                    }),\n                    ol.source.OSM.ATTRIBUTION\n                ],\n                url: 'https://{a-c}.tile.thunderforest.com/outdoors/{z}/{x}/{y}.png'\n            })\n        });\n    };\n    layers.arcgis = function () {\n        return new ol.layer.Tile({\n            name: 'arcgis',\n            title: 'Terrain<small> (by <a href=\"https://services.arcgisonline.com\">ArcGIS</a>)</small>',\n            type: 'base',\n            source: new ol.source.XYZ({\n                crossOrigin: 'anonymous', // Important\n                attributions: [\n                    new ol.Attribution({\n                        html: 'Tiles &copy; <a href=\"https://services.arcgisonline.com/ArcGIS/' +\n                                'rest/services/World_Topo_Map/MapServer\">ArcGIS</a>'\n                    })\n                ],\n                url: protocol + '//server.arcgisonline.com/ArcGIS/rest/services/' +\n                        'World_Topo_Map/MapServer/tile/{z}/{y}/{x}'\n            })\n        });\n    };\n    layers.arcgisRestHighwayUSA = function () {\n        return new ol.layer.Tile({\n            name: 'arcgisRestHighwayUSA',\n            title: 'Highway USA<small> (by <a href=\"https://services.arcgisonline.com\">ArcGIS</a>)</small>',\n            type: 'base',\n            extent: [-13884991, 2870341, -7455066, 6338219],\n            source: new ol.source.TileArcGISRest({\n                url: protocol + '//sampleserver1.arcgisonline.com/ArcGIS/rest/services/Specialty/' + 'ESRI_StateCityHighway_USA/MapServer'\n            })\n        });\n    };\n    layers.googleMap = function () {\n        return new ol.layer.Tile({\n            name: 'googleMap',\n            title: 'Road map<small> (by <a href=\"https://www.google.com/maps/\">Google</a>)</small>',\n            type: 'base',\n            source: new ol.source.XYZ({\n                crossOrigin: 'anonymous', // Important\n                url: protocol + '//mt1.google.com/vt/lyrs=m@285235804&hl=en&x={x}&y={y}&z={z}&s=1'\n            })\n        });\n    };\n    layers.googleTerrain = function () {\n        return new ol.layer.Tile({\n            name: 'googleTerrain',\n            title: 'Terrain + labels<small> (by <a href=\"https://www.google.com/maps/\">Google</a>)</small>',\n            type: 'base',\n            source: new ol.source.XYZ({\n                crossOrigin: 'anonymous', // Important\n                url: protocol + '//mts1.google.com/vt/lyrs=t@132,r@285000000&hl=en&src=app&x={x}&y={y}&z={z}&s=1'\n                //url: protocol + '//mts0.google.com/maps//vt/lyrs=t@132,r@285000000&hl=en&src=app&x={x}&y={y}&z={z}&s=1'\n            })\n        });\n    };\n    layers.googleSatellite = function () {\n        return new ol.layer.Tile({\n            name: 'googleSatellite',\n            title: 'Aerial view<small> (by <a href=\"https://www.google.com/maps/\">Google</a>)</small>',\n            type: 'base',\n            source: new ol.source.XYZ({\n                crossOrigin: 'anonymous', // Important\n                //resolutions: [9784, 2446, 1223, 76.44, 9.55, 2.39],\n                url: protocol + '//www.google.se/maps/vt/pb=!1m5!1m4!1i{z}!2i{x}!3i{y}!4i256!2m2!1e1!3i198!4e0'\n                //url: protocol + '//khms0.google.com/maps//kh/v=165&src=app&x={x}&y={y}&z={z}&s=1'\n            })\n        });\n    };\n    layers.bingRoad = function () {\n        return new ol.layer.Tile({\n            name: 'bingRoad',\n            title: 'Road map<small> (by <a href=\"https://www.bing.com/maps/\">Bing</a>)</small>',\n            type: 'base',\n            maxZoom: 19,\n            source: new ol.source.BingMaps({\n                key: settings.bingMapsKey,\n                imagerySet: 'Road'\n            })\n        });\n    };\n    layers.bingAerial = function () {\n        return new ol.layer.Tile({\n            name: 'bingAerial',\n            title: 'Aerial view<small> (by <a href=\"https://www.bing.com/maps/\">Bing</a>)</small>',\n            type: 'base',\n            maxZoom: 19,\n            source: new ol.source.BingMaps({\n                key: settings.bingMapsKey,\n                imagerySet: 'Aerial'\n            })\n        });\n    };\n    layers.bingAerialWithLabels = function () {\n        return new ol.layer.Tile({\n            name: 'bingAerialWithLabels',\n            title: 'Aerial view with labels<small> (by <a href=\"https://www.bing.com/maps/\">Bing</a>)</small>',\n            type: 'base',\n            maxZoom: 19,\n            source: new ol.source.BingMaps({\n                key: settings.bingMapsKey,\n                imagerySet: 'AerialWithLabels'\n            })\n        });\n    };\n    layers.bingCollinsBart = function () {\n        return new ol.layer.Tile({\n            name: 'bingCollinsBart',\n            title: 'CollinsBart<small> (by <a href=\"https://www.bing.com/maps/\">Bing</a>)</small>',\n            type: 'base',\n            maxZoom: 19,\n            source: new ol.source.BingMaps({\n                key: settings.bingMapsKey,\n                imagerySet: 'collinsBart'\n            })\n        });\n    };\n    layers.bingOrdnanceSurvey = function () {\n        return new ol.layer.Tile({\n            name: 'bingOrdnanceSurvey',\n            title: 'OrdnanceSurvey<small> (by <a href=\"https://www.bing.com/maps/\">Bing</a>)</small>',\n            type: 'base',\n            maxZoom: 19,\n            source: new ol.source.BingMaps({\n                key: settings.bingMapsKey,\n                imagerySet: 'ordnanceSurvey'\n            })\n        });\n    };\n    // Stamen\n    // http://maps.stamen.com/#watercolor/12/37.7706/-122.3782\n    // toner toner-hybrid toner-labels toner-lines toner-background toner-lite\n    layers.stamenToner = function () {\n        return new ol.layer.Tile({\n            name: 'stamenToner',\n            title: 'B&W map<small> (by <a href=\"http://maps.stamen.com\">Stamen</a>)</small>',\n            type: 'base',\n            source: new ol.source.Stamen({\n                layer: 'toner'\n            })\n        });\n    };\n    layers.stamenTonerLite = function () {\n        return new ol.layer.Tile({\n            name: 'stamenTonerLite',\n            title: 'Gray scale map<small> (by <a href=\"http://maps.stamen.com\">Stamen</a>)</small>',\n            type: 'base',\n            source: new ol.source.Stamen({\n                layer: 'toner-lite'\n            })\n        });\n    };\n    layers.stamenTonerBackground = function () {\n        return new ol.layer.Tile({\n            name: 'stamenTonerBackground',\n            title: 'B&W background<small> (by <a href=\"http://maps.stamen.com\">Stamen</a>)</small>',\n            type: 'base',\n            source: new ol.source.Stamen({\n                layer: 'toner-background'\n            })\n        });\n    };\n    layers.stamenWatercolor = function () {\n        return new ol.layer.Tile({\n            name: 'stamenWatercolor',\n            title: 'Watercolor map<small> (by <a href=\"http://maps.stamen.com\">Stamen</a>)</small>',\n            type: 'base',\n            source: new ol.source.Stamen({\n                layer: 'watercolor'\n            })\n        });\n    };\n    // terrain terrain-labels terrain-lines terrain-background\n    layers.stamenTerrain = function () {\n        return new ol.layer.Tile({\n            name: 'stamenTerrain',\n            title: 'Terrain USA<small> (by <a href=\"http://maps.stamen.com\">Stamen</a>)</small>',\n            type: 'base',\n            source: new ol.source.Stamen({\n                layer: 'terrain'\n            })\n        });\n    };\n    layers.stamenTerrainWithLabels = function () {\n        return new ol.layer.Tile({\n            name: 'stamenTerrainLabels',\n            title: 'Terrain + labels USA<small> (by <a href=\"http://maps.stamen.com\">Stamen</a>)</small>',\n            type: 'base',\n            source: new ol.source.Stamen({\n                layer: 'terrain-labels'\n            })\n        });\n    };\n    layers.customBaseLayer = function () {\n        return new ol.layer.Tile({\n            name: 'customBaseLayer',\n            title: 'Custom',\n            type: 'base',\n            source: new ol.source.XYZ({\n                urls: []\n            })\n        });\n    };\n    layers.mapsForFreeRelief = function () {\n        return new ol.layer.Tile({\n            name: 'mapsForFreeRelief',\n            title: 'Relief<small> (by <a href=\"http://www.maps-for-free.com\">maps-for-free.com</a>)</small>',\n            type: 'base',\n            //maxResolution: 76.43702828517625, //Z11\n            source: new ol.source.XYZ({\n                maxZoom: 12,\n                urls: [\n                    'http://www.maps-for-free.com/layer/relief/z{z}/row{y}/{z}_{x}-{y}.jpg'\n                ]\n            })\n        });\n    };\n    /*\n    // Err\n    layers.stamenBurningMap = function () {\n    return new ol.layer.Tile({\n        name: 'stamenBurningMap',\n        title: 'Burning map<small> (by <a href=\"http://maps.stamen.com\">Stamen</a>)</small>',\n        type: 'base',\n        source: new ol.source.Stamen({\n            layer: 'burningmap'\n        })\n    });\n    };\n    // Err\n    layers.stamenMars = function () {\n    return new ol.layer.Tile({\n        name: 'stamenMars',\n        title: 'Mars<small> (by <a href=\"http://maps.stamen.com\">Stamen</a>)</small>',\n        type: 'base',\n        source: new ol.source.Stamen({\n            layer: 'mars'\n        })\n    });\n    };\n    // Err\n    layers.stamenTreesCabsCrime = function () {\n    return new ol.layer.Tile({\n        name: 'stamenTreesCabsCrime',\n        title: 'Trees Cabs Crime<small> (by <a href=\"http://maps.stamen.com\">Stamen</a>)</small>',\n        type: 'base',\n        source: new ol.source.Stamen({\n            layer: 'trees-cabs-crime'\n        })\n    });\n    };\n    */\n    // Overlays ____________________________________________________________________________________\n    layers.googleBike = function () {\n        return new ol.layer.Tile({\n            name: 'googleBike',\n            title: 'Cycling roads<small> (by <a href=\"https://www.google.com/maps/\">Google</a>)</small>',\n            visible: true,\n            source: new ol.source.XYZ({\n                crossOrigin: 'anonymous',\n                url: protocol + '//mts0.google.com/vt/lyrs=h@239000000,bike&hl=en&src=app&x={x}&y={y}&z={z}&s=1'\n                //url: protocol + '//mts0.google.com/maps//vt/lyrs=h@239000000,bike&hl=en&src=app&x={x}&y={y}&z={z}&s=1'\n            })\n        });\n    };\n    layers.googleHybrid = function () {\n        return new ol.layer.Tile({\n            name: 'googleHybrid',\n            title: 'Roads + labels<small> (by <a href=\"https://www.google.com/maps/\">Google</a>)</small>',\n            visible: true,\n            source: new ol.source.XYZ({\n                crossOrigin: 'anonymous',\n                url: protocol + '//mt1.google.com/vt/lyrs=h@239000000&hl=en&x={x}&y={y}&z={z}&s=1'\n            })\n        });\n    };\n    layers.mapquestHyb = function () {\n        return new ol.layer.Tile({\n            name: 'mapquestHyb',\n            title: 'City names<small> (by <a href=\"http://open.mapquest.com\">MapQuest</a>)</small>',\n            source: new ol.source.MapQuest({\n                layer: 'hyb'\n            })\n        });\n    };\n    layers.lonviaCycling = function () {\n        return new ol.layer.Tile({\n            name: 'lonviaCycling',\n            title: 'Cycling roads<small> (by <a href=\"http://www.waymarkedtrails.org\">Lonvia</a>)</small>',\n            opacity: 0.6,\n            source: new ol.source.OSM({\n                attributions: [\n                    new ol.Attribution({\n                        html: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> and contributors <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>'\n                    }),\n                    ol.source.OSM.ATTRIBUTION\n                ],\n                crossOrigin: null,\n                url: 'http://tile.lonvia.de/cycling/{z}/{x}/{y}.png'\n                    // urls: [\n                    //  'http://tile.waymarkedtrails.org/cycling/{z}/{x}/{y}.png',\n                    //  'http://tile.lonvia.de/cycling/{z}/{x}/{y}.png',\n                    //  '../../Datas/Tiles/lonvia_cycling/{z}/{x}/{y}.png'\n                    // ]\n            })\n        });\n    };\n    layers.lonviaHiking = function () {\n        return new ol.layer.Tile({\n            name: 'lonviaHiking',\n            title: 'Hiking paths<small> (by <a href=\"http://www.waymarkedtrails.org\">Lonvia</a>)</small>',\n            opacity: 0.6,\n            source: new ol.source.OSM({\n                attributions: [\n                    new ol.Attribution({\n                        html: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> and contributors <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>'\n                    }),\n                    ol.source.OSM.ATTRIBUTION\n                ],\n                crossOrigin: null,\n                url: 'http://tile.lonvia.de/hiking/{z}/{x}/{y}.png'\n            })\n        });\n    };\n    layers.stamenTonerHybrid = function () {\n        return new ol.layer.Tile({\n            name: 'stamenTonerHybrid',\n            title: 'B&W roads + labels<small> (by <a href=\"http://maps.stamen.com\">Stamen</a>)</small>',\n            source: new ol.source.Stamen({\n                layer: 'toner-hybrid'\n            })\n        });\n    };\n    layers.stamenTonerLabels = function () {\n        return new ol.layer.Tile({\n            name: 'stamenTonerLabels',\n            title: 'B&W labels<small> (by <a href=\"http://maps.stamen.com\">Stamen</a>)</small>',\n            source: new ol.source.Stamen({\n                layer: 'toner-labels'\n            })\n        });\n    };\n    layers.stamenTonerLines = function () {\n        return new ol.layer.Tile({\n            name: 'stamenTonerLines',\n            title: 'B&W roads<small> (by <a href=\"http://maps.stamen.com\">Stamen</a>)</small>',\n            source: new ol.source.Stamen({\n                layer: 'toner-lines'\n            })\n        });\n    };\n    // https://www.google.com/intl/fr-FR_US/help/terms_maps.html\n    layers.mapsForFreeWater = function () {\n        return new ol.layer.Tile({\n            name: 'mapsForFreeWater',\n            title: 'Water<small> (by <a href=\"http://www.maps-for-free.com\">maps-for-free.com</a>)</small>',\n            opacity: 0.7,\n            source: new ol.source.XYZ({\n                url: 'http://www.maps-for-free.com/layer/water/z{z}/row{y}/{z}_{x}-{y}.gif'\n            })\n        });\n    };\n    layers.mapsForFreeAdmin = function () {\n        return new ol.layer.Tile({\n            name: 'mapsForFreeAdmin',\n            title: 'Admin<small> (by <a href=\"http://www.maps-for-free.com\">maps-for-free.com</a>)</small>',\n            opacity: 0.3,\n            source: new ol.source.XYZ({\n                url: 'http://www.maps-for-free.com/layer/admin/z{z}/row{y}/{z}_{x}-{y}.gif'\n            })\n        });\n    };\n    // http://korona.geog.uni-heidelberg.de/contact.html\n    layers.uniHeidelbergAsterh = function () {\n        return new ol.layer.Tile({\n            name: 'uniHeidelbergAsterh',\n            title: 'Hillshade<small> (by <a href=\"http://korona.geog.uni-heidelberg.de\">uni-heidelberg.de</a>)</small>',\n            source: new ol.source.XYZ({\n                maxZoom: 18,\n                url: 'http://korona.geog.uni-heidelberg.de/tiles/asterh/x={x}&y={y}&z={z}'\n            })\n        });\n    };\n    layers.uniHeidelbergAdminb = function () {\n        return new ol.layer.Tile({\n            name: 'uniHeidelbergAdminb',\n            title: 'Admin boundaries<small> (by <a href=\"http://korona.geog.uni-heidelberg.de\">uni-heidelberg.de</a>)</small>',\n            opacity: 0.8,\n            source: new ol.source.XYZ({\n                url: 'http://korona.geog.uni-heidelberg.de/tiles/adminb/x={x}&y={y}&z={z}'\n            })\n        });\n    };\n    layers.uniHeidelbergHybrid = function () {\n        return new ol.layer.Tile({\n            name: 'uniHeidelbergHybrid',\n            title: 'Hibrid<small> (by <a href=\"http://korona.geog.uni-heidelberg.de\">uni-heidelberg.de</a>)</small>',\n            opacity: 0.8,\n            source: new ol.source.XYZ({\n                url: 'http://korona.geog.uni-heidelberg.de/tiles/hybrid/x={x}&y={y}&z={z}'\n            })\n        });\n    };\n\n\n\n    /**\n     *\n     */\n    var ImageData = function () {\n        console.warm('ImageData function in development');\n    };\n\n\n\n    /**\n     * Generates a shaded relief image given elevation data.  Uses a 3x3\n     * neighborhood for determining slope and aspect.\n     * @private\n     * @param {Array.<ImageData>} inputs Array of input images.\n     * @param {Object} data Data added in the \"beforeoperations\" event.\n     * @return {ImageData} Output image.\n     */\n    var shade = function (inputs, data) {\n      var elevationImage = inputs[0];\n      var width = elevationImage.width;\n      var height = elevationImage.height;\n      var elevationData = elevationImage.data;\n      var shadeData = new Uint8ClampedArray(elevationData.length);\n      var dp = data.resolution * 2;\n      var maxX = width - 1;\n      var maxY = height - 1;\n      var pixel = [0, 0, 0, 0];\n      var twoPi = 2 * Math.PI;\n      var halfPi = Math.PI / 2;\n      var sunEl = Math.PI * data.sunEl / 180;\n      var sunAz = Math.PI * data.sunAz / 180;\n      var cosSunEl = Math.cos(sunEl);\n      var sinSunEl = Math.sin(sunEl);\n      var pixelX, pixelY, x0, x1, y0, y1, offset,\n          z0, z1, dzdx, dzdy, slope, aspect, cosIncidence, scaled;\n      for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n        y0 = pixelY === 0 ? 0 : pixelY - 1;\n        y1 = pixelY === maxY ? maxY : pixelY + 1;\n        for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n          x0 = pixelX === 0 ? 0 : pixelX - 1;\n          x1 = pixelX === maxX ? maxX : pixelX + 1;\n          // determine elevation for (x0, pixelY)\n          offset = (pixelY * width + x0) * 4;\n          pixel[0] = elevationData[offset];\n          pixel[1] = elevationData[offset + 1];\n          pixel[2] = elevationData[offset + 2];\n          pixel[3] = elevationData[offset + 3];\n          z0 = data.vert * (pixel[0] + pixel[1] * 2 + pixel[2] * 3);\n          // determine elevation for (x1, pixelY)\n          offset = (pixelY * width + x1) * 4;\n          pixel[0] = elevationData[offset];\n          pixel[1] = elevationData[offset + 1];\n          pixel[2] = elevationData[offset + 2];\n          pixel[3] = elevationData[offset + 3];\n          z1 = data.vert * (pixel[0] + pixel[1] * 2 + pixel[2] * 3);\n          dzdx = (z1 - z0) / dp;\n          // determine elevation for (pixelX, y0)\n          offset = (y0 * width + pixelX) * 4;\n          pixel[0] = elevationData[offset];\n          pixel[1] = elevationData[offset + 1];\n          pixel[2] = elevationData[offset + 2];\n          pixel[3] = elevationData[offset + 3];\n          z0 = data.vert * (pixel[0] + pixel[1] * 2 + pixel[2] * 3);\n          // determine elevation for (pixelX, y1)\n          offset = (y1 * width + pixelX) * 4;\n          pixel[0] = elevationData[offset];\n          pixel[1] = elevationData[offset + 1];\n          pixel[2] = elevationData[offset + 2];\n          pixel[3] = elevationData[offset + 3];\n          z1 = data.vert * (pixel[0] + pixel[1] * 2 + pixel[2] * 3);\n          dzdy = (z1 - z0) / dp;\n          slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n          aspect = Math.atan2(dzdy, -dzdx);\n          if (aspect < 0) {\n            aspect = halfPi - aspect;\n          } else if (aspect > halfPi) {\n            aspect = twoPi - aspect + halfPi;\n          } else {\n            aspect = halfPi - aspect;\n          }\n          cosIncidence = sinSunEl * Math.cos(slope) +\n              cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n          offset = (pixelY * width + pixelX) * 4;\n          scaled = 255 * cosIncidence;\n          shadeData[offset] = scaled;\n          shadeData[offset + 1] = scaled;\n          shadeData[offset + 2] = scaled;\n          shadeData[offset + 3] = elevationData[offset + 3];\n        }\n      }\n      return new ImageData(shadeData, width, height);\n    };\n\n    layers.mapboxShadedRelief = function () {\n        return new ol.layer.Image({\n            name: 'mapboxShadedRelief',\n            title: 'Shaded relief<small> (by <a href=\"http://www.mapbox.com\">Mapbox</a>)</small>',\n            source: new ol.source.Raster({\n                sources: [\n                    new ol.source.XYZ({\n                        url: 'https://{a-d}.tiles.mapbox.com/v3/aj.sf-dem/{z}/{x}/{y}.png',\n                        crossOrigin: 'anonymous'\n                    })\n                ],\n                operationType: 'image',\n                operation: shade\n            }),\n            opacity: 0.3\n        });\n    };\n    // See http://openlayers.org/en/v3.4.0/examples/kml-timezones.html\n    layers.timeZones = function () {\n        return new ol.layer.Vector({\n            name: 'timeZones',\n            title: 'Time zones',\n            style: timezonesStyle,\n            minResolution: 4891,\n            source: new ol.source.Vector({\n                    extractStyles: false,\n                    projection: 'EPSG:3857',\n                    url: 'data/kml/timezones.kml',\n                    format: new ol.format.KML()\n                })\n                //source: new ol.source.Vector({\n                //    url: 'data/kml/timezones.kml',\n                //    format: new ol.format.KML({\n                //        extractStyles: false\n                //    })\n                //})\n        });\n    };\n    layers.gpxFile = function () {\n        return new ol.layer.Vector({\n            name: 'gpxFile',\n            title: 'GPS tracks',\n            visible: false,\n            source: new ol.source.Vector({\n                url: '',\n                format: new ol.format.GPX()\n            }),\n            style: new ol.style.Style({\n                stroke: new ol.style.Stroke({\n                    color: '#33ff00',\n                    width: 5\n                })\n            })\n        });\n    };\n\n    layers.drawingVector = function () {\n        return new ol.layer.Tile({\n            name: 'drawing',\n            title: 'My drawings'\n            // ,\n            //    source: new ol.source.MapQuest({layer: 'sat'})\n        });\n    };\n    layers.customOverlay = function () {\n        return new ol.layer.Tile({\n            name: 'customOverlay',\n            title: 'Custom',\n            source: new ol.source.XYZ({\n                urls: []\n            })\n        });\n    };\n    /*\n    layers.toolserverHillShading = function () {\n    return new ol.layer.Tile({\n        name: 'toolserverHillShading',\n        title: 'Toolserver hill shading',\n        minZoom: 2,\n        maxZoom: 15,\n        source: new ol.source.XYZ({\n            // crossOrigin: null,\n            urls: [\n                // 'http://toolserver.org/~cmarqu/hill/{z}/{x}/{y}.png',\n                'http://a.tiles.wmflabs.org/hillshading/{z}/{x}/{y}.png',\n                'http://b.tiles.wmflabs.org/hillshading/{z}/{x}/{y}.png',\n                'http://c.tiles.wmflabs.org/hillshading/{z}/{x}/{y}.png'\n            ]\n        })\n    });\n    };\n    */\n    //layers.grid = function () {\n    //return new ol.layer.Tile({\n    //  name: 'gridLayer',\n    //  title: 'Country data',\n    //  style: 'Grid',\n    //  // visible: false,\n    //  source: sources.grid\n    //});\n    //};\n    // if (map && map.getView()) {\n    //    map.addLayer(scoresLayer);\n    // } else {\n    //    userOverlays.push(scoresLayer);\n    // }\n\n    // _____________________________________________________________________________________________\n\n    /**\n     * Update layer source url from a file input\n     * <input id=\"gpx_file\" type=\"file\" accept=\".gpx\" />\n     * @see {@link http://www.html5rocks.com/en/tutorials/file/dndfiles/}\n     * @public\n     * @param {string} selector - File input ID\n     * @param {Object} layer - OL3 vector layer\n     */\n    /*\n    var GPXFileSource = function (selector, layer) {\n        if (!(window.File && window.FileReader && window.FileList && window.Blob)) {\n            $(selector).addClass('disabled');\n            console.warn('The File APIs are not fully supported by your browser.');\n            return false;\n        }\n        var gpxFormat = new ol.format.GPX();\n        var gpxFeatures;\n\n        var $filePath = $(selector);\n        $filePath.on('change', function (e) {\n\n            var files = e.target.files;\n            var output = [];\n            for (var i = 0, f; f = files[i]; i++) {\n                var reader = new FileReader();\n                reader.readAsText(f); //, 'UTF-8'\n                //reader.readAsDataURL(f);\n\n                reader.onload = function (e) {\n\n                    gpxFeatures = gpxFormat.readFeatures(e.target.result, {\n                        dataProjection: 'EPSG:4326',\n                        featureProjection: 'EPSG:3857'\n                    });\n                    layer.getSource().addFeatures(gpxFeatures);\n\n                    layer.setProperties({\n                        visible: true\n                    });\n\n                };\n\n                reader.onloadstart = function (e) {\n                    //console.log('GPX tracks loading...');\n                };\n                reader.onloadend = function (e) {\n                    console.log('GPX tracks loaded');\n                };\n                reader.onerror = function (e) {\n                    swal({title: 'Oups!', text: 'An error occured while trying to read your file.', type: 'warning'});\n                };\n\n                // Build the list of loaded files\n                output.push('<li class=\"list-group-item\">'\n                + escape(f.name) + ' <span class=\"badge\">'\n                + formatBytes(f.size)\n                + (' ' + f.type || '')\n                //+ (f.lastModifiedDate ? ' last modified: ' + f.lastModifiedDate.toLocaleDateString() : '')\n                + '<span></li>');\n            };\n\n            var $list = $(selector + '_list');\n            if ($list) {\n                $list.html('<ul class=\"list-group\">' + output.join('') + '</ul>');\n            }\n        });\n    };\n    */\n\n\n\n    // Set default properties\n    /*$.each(layers, function (i, layer) {\n        layer().setProperties(defaultProperties);\n    });*/\n    /*\n    // Translate layer and group titles once i18next plugin initialized\n    $.when(deferred.init.i18next).done(function () {\n        roadBaselayers.setProperties({\n            title: $.t('sections:roadLayers.title')\n        });\n        reliefBaselayers.setProperties({\n            title: $.t('sections:roadWithReliefLayers.title')\n        });\n        aerialBaselayers.setProperties({\n            title: $.t('sections:satelliteLayers.title')\n        });\n        baselayers.setProperties({\n            title: $.t('sections:baseLayer.title')\n        });\n        roadOverlays.setProperties({\n            title: $.t('sections:roadLayers.title')\n        });\n        informationOverlays.setProperties({\n            title: $.t('sections:infoLayers.title')\n        });\n        //terrainOverlays.setProperties({\n        //    title: $.t('sections:reliefLayers.title')\n        //});\n        userOverlays.setProperties({\n            title: $.t('sections:myLayers.title')\n        });\n        overlays.setProperties({\n            title: $.t('sections:layers.title')\n        });\n        informationOverlays.setProperties({\n            title: $.t('sections:infoLayers.title')\n        });\n        console.log('Map layers translated');\n    });\n    */\n\n\n\n    return {\n        create: create,\n        loadFileFeatures: loadFileFeatures,\n        initSettingsForm: initSettingsForm,\n        selectedLayer: selectedLayer,\n        settings: settings,\n        treatLayers: treatLayers,\n        updateSourceUrl: updateSourceUrl\n    };\n\n})();\n"],"sourceRoot":"/source/"}