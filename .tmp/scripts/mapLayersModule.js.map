{"version":3,"sources":["../../app/scripts/mapLayersModule.js"],"names":[],"mappings":"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","file":"mapLayersModule.js","sourcesContent":["//jslint browser: true\n//global console, $, ol\n\n/**\n * OL3 layers module.\n * @external jQuery\n * @external OL3\n * @module\n * @returns {Object} Public functions and variables\n */\nvar mapLayersModule = (function () {\n    'use strict';\n\n    var layers = {};\n\n    var settings = {\n        bingMapsKey: 'Ak-dzM4wZjSqTlzveKz5u0d4IQ4bRzVI309GxmkgSVr1ewS6iPSrOvOKhA-CJlm3',\n        properties: {\n            visible: false,\n            preload: 'Infinity'\n        }\n    };\n\n\n    /**\n     * Change default configuration\n     * @public\n     * @param {Object} customSettings - Custom settings\n     */\n    var config = function (customSettings) {\n\n        $.extent(settings, customSettings);\n\n    };\n\n\n\n    /**\n     * Create a new layer using predefined settings\n     * @public\n     * @param {string} name - Predefined layer (variable name)\n     * @param {Object} [properties] - Layer custom parameters\n     * @returns {Object} OL3 layer\n     */\n    var create = function (name, properties) {\n\n        if (!layers[name]) {\n            console.warn(name + ' layer definition is not defined');\n            return;\n        }\n\n        var layer = layers[name]();\n\n        layer.setProperties(settings.properties);\n\n        if (properties) {\n            layer.setProperties(properties);\n        }\n\n        return layer;\n\n    };\n\n\n\n    // Base layers _________________________________________________________________________________\n\n    layers.openStreetMap = function () {\n        return new ol.layer.Tile({\n            name: 'openStreetMap',\n            title: 'Road Map<small> (by OpenStreetMap)</small>', // (offline)\n            visible: true,\n            type: 'base',\n            source: new ol.source.OSM({\n                // crossOrigin: null,\n                urls: [\n                    'http://a.tile.openstreetmap.org/{z}/{x}/{y}.png'\n                    //'../../Datas/Tiles/osm_mapnik/{z}/{x}/{y}.png'\n                ]\n            })\n        });\n    };\n\n    layers.openSeaMap = function () {\n        return new ol.layer.Tile({\n            name: 'openSeaMap',\n            title: 'Shipping lanes<small> (by OpenSeaMap)</small>',\n            type: 'base',\n            source: new ol.source.OSM({\n                attributions: [\n                    new ol.Attribution({\n                        html: 'All maps &copy; ' +\n                                '<a href=\"http://www.openseamap.org/\">OpenSeaMap</a>'\n                    }),\n                    ol.source.OSM.ATTRIBUTION\n                ],\n                crossOrigin: null,\n                urls: [\n                    'http://tiles.openseamap.org/seamark/{z}/{x}/{y}.png',\n                    'http://t1.openseamap.org/seamark/{z}/{x}/{y}.png'\n                ]\n            })\n        });\n    };\n\n    layers.openStreetMapHumanitarian = function () {\n        return new ol.layer.Tile({\n            name: 'openStreetMapHumanitarian',\n            title: 'Humanitarian <small>(by OpenStreetMap)</small>',\n            type: 'base',\n            source: new ol.source.OSM({\n                attributions: [\n                    new ol.Attribution({\n                        html: 'All maps &copy; ' +\n                                '<a href=\"http://www.openstreetmap.fr/\">OpenStreetMap</a>'\n                    }),\n                    ol.source.OSM.ATTRIBUTION\n                ],\n                url: 'http://tile-{a-c}.openstreetmap.fr/hot/{z}/{x}/{y}.png'\n            })\n        });\n    };\n\n    layers.mapquestOSM = function () {\n        return new ol.layer.Tile({\n            name: 'mapquestOSM',\n            title: 'Road map<small> (by MapQuest)</small>',\n            type: 'base',\n            source: new ol.source.MapQuest({\n                layer: 'osm'\n            })\n        });\n    };\n\n    layers.mapquestSat = function () {\n        return new ol.layer.Tile({\n            name: 'mapquestSat',\n            title: 'Aerial view<small> (by MapQuest)</small>',\n            type: 'base',\n            source: new ol.source.MapQuest({\n                layer: 'sat'\n            })\n        });\n    };\n\n\n    // http://thunderforest.com/maps/opencyclemap/\n    layers.openCycleMap = function () {\n        return new ol.layer.Tile({\n            name: 'openCycleMap',\n            title: 'Cycling roads<small> (by OpenCycleMap)</small>',\n            type: 'base',\n            source: new ol.source.OSM({\n                attributions: [\n                    new ol.Attribution({\n                        html: 'All maps &copy; ' +\n                                '<a href=\"http://www.opencyclemap.org/\">OpenCycleMap</a>'\n                    }),\n                    ol.source.OSM.ATTRIBUTION\n                ],\n                url: 'http://{a-c}.tile.opencyclemap.org/cycle/{z}/{x}/{y}.png'\n            })\n        });\n    };\n\n    // http://thunderforest.com/maps/transport/\n    layers.thunderforestTransport = function () {\n        return new ol.layer.Tile({\n            name: 'thunderforestTransport',\n            title: 'Transports<small> (by ThunderForest)</small>',\n            type: 'base',\n            source: new ol.source.OSM({\n                attributions: [\n                    new ol.Attribution({\n                        html: 'All maps &copy; ' +\n                                '<a href=\"http://www.thunderforest.com/\">ThunderForest</a>'\n                    }),\n                    ol.source.OSM.ATTRIBUTION\n                ],\n                url: 'http://{a-c}.tile.thunderforest.com/transport/{z}/{x}/{y}.png'\n            })\n        });\n    };\n\n    // http://thunderforest.com/maps/transport-dark/\n    layers.thunderforestTransportDark = function () {\n        return new ol.layer.Tile({\n            name: 'thunderforestTransportDark',\n            title: 'Transport dark<small> (by ThunderForest)</small>',\n            type: 'base',\n            source: new ol.source.OSM({\n                attributions: [\n                    new ol.Attribution({\n                        html: 'All maps &copy; ' +\n                                '<a href=\"http://www.thunderforest.com/\">ThunderForest</a>'\n                    }),\n                    ol.source.OSM.ATTRIBUTION\n                ],\n                url: 'https://{a-c}.tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png'\n            })\n        });\n    };\n\n    // http://thunderforest.com/maps/landscape/\n    layers.thunderforestLandscape = function () {\n        return new ol.layer.Tile({\n            name: 'thunderforestLandscape',\n            title: 'Landscape<small> (by ThunderForest)</small>',\n            type: 'base',\n            source: new ol.source.OSM({\n                attributions: [\n                    new ol.Attribution({\n                        html: 'All maps &copy; ' +\n                                '<a href=\"http://www.thunderforest.com/\">ThunderForest</a>'\n                    }),\n                    ol.source.OSM.ATTRIBUTION\n                ],\n                url: 'https://{a-c}.tile.thunderforest.com/landscape/{z}/{x}/{y}.png'\n            })\n        });\n    };\n\n    // http://thunderforest.com/maps/outdoors/\n    layers.thunderforestOutdoor = function () {\n        return new ol.layer.Tile({\n            name: 'thunderforestOutdoor',\n            title: 'Outdoor activities<small> (by ThunderForest)</small>',\n            type: 'base',\n            source: new ol.source.OSM({\n                attributions: [\n                    new ol.Attribution({\n                        html: 'All maps &copy; ' +\n                                '<a href=\"http://www.thunderforest.com/\">ThunderForest</a>'\n                    }),\n                    ol.source.OSM.ATTRIBUTION\n                ],\n                url: 'https://{a-c}.tile.thunderforest.com/outdoors/{z}/{x}/{y}.png'\n            })\n        });\n    };\n\n    layers.arcgis = function () {\n        return new ol.layer.Tile({\n            name: 'arcgis',\n            title: 'Terrain<small> (by ArcGIS)</small>',\n            type: 'base',\n            source: new ol.source.XYZ({\n                crossOrigin: 'anonymous', // Important\n                attributions: [\n                    new ol.Attribution({\n                        html: 'Tiles &copy; <a href=\"http://services.arcgisonline.com/ArcGIS/' +\n                                'rest/services/World_Topo_Map/MapServer\">ArcGIS</a>'\n                    })\n                ],\n                url: 'http://server.arcgisonline.com/ArcGIS/rest/services/' +\n                        'World_Topo_Map/MapServer/tile/{z}/{y}/{x}'\n\n            })\n        });\n    };\n\n    layers.arcgisRestHighwayUSA = function () {\n        return new ol.layer.Tile({\n            name: 'arcgisRestHighwayUSA',\n            title: 'Highway USA<small> (by ArcGIS)</small>',\n            type: 'base',\n            extent: [-13884991, 2870341, -7455066, 6338219],\n            source: new ol.source.TileArcGISRest({\n                url: 'http://sampleserver1.arcgisonline.com/ArcGIS/rest/services/Specialty/' + 'ESRI_StateCityHighway_USA/MapServer'\n            })\n        });\n    };\n\n    layers.googleTerrain = function () {\n        return new ol.layer.Tile({\n            name: 'googleTerrain',\n            title: 'Terrain + labels<small> (by Google)</small>',\n            type: 'base',\n            source: new ol.source.XYZ({\n                crossOrigin: 'anonymous', // Important\n                url: 'http://mts0.google.com/vt/lyrs=t@132,r@285000000&hl=en&src=app&x={x}&y={y}&z={z}&s=1'\n            })\n        });\n    };\n\n    layers.googleSatellite = function () {\n        return new ol.layer.Tile({\n            name: 'googleSatellite',\n            title: 'Aerial view<small> (by Google)</small>',\n            type: 'base',\n            source: new ol.source.XYZ({\n                crossOrigin: 'anonymous', // Important\n                //resolutions: [9784, 2446, 1223, 76.44, 9.55, 2.39],\n                url: 'http://khms0.google.com/kh/v=165&src=app&x={x}&y={y}&z={z}&s=1'\n            })\n        });\n    };\n\n    layers.bingRoad = function () {\n        return new ol.layer.Tile({\n            name: 'bingRoad',\n            title: 'Road map<small> (by Bing)</small>',\n            type: 'base',\n            maxZoom: 19,\n            source: new ol.source.BingMaps({\n                key: settings.bingMapsKey,\n                imagerySet: 'Road'\n            })\n        });\n    };\n\n    layers.bingAerial = function () {\n        return new ol.layer.Tile({\n            name: 'bingAerial',\n            title: 'Aerial view<small> (by Bing)</small>',\n            type: 'base',\n            maxZoom: 19,\n            source: new ol.source.BingMaps({\n                key: settings.bingMapsKey,\n                imagerySet: 'Aerial'\n            })\n        });\n    };\n\n    layers.bingAerialWithLabels = function () {\n        return new ol.layer.Tile({\n            name: 'bingAerialWithLabels',\n            title: 'Aerial view with labels<small> (by Bing)</small>',\n            type: 'base',\n            maxZoom: 19,\n            source: new ol.source.BingMaps({\n                key: settings.bingMapsKey,\n                imagerySet: 'AerialWithLabels'\n            })\n        });\n    };\n\n    layers.bingCollinsBart = function () {\n        return new ol.layer.Tile({\n            name: 'bingCollinsBart',\n            title: 'CollinsBart<small> (by Bing)</small>',\n            type: 'base',\n            maxZoom: 19,\n            source: new ol.source.BingMaps({\n                key: settings.bingMapsKey,\n                imagerySet: 'collinsBart'\n            })\n        });\n    };\n\n    layers.bingOrdnanceSurvey = function () {\n        return new ol.layer.Tile({\n            name: 'bingOrdnanceSurvey',\n            title: 'OrdnanceSurvey<small> (by Bing)</small>',\n            type: 'base',\n            maxZoom: 19,\n            source: new ol.source.BingMaps({\n                key: settings.bingMapsKey,\n                imagerySet: 'ordnanceSurvey'\n            })\n        });\n    };\n\n    // Stamen\n    // http://maps.stamen.com/#watercolor/12/37.7706/-122.3782\n\n    // toner toner-hybrid toner-labels toner-lines toner-background toner-lite\n    layers.stamenToner = function () {\n        return new ol.layer.Tile({\n            name: 'stamenToner',\n            title: 'B&W map<small> (by Stamen)</small>',\n            type: 'base',\n            source: new ol.source.Stamen({\n                layer: 'toner'\n            })\n        });\n    };\n\n    layers.stamenTonerLite = function () {\n        return new ol.layer.Tile({\n            name: 'stamenTonerLite',\n            title: 'Gray scale map<small> (by Stamen)</small>',\n            type: 'base',\n            source: new ol.source.Stamen({\n                layer: 'toner-lite'\n            })\n        });\n    };\n\n    layers.stamenTonerBackground = function () {\n        return new ol.layer.Tile({\n            name: 'stamenTonerBackground',\n            title: 'B&W background<small> (by Stamen)</small>',\n            type: 'base',\n            source: new ol.source.Stamen({\n                layer: 'toner-background'\n            })\n        });\n    };\n\n    layers.stamenWatercolor = function () {\n        return new ol.layer.Tile({\n            name: 'stamenWatercolor',\n            title: 'Watercolor map<small> (by Stamen)</small>',\n            type: 'base',\n            source: new ol.source.Stamen({\n                layer: 'watercolor'\n            })\n        });\n    };\n\n    // terrain terrain-labels terrain-lines terrain-background\n    layers.stamenTerrain = function () {\n        return new ol.layer.Tile({\n            name: 'stamenTerrain',\n            title: 'Terrain USA<small> (by Stamen)</small>',\n            type: 'base',\n            source: new ol.source.Stamen({\n                layer: 'terrain'\n            })\n        });\n    };\n\n    layers.stamenTerrainWithLabels = function () {\n        return new ol.layer.Tile({\n            name: 'stamenTerrainLabels',\n            title: 'Terrain + labels USA<small> (by Stamen)</small>',\n            type: 'base',\n            source: new ol.source.Stamen({\n                layer: 'terrain-labels'\n            })\n        });\n    };\n\n    /*\n    // Err\n    layers.stamenBurningMap = function () {\n    return new ol.layer.Tile({\n        name: 'stamenBurningMap',\n        title: 'Burning map<small> (by Stamen)</small>',\n        type: 'base',\n        source: new ol.source.Stamen({\n            layer: 'burningmap'\n        })\n    });\n    };\n\n    // Err\n    layers.stamenMars = function () {\n    return new ol.layer.Tile({\n        name: 'stamenMars',\n        title: 'Mars<small> (by Stamen)</small>',\n        type: 'base',\n        source: new ol.source.Stamen({\n            layer: 'mars'\n        })\n    });\n    };\n\n    // Err\n    layers.stamenTreesCabsCrime = function () {\n    return new ol.layer.Tile({\n        name: 'stamenTreesCabsCrime',\n        title: 'Trees Cabs Crime<small> (by Stamen)</small>',\n        type: 'base',\n        source: new ol.source.Stamen({\n            layer: 'trees-cabs-crime'\n        })\n    });\n    };\n    */\n\n\n\n    // Overlays ____________________________________________________________________________________\n\n    layers.googleBike = function () {\n        return new ol.layer.Tile({\n            name: 'googleBike',\n            title: 'Cycling roads<small> (by Google)</small>',\n            visible: true,\n            opacity: 1,\n            source: new ol.source.XYZ({\n                //attributions: [\n                //  new ol.Attribution({\n                //    html: 'Map data &copy; <a href=\"http://www.openstreetmap.org/\">OpenStreetMap</a> and contributors <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>'\n                //  }),\n                //  ol.source.OSM.ATTRIBUTION\n                //],\n                crossOrigin: 'anonymous',\n                url: 'http://mts0.google.com/vt/lyrs=h@239000000,bike&hl=en&src=app&x={x}&y={y}&z={z}&s=1'\n            })\n        });\n    };\n\n    layers.mapquestHyb = function () {\n        return new ol.layer.Tile({\n            name: 'mapquestHyb',\n            title: 'City names<small> (by MapQuest)</small>',\n            source: new ol.source.MapQuest({\n                layer: 'hyb'\n            })\n        });\n    };\n\n    layers.lonviaCycling = function () {\n        return new ol.layer.Tile({\n            name: 'lonviaCycling',\n            title: 'Cycling roads<small> (by Lonvia)</small>',\n            opacity: 0.7,\n            source: new ol.source.OSM({\n                attributions: [\n                    new ol.Attribution({\n                        html: 'Map data &copy; <a href=\"http://www.openstreetmap.org/\">OpenStreetMap</a> and contributors <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>'\n                    }),\n                    ol.source.OSM.ATTRIBUTION\n                ],\n                crossOrigin: null,\n                url: 'http://tile.lonvia.de/cycling/{z}/{x}/{y}.png'\n                    // urls: [\n                    //  'http://tile.waymarkedtrails.org/cycling/{z}/{x}/{y}.png',\n                    //  'http://tile.lonvia.de/cycling/{z}/{x}/{y}.png',\n                    //  '../../Datas/Tiles/lonvia_cycling/{z}/{x}/{y}.png'\n                    // ]\n            })\n        });\n    };\n\n    layers.lonviaHiking = function () {\n        return new ol.layer.Tile({\n            name: 'lonviaHiking',\n            title: 'Hiking paths<small> (by Lonvia)</small>',\n            opacity: 0.7,\n            source: new ol.source.OSM({\n                attributions: [\n                    new ol.Attribution({\n                        html: 'Map data &copy; <a href=\"http://www.openstreetmap.org/\">OpenStreetMap</a> and contributors <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>'\n                    }),\n                    ol.source.OSM.ATTRIBUTION\n                ],\n                crossOrigin: null,\n                url: 'http://tile.lonvia.de/hiking/{z}/{x}/{y}.png'\n            })\n        });\n    };\n\n    layers.stamenTonerHybrid = function () {\n        return new ol.layer.Tile({\n            name: 'stamenTonerHybrid',\n            title: 'B&W roads + labels<small> (by Stamen)</small>',\n            source: new ol.source.Stamen({\n                layer: 'toner-hybrid'\n            })\n        });\n    };\n\n    layers.stamenTonerLabels = function () {\n        return new ol.layer.Tile({\n            name: 'stamenTonerLabels',\n            title: 'B&W labels<small> (by Stamen)</small>',\n            source: new ol.source.Stamen({\n                layer: 'toner-labels'\n            })\n        });\n    };\n\n    layers.stamenTonerLines = function () {\n        return new ol.layer.Tile({\n            name: 'stamenTonerLines',\n            title: 'B&W roads<small> (by Stamen)</small>',\n            source: new ol.source.Stamen({\n                layer: 'toner-lines'\n            })\n        });\n    };\n\n    layers.mapboxShadedRelief = function () {\n        return new ol.layer.Image({\n            name: 'mapboxShadedRelief',\n            title: 'Shaded relief<small> (by Mapbox)</small>',\n            source: new ol.source.Raster({\n                sources: [\n                    new ol.source.XYZ({\n                        url: 'https://{a-d}.tiles.mapbox.com/v3/aj.sf-dem/{z}/{x}/{y}.png',\n                        crossOrigin: 'anonymous'\n                    })\n                ],\n                operationType: 'image',\n                operation: shade\n            }),\n            opacity: 0.3\n        });\n    };\n\n    // See http://openlayers.org/en/v3.4.0/examples/kml-timezones.html\n    layers.timeZones = function () {\n        return new ol.layer.Vector({\n            name: 'timeZones',\n            title: 'Time zones',\n            style: _timezonesStyle,\n            minResolution: 4891,\n            source: new ol.source.Vector({\n                    extractStyles: false,\n                    projection: 'EPSG:3857',\n                    url: 'data/kml/timezones.kml',\n                    format: new ol.format.KML()\n                })\n                //source: new ol.source.Vector({\n                //    url: 'data/kml/timezones.kml',\n                //    format: new ol.format.KML({\n                //        extractStyles: false\n                //    })\n                //})\n        });\n    };\n\n    layers.drawingVector = function () {\n        return new ol.layer.Tile({\n            name: 'drawing',\n            title: 'My drawings'\n            // ,\n            //    source: new ol.source.MapQuest({layer: 'sat'})\n        });\n    };\n\n    /*\n    layers.toolserverHillShading = function () {\n    return new ol.layer.Tile({\n        name: 'toolserverHillShading',\n        title: 'Toolserver hill shading',\n        minZoom: 2,\n        maxZoom: 15,\n        source: new ol.source.XYZ({\n            // crossOrigin: null,\n            urls: [\n                // 'http://toolserver.org/~cmarqu/hill/{z}/{x}/{y}.png',\n                'http://a.tiles.wmflabs.org/hillshading/{z}/{x}/{y}.png',\n                'http://b.tiles.wmflabs.org/hillshading/{z}/{x}/{y}.png',\n                'http://c.tiles.wmflabs.org/hillshading/{z}/{x}/{y}.png'\n            ]\n        })\n    });\n    };\n    */\n\n    //layers.grid = function () {\n    //return new ol.layer.Tile({\n    //  name: 'gridLayer',\n    //  title: 'Country data',\n    //  style: 'Grid',\n    //  // visible: false,\n    //  source: sources.grid\n    //});\n    //};\n\n    // if (map && map.getView()) {\n    //    map.addLayer(scoresLayer);\n    // } else {\n    //    userOverlays.push(scoresLayer);\n    // }\n\n\n\n    // Styles ______________________________________________________________________________________\n\n    /**\n     * Timezones layer style\n     * See http://openlayers.org/en/v3.4.0/examples/kml-timezones.html\n     */\n\n    var _timezonesStyle = function (feature) { // feature, resolution\n        var offset = 0;\n        var name = feature.get('name'); // e.g. GMT -08:30\n        var match = name.match(/([\\-+]\\d{2}):(\\d{2})$/);\n        if (match) {\n            var hours = parseInt(match[1], 10);\n            var minutes = parseInt(match[2], 10);\n            offset = 60 * hours + minutes;\n        }\n        var date = new Date();\n        var local = new Date(date.getTime() +\n            (date.getTimezoneOffset() + offset) * 60000);\n        // offset from local noon (in hours)\n        var delta = Math.abs(12 - local.getHours() + (local.getMinutes() / 60));\n        if (delta > 12) {\n            delta = 24 - delta;\n        }\n        var opacity = 0.75 * (1 - delta / 12);\n        return [new ol.style.Style({\n            fill: new ol.style.Fill({\n                color: [0x55, 0x55, 0x55, opacity]\n                    //color: [0xff, 0xff, 0x33, opacity]\n            }),\n            stroke: new ol.style.Stroke({\n                color: '#ffffff'\n            })\n        })];\n\n    };\n\n    // _____________________________________________________________________________________________\n\n    /**\n     * Generates a shaded relief image given elevation data.  Uses a 3x3\n     * neighborhood for determining slope and aspect.\n     * @param {Array.<ImageData>} inputs Array of input images.\n     * @param {Object} data Data added in the \"beforeoperations\" event.\n     * @return {ImageData} Output image.\n     */\n    function shade(inputs, data) {\n      var elevationImage = inputs[0];\n      var width = elevationImage.width;\n      var height = elevationImage.height;\n      var elevationData = elevationImage.data;\n      var shadeData = new Uint8ClampedArray(elevationData.length);\n      var dp = data.resolution * 2;\n      var maxX = width - 1;\n      var maxY = height - 1;\n      var pixel = [0, 0, 0, 0];\n      var twoPi = 2 * Math.PI;\n      var halfPi = Math.PI / 2;\n      var sunEl = Math.PI * data.sunEl / 180;\n      var sunAz = Math.PI * data.sunAz / 180;\n      var cosSunEl = Math.cos(sunEl);\n      var sinSunEl = Math.sin(sunEl);\n      var pixelX, pixelY, x0, x1, y0, y1, offset,\n          z0, z1, dzdx, dzdy, slope, aspect, cosIncidence, scaled;\n      for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n        y0 = pixelY === 0 ? 0 : pixelY - 1;\n        y1 = pixelY === maxY ? maxY : pixelY + 1;\n        for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n          x0 = pixelX === 0 ? 0 : pixelX - 1;\n          x1 = pixelX === maxX ? maxX : pixelX + 1;\n\n          // determine elevation for (x0, pixelY)\n          offset = (pixelY * width + x0) * 4;\n          pixel[0] = elevationData[offset];\n          pixel[1] = elevationData[offset + 1];\n          pixel[2] = elevationData[offset + 2];\n          pixel[3] = elevationData[offset + 3];\n          z0 = data.vert * (pixel[0] + pixel[1] * 2 + pixel[2] * 3);\n\n          // determine elevation for (x1, pixelY)\n          offset = (pixelY * width + x1) * 4;\n          pixel[0] = elevationData[offset];\n          pixel[1] = elevationData[offset + 1];\n          pixel[2] = elevationData[offset + 2];\n          pixel[3] = elevationData[offset + 3];\n          z1 = data.vert * (pixel[0] + pixel[1] * 2 + pixel[2] * 3);\n\n          dzdx = (z1 - z0) / dp;\n\n          // determine elevation for (pixelX, y0)\n          offset = (y0 * width + pixelX) * 4;\n          pixel[0] = elevationData[offset];\n          pixel[1] = elevationData[offset + 1];\n          pixel[2] = elevationData[offset + 2];\n          pixel[3] = elevationData[offset + 3];\n          z0 = data.vert * (pixel[0] + pixel[1] * 2 + pixel[2] * 3);\n\n          // determine elevation for (pixelX, y1)\n          offset = (y1 * width + pixelX) * 4;\n          pixel[0] = elevationData[offset];\n          pixel[1] = elevationData[offset + 1];\n          pixel[2] = elevationData[offset + 2];\n          pixel[3] = elevationData[offset + 3];\n          z1 = data.vert * (pixel[0] + pixel[1] * 2 + pixel[2] * 3);\n\n          dzdy = (z1 - z0) / dp;\n\n          slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n\n          aspect = Math.atan2(dzdy, -dzdx);\n          if (aspect < 0) {\n            aspect = halfPi - aspect;\n          } else if (aspect > halfPi) {\n            aspect = twoPi - aspect + halfPi;\n          } else {\n            aspect = halfPi - aspect;\n          }\n\n          cosIncidence = sinSunEl * Math.cos(slope) +\n              cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n\n          offset = (pixelY * width + pixelX) * 4;\n          scaled = 255 * cosIncidence;\n          shadeData[offset] = scaled;\n          shadeData[offset + 1] = scaled;\n          shadeData[offset + 2] = scaled;\n          shadeData[offset + 3] = elevationData[offset + 3];\n        }\n      }\n\n      return new ImageData(shadeData, width, height);\n    }\n\n    // Set default properties\n    /*$.each(layers, function (i, layer) {\n        layer().setProperties(defaultProperties);\n    });*/\n\n\n    /*\n    // Translate layer and group titles once i18next plugin initialized\n    $.when(deferred.init.i18next).done(function () {\n\n        roadBaselayers.setProperties({\n            title: $.t('sections:roadLayers.title')\n        });\n\n        reliefBaselayers.setProperties({\n            title: $.t('sections:roadWithReliefLayers.title')\n        });\n\n        aerialBaselayers.setProperties({\n            title: $.t('sections:satelliteLayers.title')\n        });\n\n        baselayers.setProperties({\n            title: $.t('sections:baseLayer.title')\n        });\n\n        roadOverlays.setProperties({\n            title: $.t('sections:roadLayers.title')\n        });\n\n        informationOverlays.setProperties({\n            title: $.t('sections:infoLayers.title')\n        });\n\n        //terrainOverlays.setProperties({\n        //    title: $.t('sections:reliefLayers.title')\n        //});\n\n        userOverlays.setProperties({\n            title: $.t('sections:myLayers.title')\n        });\n\n        overlays.setProperties({\n            title: $.t('sections:layers.title')\n        });\n\n        informationOverlays.setProperties({\n            title: $.t('sections:infoLayers.title')\n        });\n\n        console.log('Map layers translated');\n\n    });\n    */\n\n    return {\n        create: create,\n        config: config\n    };\n\n})();"]}