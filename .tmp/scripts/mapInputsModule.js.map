{"version":3,"sources":["mapInputsModule.js"],"names":["mapInputsModule","map","inputs","create","name","selector","console","warn","input","layer","$input","$","getLayers","forEach","get","val","on","find","set","zoom","getZoom","getView","setZoom","resolution","getResolution","setResolution","rotation","setRotation","getRotation","centerX","lonLat","getCenter","centerY","center","Xselector","Yselector","$centerX","$centerY","toFixed","setCenter","exportPNG","document","getElementById","once","event","canvas","context","attr","toDataURL","GPXSource","window","File","FileReader","FileList","Blob","$filePath","inputEvent","files","target","f","reader","onload","loadEvent","returned","setProperties","title","escape","source","ol","Vector","url","result","format","GPX","visible","readAsDataURL"],"mappings":"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","file":"mapInputsModule.js","sourcesContent":["/*eslint-env browser, jquery */\r\n/*global escape, ol */\r\n/**\r\n * OL3 inputs module.\r\n * @module\r\n * @external $\r\n * @external escape\r\n * @external ol\r\n * @return {Object} Public functions / variables\r\n */\r\n/*eslint-disable no-unused-vars*/\r\nvar mapInputsModule = (function () {\r\n    /*eslint-enable no-unused-vars*/\r\n    'use strict';\r\n\r\n    /** @private */\r\n    var map;\r\n\r\n\r\n\r\n    /** @private */\r\n    var inputs = {};\r\n\r\n\r\n\r\n    /**\r\n     * Create a new input using predefined settings\r\n     * @public\r\n     * @param {string} name - Predefined input (variable name)\r\n     * @return {Object} OL3 layer\r\n     */\r\n    var create = function (name, selector) {\r\n        if (!inputs[name]) {\r\n            console.warn(name + ' input definition does not exists');\r\n            return false;\r\n        }\r\n        var input = inputs[name](selector);\r\n        return input;\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * Base layer select\r\n     * @param {string} selector - Select input ID\r\n     * @param {Object} map - OL3 map\r\n     */\r\n    inputs.layer = function (selector) {\r\n        var $input = $(selector);\r\n        if ($input) {\r\n            map.getLayers().forEach(function (layer) {\r\n                if (layer.get('visible')) {\r\n                    $input.val(layer.get('name'));\r\n                }\r\n            });\r\n            $input.on('change', function () {\r\n                var name = $input.find(':selected').val();\r\n                map.getLayers().forEach(function (layer) {\r\n                    layer.set('visible', (layer.get('name') === name));\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * Map zoom input\r\n     * @param {string} selector - Input ID or class\r\n     * @param {Object} map - OL3 map\r\n     */\r\n    inputs.zoom = function (selector) {\r\n        var $input = $(selector);\r\n        if ($input) {\r\n            $input.val(this.getZoom());\r\n            $input.on('change', function () {\r\n                var val = $input.val();\r\n                if (val || val === 0) {\r\n                    map.getView().setZoom(val);\r\n                }\r\n            });\r\n            map.getView().on('change:resolution', function () {\r\n                $input.val(this.getZoom());\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * Map resolution input\r\n     * @param {string} selector - Input ID or class\r\n     * @param {Object} map - OL3 map\r\n     */\r\n    inputs.resolution = function (selector) {\r\n        var $input = $(selector);\r\n        if ($input) {\r\n            $input.val(this.getResolution());\r\n            $input.on('change', function () {\r\n                var val = $input.val();\r\n                if (val || val === 0) {\r\n                    map.getView().setResolution(val);\r\n                }\r\n            });\r\n            map.getView().on('change:resolution', function () {\r\n                $input.val(this.getResolution());\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * Map rotation input\r\n     * @param {string} selector - Input ID or class\r\n     * @param {Object} map - OL3 map\r\n     */\r\n    inputs.rotation = function (selector) {\r\n        var $input = $(selector);\r\n        $input.on('change', function () {\r\n            var val = $input.val();\r\n            if (val || val === 0) {\r\n                map.getView().setRotation(val);\r\n            }\r\n        });\r\n        map.getView().on('change:rotation', function () {\r\n            $input.val(this.getRotation());\r\n        });\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * Map X center input\r\n     * @param {string} selector - Input ID or class\r\n     * @param {Object} map - OL3 map\r\n     */\r\n    inputs.centerX = function (selector) {\r\n        var $input = $(selector);\r\n        $input.on('change', function () {\r\n            var val = $input.val();\r\n            if (val || val === 0) {\r\n                // map.getView().setCenter($centerX.val(), $centerY.val());\r\n            }\r\n        });\r\n        map.getView().on('change:center', function () {\r\n            var lonLat = this.getCenter();\r\n            $input.val(lonLat[0]); // .toFixed(2)\r\n        });\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * Map Y center input\r\n     * @param {string} selector - Input ID or class\r\n     * @param {Object} map - OL3 map\r\n     */\r\n    inputs.centerY = function (selector) {\r\n        var $input = $(selector);\r\n        $input.on('change', function () {\r\n            var val = $input.val();\r\n            if (val || val === 0) {\r\n                //map.getView().setCenter($centerX.val(), val);\r\n            }\r\n        });\r\n        map.getView().on('change:center', function () {\r\n            var lonLat = this.getCenter();\r\n            $input.val(lonLat[1]); // .toFixed(2)\r\n        });\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * Map XY center input\r\n     * @param {string} selector - Input ID or class\r\n     * @param {Object} map - OL3 map\r\n     */\r\n    inputs.center = function (Xselector, Yselector) {\r\n        var $centerX = $(Xselector);\r\n        var $centerY = $(Yselector);\r\n        map.getView().on('change:center', function () {\r\n            var lonLat = this.getCenter();\r\n            if (lonLat) {\r\n                $centerX.val(lonLat[0].toFixed(2));\r\n                $centerY.val(lonLat[1].toFixed(2));\r\n            }\r\n        });\r\n        $(Xselector + ', ' + Yselector).on('change', function () {\r\n            if (($centerX.val() || $centerX.val() === 0) && ($centerY.val() || $centerY.val() === 0)) {\r\n                map.getView().setCenter($centerX.val(), $centerY.val());\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * Export map as PNG\r\n     */\r\n    inputs.exportPNG = function () {\r\n        var $input = document.getElementById('export-png');\r\n        if ($input) {\r\n            $input.on('click', function () {\r\n                map.once('postcompose', function (event) {\r\n                    var canvas = event.context.canvas;\r\n                    $input.attr('href', canvas.toDataURL('image/png'));\r\n                });\r\n                // map.renderSync();\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * Update layer source url from a file input\r\n     * <input id=\"gpx_file\" type=\"file\" accept=\".gpx\" />\r\n     * @see {@link http://www.html5rocks.com/en/tutorials/file/dndfiles/}\r\n     * @public\r\n     * @param {string} selector - File input ID\r\n     * @param {Object} layer - OL3 vector layer\r\n     */\r\n    inputs.GPXSource = function (selector, layer) {\r\n        if (!(window.File && window.FileReader && window.FileList && window.Blob)) {\r\n            console.warn('The File APIs are not fully supported in this browser.');\r\n        }\r\n        var $filePath = $(selector);\r\n        $filePath.on('change', function (inputEvent) {\r\n            var files = inputEvent.target.files;\r\n            files.forEach(function (f) {\r\n                var reader = new FileReader();\r\n                reader.onload = (function (loadEvent) {\r\n                    return function (returned) {\r\n                        layer.setProperties({\r\n                            title: escape(loadEvent.name),\r\n                            source: new ol.source.Vector({\r\n                                url: returned.target.result,\r\n                                format: new ol.format.GPX()\r\n                            }),\r\n                            visible: true\r\n                        });\r\n                    };\r\n                })(f);\r\n                reader.readAsDataURL(f);\r\n            });\r\n        });\r\n    };\r\n\r\n\r\n    return {\r\n        create: create\r\n    };\r\n\r\n})();\r\n"]}