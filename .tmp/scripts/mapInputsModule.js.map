{"version":3,"sources":["../../app/scripts/mapInputsModule.js"],"names":[],"mappings":"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","file":"mapInputsModule.js","sourcesContent":["//jslint browser: true\n//global $, mapModule\n\n/**\n * OL3 inputs module.\n * @external jQuery\n * @external OL3\n * @external mapModule\n * @module\n * @returns {Object} mapModule\n */\nvar mapInputsModule = (function () {\n    'use strict';\n\n    /** @private */\n    var map;\n\n    /** @private */\n    var inputs = {};\n\n\n\n    /**\n     * Create a new input using predefined settings\n     * @public\n     * @param {string} name - Predefined input (variable name)\n     * @returns {Object} OL3 layer\n     */\n    var create = function (name, selector, map) {\n\n        if (!inputs[name]) {\n            console.warn(name + ' input definition does not exists');\n            return;\n        }\n\n        var input = inputs[name](selector);\n\n        return input;\n\n    };\n\n\n\n    /**\n     * Base layer select\n     * @param {string} selector - Select input ID\n     * @param {Object} map - OL3 map\n     */\n    inputs.layer = function (selector) {\n        var $input = $(selector);\n        if ($input) {\n            map.getLayers().forEach(function (layer) {\n                if (layer.get('visible')) {\n                    $input.val(layer.get('name'));\n                }\n            });\n            $input.on('change', function () {\n                var name = $input.find(':selected').val();\n                map.getLayers().forEach(function (layer) {\n                    layer.set('visible', (layer.get('name') === name));\n                });\n            });\n        }\n    };\n\n\n\n    /**\n     * Map zoom input\n     * @param {string} selector - Input ID or class\n     * @param {Object} map - OL3 map\n     */\n    inputs.zoom = function (selector) {\n        var $input = $(selector);\n        if ($input) {\n            $input.val(this.getZoom());\n            $input.on('change', function () {\n                var val = $input.val();\n                if (val || val === 0) {\n                    map.getView().setZoom(val);\n                }\n            });\n            map.getView().on('change:resolution', function () {\n                $input.val(this.getZoom());\n            });\n        }\n    };\n\n\n\n    /**\n     * Map resolution input\n     * @param {string} selector - Input ID or class\n     * @param {Object} map - OL3 map\n     */\n    inputs.resolution = function (selector) {\n        var $input = $(selector);\n        if ($input) {\n            $input.val(this.getResolution());\n            $input.on('change', function () {\n                var val = $input.val();\n                if (val || val === 0) {\n                    map.getView().setResolution(val);\n                }\n            });\n            map.getView().on('change:resolution', function () {\n                $input.val(this.getResolution());\n            });\n        }\n    };\n\n\n\n    /**\n     * Map rotation input\n     * @param {string} selector - Input ID or class\n     * @param {Object} map - OL3 map\n     */\n    inputs.rotation = function (selector) {\n        var $input = $(selector);\n        $input.on('change', function () {\n            var val = $input.val();\n            if (val || val === 0) {\n                map.getView().setRotation(val);\n            }\n        });\n        map.getView().on('change:rotation', function () {\n            $input.val(this.getRotation());\n        });\n    };\n\n\n\n    /**\n     * Map X center input\n     * @param {string} selector - Input ID or class\n     * @param {Object} map - OL3 map\n     */\n    inputs.centerX = function (selector) {\n        var $input = $(Xselector);\n        $input.on('change', function () {\n            var val = $input.val();\n            if (val || val === 0) {\n                // map.getView().setCenter($centerX.val(), $centerY.val());\n            }\n        });\n        map.getView().on('change:center', function () {\n            var lonLat = this.getCenter();\n            $input.val(lonLat[0]); // .toFixed(2)\n        });\n    };\n\n\n\n    /**\n     * Map Y center input\n     * @param {string} selector - Input ID or class\n     * @param {Object} map - OL3 map\n     */\n    inputs.centerY = function (selector) {\n        var $input = $(selector);\n        $input.on('change', function () {\n            var val = $input.val();\n            if (val || val === 0) {\n                //map.getView().setCenter($centerX.val(), val);\n            }\n        });\n        map.getView().on('change:center', function () {\n            var lonLat = this.getCenter();\n            $input.val(lonLat[1]); // .toFixed(2)\n        });\n    };\n\n\n\n    /**\n     * Map XY center input\n     * @param {string} selector - Input ID or class\n     * @param {Object} map - OL3 map\n     */\n    inputs.center = function (Xselector, Yselector) {\n        var $centerX = $(Xselector);\n        var $centerY = $(Yselector);\n        map.getView().on('change:center', function () {\n            var lonLat = this.getCenter();\n            if (lonLat) {\n                $centerX.val(lonLat[0].toFixed(2));\n                $centerY.val(lonLat[1].toFixed(2));\n            }\n        });\n        $(Xselector + ', ' + Yselector).on('change', function () {\n            if (($centerX.val() || $centerX.val() === 0) && ($centerY.val() || $centerY.val() === 0)) {\n                map.getView().setCenter($centerX.val(), $centerY.val());\n            }\n        });\n    };\n\n\n\n    /**\n     * Export map as PNG\n     * @param {string} selector - Link ID or class\n     * @param {Object} map - OL3 map\n     */\n    inputs.exportPNG = function (selector) {\n        var $input = document.getElementById('export-png');\n        if ($input) {\n            $input.on('click', function () {\n                map.once('postcompose', function (event) {\n                    var canvas = event.context.canvas;\n                    $input.attr('href', canvas.toDataURL('image/png'));\n                });\n                // map.renderSync();\n            });\n        }\n    };\n\n\n\n    /**\n     * Update layer source url from a file input\n     * <input id=\"gpx_file_path\" type=\"file\" accept=\".gpx\" />\n     * @see {@link http://www.html5rocks.com/en/tutorials/file/dndfiles/}\n     * @public\n     * @param {string} selector - File input ID\n     * @param {Object} layer - OL3 vector layer\n     */\n    inputs.GPXSource = function (selector, layer) {\n\n        if (!(window.File && window.FileReader && window.FileList && window.Blob)) {\n            console.warn('The File APIs are not fully supported in this browser.');\n        }\n\n        var $filePath = $(selector);\n        $filePath.on('change', function (e) {\n\n            var files = e.target.files;\n            files.forEach(function (f) {\n\n                var reader = new FileReader();\n                reader.onload = (function (theFile) {\n                    return function (e) {\n                        layer.setProperties({\n                            title: escape(theFile.name),\n                            source: new ol.source.Vector({\n                                url: e.target.result,\n                                format: new ol.format.GPX()\n                            }),\n                            visible: true\n                        });\n                    };\n                })(f);\n\n                reader.readAsDataURL(f);\n\n            });\n\n        });\n\n    };\n\n    \n    \n    return {\n        create: create\n    };\n\n})();"]}