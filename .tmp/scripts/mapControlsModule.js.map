{"version":3,"sources":["../../app/scripts/mapControlsModule.js"],"names":[],"mappings":";;;;;;;;;;;;AAYA,IAAI,oBAAoB,YAAa;AACjC,iBADiC;;AAGjC,QAAI,WAAW,EAAX,CAH6B;;AAKjC,QAAI,WAAW,EAAX;;;;;;;AAL6B,QAgB7B,SAAS,UAAU,cAAV,EAA0B;;AAEnC,UAAE,MAAF,CAAS,QAAT,EAAmB,kBAAkB,EAAlB,CAAnB,CAFmC;KAA1B;;;;;;;;AAhBoB,QA8B7B,SAAS,UAAU,IAAV,EAAgB,UAAhB,EAA4B;;AAErC,YAAI,CAAC,SAAS,IAAT,CAAD,EAAiB;AACjB,oBAAQ,IAAR,CAAa,OAAO,oCAAP,CAAb,CADiB;AAEjB,mBAFiB;SAArB;;AAKA,YAAI,UAAU,SAAS,IAAT,GAAV;;;;;;;;;AAPiC,eAiB9B,OAAP,CAjBqC;KAA5B;;;;AA9BoB,YAuDjC,CAAS,WAAT,GAAuB,YAAY;AAC/B,eAAO,IAAI,GAAG,OAAH,CAAW,WAAX,CAAuB;AAC9B,yBAAa,IAAb;;AAD8B,SAA3B,CAAP,CAD+B;KAAZ,CAvDU;;AA8DjC,aAAS,YAAT,GAAwB,YAAY;;;AAGhC,eAAO,IAAI,GAAG,OAAH,CAAW,YAAX,CAAwB;;;SAA5B,CAAP,CAHgC;KAAZ,CA9DS;;AAuEjC,aAAS,SAAT,GAAqB,YAAY;AAC7B,eAAO,IAAI,GAAG,OAAH,CAAW,SAAX,CAAqB;;SAAzB,CAAP,CAD6B;KAAZ,CAvEY;;AA6EjC,aAAS,UAAT,GAAsB,YAAY;AAC9B,eAAO,IAAI,GAAG,OAAH,CAAW,UAAX,CAAsB;;;;SAA1B,CAAP,CAD8B;KAAZ,CA7EW;;AAqFjC,aAAS,WAAT,GAAuB,YAAY;AAC/B,eAAO,IAAI,GAAG,OAAH,CAAW,WAAX,CAAuB;;AAE9B,uBAAW,sCAAX;;;;AAIA,2BAAe,QAAf;AACA,mBAAO,QAAP;AACA,uBAAW,IAAX;;AAR8B,SAA3B,CAAP,CAD+B;KAAZ,CArFU;;AAmGjC,aAAS,aAAT,GAAyB,YAAY;AACjC,eAAO,IAAI,GAAG,OAAH,CAAW,aAAX,CAAyB;;SAA7B,CAAP,CADiC;KAAZ,CAnGQ;;AAyGjC,aAAS,aAAT,GAAyB,YAAY;AACjC,eAAO,IAAI,GAAG,OAAH,CAAW,aAAX,CAAyB;AAChC,8BAAkB,GAAG,UAAH,CAAc,cAAd,CAA6B,CAA7B,CAAlB;AACA,wBAAY,WAAZ;;;AAGA,uBAAW,uBAAX;AACA,oBAAQ,SAAS,cAAT,CAAwB,gBAAxB,CAAR;AACA,2BAAe,QAAf;SAPG,CAAP,CADiC;KAAZ,CAzGQ;;AAuHjC,WAAO;AACH,gBAAQ,MAAR;AACA,gBAAQ,MAAR;KAFJ,CAvHiC;CAAZ,EAArB","file":"mapControlsModule.js","sourcesContent":["//jslint browser: true\r\n//global window, console, $, ol, swal, Quill, geocodeModule\r\n\r\n/**\r\n * OL3 controls module.\r\n * @external jQuery\r\n * @external OL3\r\n * @external Quill\r\n * @external geocodeModule\r\n * @module\r\n * @returns {Object} Public functions and variables\r\n */\r\nvar mapControlsModule = (function () {\r\n    'use strict';\r\n\r\n    var controls = {};\r\n\r\n    var settings = {\r\n\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * Change default settings\r\n     * @public\r\n     * @param {object} customSettings - Custom settings\r\n     */\r\n    var config = function (customSettings) {\r\n\r\n        $.extent(settings, customSettings || {});\r\n\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * Create a new control using predefined settings\r\n     * @public\r\n     * @param {string} name - Predefined control\r\n     * @returns {Object} - OL3 control\r\n     */\r\n    var create = function (name, properties) {\r\n\r\n        if (!controls[name]) {\r\n            console.warn(name + ' control definition is not defined');\r\n            return;\r\n        }\r\n\r\n        var control = controls[name]();\r\n\r\n        /*\r\n        control.setProperties(settings.properties);\r\n\r\n        if (properties) {\r\n            control.setProperties(properties);\r\n        }\r\n        */\r\n\r\n        return control;\r\n\r\n    };\r\n\r\n\r\n\r\n    // Controls ------------------------------------------------------------------------------------\r\n\r\n    controls.attribution = function () {\r\n        return new ol.control.Attribution({\r\n            collapsible: true\r\n            //tipLabel: $.t('buttons:olAttribution.label')\r\n        });\r\n    };\r\n\r\n    controls.zoomToExtent = function () {\r\n        //var projection = ol.proj.get('EPSG:4326'); // EPSG:3857 EPSG:4326\r\n        //var extent = projection.getExtent();\r\n        return new ol.control.ZoomToExtent({\r\n            //extent: extent //ol.proj.transformExtent([-180, -90, 180, 90], 'EPSG:4326', 'EPSG:3857')\r\n            //tipLabel: $.t('buttons:olZoomExtent.label')\r\n        });\r\n    };\r\n\r\n    controls.scaleLine = function () {\r\n        return new ol.control.ScaleLine({\r\n            //tipLabel: $.t('buttons:olScaleLine.label')\r\n        });\r\n    };\r\n\r\n    controls.fullScreen = function () {\r\n        return new ol.control.FullScreen({\r\n            //className: 'ol-glyphicon',\r\n            //label: '\\e140'\r\n            //tipLabel: $.t('buttons:olFullScreen.label')\r\n        });\r\n    };\r\n\r\n    controls.overviewMap = function () {\r\n        return new ol.control.OverviewMap({\r\n            // see in overviewmap-custom.html to see the custom CSS used\r\n            className: 'ol-overviewmap ol-custom-overviewmap',\r\n            //layers: [\r\n            //    mapLayersModule.baselayers\r\n            //],\r\n            collapseLabel: '\\u00AB',\r\n            label: '\\u00BB',\r\n            collapsed: true\r\n            //tipLabel: $.t('buttons:olOverviewmap.label')\r\n        });\r\n    };\r\n\r\n    controls.layerSwitcher = function () {\r\n        return new ol.control.LayerSwitcher({\r\n            //tipLabel: $.t('buttons:olLayerswitcher.label')\r\n        });\r\n    };\r\n\r\n    controls.mousePosition = function () {\r\n        return new ol.control.MousePosition({\r\n            coordinateFormat: ol.coordinate.createStringXY(4),\r\n            projection: 'EPSG:4326', // infoProjection\r\n            // comment the following two lines to have the mouse position\r\n            // be placed within the map.\r\n            className: 'custom-mouse-position',\r\n            target: document.getElementById('mouse-position'),\r\n            undefinedHTML: '&nbsp;'\r\n        });\r\n    };\r\n\r\n\r\n\r\n    return {\r\n        create: create,\r\n        config: config\r\n    };\r\n\r\n})();"]}