{"version":3,"sources":["mapControlsModule.js"],"names":[],"mappings":";;;;;;;;;;;AASA,IAAI,oBAAoB,YAAa;;AAEjC,iBAFiC;;AAIjC,QAAI,WAAW,EAAX;;;;;;;;AAJ6B,QAc7B,SAAS,SAAT,MAAS,CAAU,IAAV,EAAgB;AACzB,YAAI,CAAC,SAAS,IAAT,CAAD,EAAiB;AACjB,oBAAQ,IAAR,CAAa,OAAO,oCAAP,CAAb,CADiB;AAEjB,mBAAO,KAAP,CAFiB;SAArB;AAIA,YAAI,UAAU,SAAS,IAAT,GAAV;;;;;;;AALqB,eAYlB,OAAP,CAZyB;KAAhB;;AAdoB,YA6BjC,CAAS,WAAT,GAAuB,YAAY;AAC/B,eAAO,IAAI,GAAG,OAAH,CAAW,WAAX,CAAuB;AAC9B,yBAAa,IAAb;;AAD8B,SAA3B,CAAP,CAD+B;KAAZ,CA7BU;AAmCjC,aAAS,UAAT,GAAsB,YAAY;AAC9B,eAAO,IAAI,GAAG,OAAH,CAAW,UAAX,CAAsB,EAA1B,CAAP,CAD8B;KAAZ,CAnCW;AAwCjC,aAAS,YAAT,GAAwB,YAAY;;;AAGhC,eAAO,IAAI,GAAG,OAAH,CAAW,YAAX,CAAwB;;;SAA5B,CAAP,CAHgC;KAAZ,CAxCS;AAgDjC,aAAS,SAAT,GAAqB,YAAY;AAC7B,eAAO,IAAI,GAAG,OAAH,CAAW,SAAX,CAAqB;;SAAzB,CAAP,CAD6B;KAAZ,CAhDY;AAqDjC,aAAS,UAAT,GAAsB,YAAY;AAC9B,eAAO,IAAI,GAAG,OAAH,CAAW,UAAX,CAAsB;;;;SAA1B,CAAP,CAD8B;KAAZ,CArDW;AA4DjC,aAAS,WAAT,GAAuB,YAAY;AAC/B,eAAO,IAAI,GAAG,OAAH,CAAW,WAAX,CAAuB;;AAE9B,uBAAW,sCAAX;;;;AAIA,2BAAe,GAAf;AACA,mBAAO,GAAP;AACA,uBAAW,IAAX;;AAR8B,SAA3B,CAAP,CAD+B;KAAZ,CA5DU;AAyEjC,aAAS,aAAT,GAAyB,YAAY;AACjC,eAAO,IAAI,GAAG,OAAH,CAAW,aAAX,CAAyB;;SAA7B,CAAP,CADiC;KAAZ,CAzEQ;AA8EjC,aAAS,aAAT,GAAyB,YAAY;AACjC,eAAO,IAAI,GAAG,OAAH,CAAW,aAAX,CAAyB;AAChC,8BAAkB,GAAG,UAAH,CAAc,cAAd,CAA6B,CAA7B,CAAlB;AACA,wBAAY,WAAZ;;;AAGA,uBAAW,uBAAX;AACA,oBAAQ,SAAS,cAAT,CAAwB,gBAAxB,CAAR;AACA,2BAAe,QAAf;SAPG,CAAP,CADiC;KAAZ,CA9EQ;AAyFjC,WAAO;AACH,gBAAQ,MAAR;KADJ,CAzFiC;CAAZ,EAArB","file":"mapControlsModule.js","sourcesContent":["/*eslint-env browser, jquery */\n/*global ol */\n/**\n * OL3 controls module.\n * @module\n * @external ol\n * @return {Object} Public functions / variables\n */\n/*eslint-disable no-unused-vars*/\nvar mapControlsModule = (function () {\n    /*eslint-enable no-unused-vars*/\n    'use strict';\n\n    var controls = {};\n\n\n\n    /**\n     * Create a new control using predefined settings\n     * @public\n     * @param {string} name - Predefined control\n     * @return {Object} - OL3 control\n     */\n    var create = function (name) {\n        if (!controls[name]) {\n            console.warn(name + ' control definition is not defined');\n            return false;\n        }\n        var control = controls[name]();\n        /*\n        control.setProperties(settings.properties);\n        if (properties) {\n            control.setProperties(properties);\n        }\n        */\n        return control;\n    };\n    // Controls ------------------------------------------------------------------------------------\n    controls.attribution = function () {\n        return new ol.control.Attribution({\n            collapsible: true\n            //tipLabel: $.t('buttons:olAttribution.label')\n        });\n    };\n    controls.zoomSlider = function () {\n        return new ol.control.ZoomSlider({\n\n        });\n    };\n    controls.zoomToExtent = function () {\n        //var projection = ol.proj.get('EPSG:4326'); // EPSG:3857 EPSG:4326\n        //var extent = projection.getExtent();\n        return new ol.control.ZoomToExtent({\n            //extent: extent //ol.proj.transformExtent([-180, -90, 180, 90], 'EPSG:4326', 'EPSG:3857')\n            //tipLabel: $.t('buttons:olZoomExtent.label')\n        });\n    };\n    controls.scaleLine = function () {\n        return new ol.control.ScaleLine({\n            //tipLabel: $.t('buttons:olScaleLine.label')\n        });\n    };\n    controls.fullScreen = function () {\n        return new ol.control.FullScreen({\n            //className: 'ol-glyphicon',\n            //label: '\\e140'\n            //tipLabel: $.t('buttons:olFullScreen.label')\n        });\n    };\n    controls.overviewMap = function () {\n        return new ol.control.OverviewMap({\n            // see in overviewmap-custom.html to see the custom CSS used\n            className: 'ol-overviewmap ol-custom-overviewmap',\n            //layers: [\n            //    mapLayersModule.baselayers\n            //],\n            collapseLabel: '\\u00AB',\n            label: '\\u00BB',\n            collapsed: true\n            //tipLabel: $.t('buttons:olOverviewmap.label')\n        });\n    };\n    controls.layerSwitcher = function () {\n        return new ol.control.LayerSwitcher({\n            //tipLabel: $.t('buttons:olLayerswitcher.label')\n        });\n    };\n    controls.mousePosition = function () {\n        return new ol.control.MousePosition({\n            coordinateFormat: ol.coordinate.createStringXY(4),\n            projection: 'EPSG:4326', // infoProjection\n            // comment the following two lines to have the mouse position\n            // be placed within the map.\n            className: 'custom-mouse-position',\n            target: document.getElementById('mouse-position'),\n            undefinedHTML: '&nbsp;'\n        });\n    };\n    return {\n        create: create\n    };\n\n})();\n"],"sourceRoot":"/source/"}