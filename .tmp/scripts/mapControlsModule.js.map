{"version":3,"sources":["mapControlsModule.js"],"names":["mapControlsModule","controls","create","name","console","warn","control","attribution","ol","Attribution","collapsible","zoomSlider","ZoomSlider","zoomToExtent","ZoomToExtent","scaleLine","ScaleLine","fullScreen","FullScreen","overviewMap","OverviewMap","className","collapseLabel","label","collapsed","layerSwitcher","LayerSwitcher","mousePosition","MousePosition","coordinateFormat","coordinate","createStringXY","projection","target","document","getElementById","undefinedHTML"],"mappings":";;AAAA;AACA;AACA;;;;;;AAMA;AACA,IAAIA,oBAAqB,YAAY;AACjC;AACA;;AAEA,QAAIC,WAAW,EAAf;;AAIA;;;;;;AAMA,QAAIC,SAAS,SAATA,MAAS,CAAUC,IAAV,EAAgB;AACzB,YAAI,CAACF,SAASE,IAAT,CAAL,EAAqB;AACjBC,oBAAQC,IAAR,CAAaF,OAAO,oCAApB;AACA,mBAAO,KAAP;AACH;AACD,YAAIG,UAAUL,SAASE,IAAT,GAAd;AACA;;;;;;AAMJ,eAAOG,OAAP;AACH,KAbG;AAcJ;AACAL,aAASM,WAAT,GAAuB,YAAY;AAC/B,eAAO,IAAIC,GAAGF,OAAH,CAAWG,WAAf,CAA2B;AAC9BC,yBAAa;AACb;AAF8B,SAA3B,CAAP;AAIH,KALD;AAMAT,aAASU,UAAT,GAAsB,YAAY;AAC9B,eAAO,IAAIH,GAAGF,OAAH,CAAWM,UAAf,CAA0B,EAA1B,CAAP;AAGH,KAJD;AAKAX,aAASY,YAAT,GAAwB,YAAY;AAChC;AACA;AACA,eAAO,IAAIL,GAAGF,OAAH,CAAWQ,YAAf,CAA4B;AAC/B;AACA;AAF+B,SAA5B,CAAP;AAIH,KAPD;AAQAb,aAASc,SAAT,GAAqB,YAAY;AAC7B,eAAO,IAAIP,GAAGF,OAAH,CAAWU,SAAf,CAAyB;AAC5B;AAD4B,SAAzB,CAAP;AAGH,KAJD;AAKAf,aAASgB,UAAT,GAAsB,YAAY;AAC9B,eAAO,IAAIT,GAAGF,OAAH,CAAWY,UAAf,CAA0B;AAC7B;AACA;AACA;AAH6B,SAA1B,CAAP;AAKH,KAND;AAOAjB,aAASkB,WAAT,GAAuB,YAAY;AAC/B,eAAO,IAAIX,GAAGF,OAAH,CAAWc,WAAf,CAA2B;AAC9B;AACAC,uBAAW,sCAFmB;AAG9B;AACA;AACA;AACAC,2BAAe,MANe;AAO9BC,mBAAO,MAPuB;AAQ9BC,uBAAW;AACX;AAT8B,SAA3B,CAAP;AAWH,KAZD;AAaAvB,aAASwB,aAAT,GAAyB,YAAY;AACjC,eAAO,IAAIjB,GAAGF,OAAH,CAAWoB,aAAf,CAA6B;AAChC;AADgC,SAA7B,CAAP;AAGH,KAJD;AAKAzB,aAAS0B,aAAT,GAAyB,YAAY;AACjC,eAAO,IAAInB,GAAGF,OAAH,CAAWsB,aAAf,CAA6B;AAChCC,8BAAkBrB,GAAGsB,UAAH,CAAcC,cAAd,CAA6B,CAA7B,CADc;AAEhCC,wBAAY,WAFoB,EAEP;AACzB;AACA;AACAX,uBAAW,uBALqB;AAMhCY,oBAAQC,SAASC,cAAT,CAAwB,gBAAxB,CANwB;AAOhCC,2BAAe;AAPiB,SAA7B,CAAP;AASH,KAVD;AAWA,WAAO;AACHlC,gBAAQA;AADL,KAAP;AAIC,CA7FuB,EAAxB","file":"mapControlsModule.js","sourcesContent":["/*eslint-env browser, jquery */\r\n/*global ol */\r\n/**\r\n* OL3 controls module.\r\n* @module\r\n* @external ol\r\n* @return {Object} Public functions / variables\r\n*/\r\n/*eslint-disable no-unused-vars*/\r\nvar mapControlsModule = (function () {\r\n    /*eslint-enable no-unused-vars*/\r\n    'use strict';\r\n\r\n    var controls = {};\r\n\r\n\r\n\r\n    /**\r\n    * Create a new control using predefined settings\r\n    * @public\r\n    * @param {string} name - Predefined control\r\n    * @return {Object} - OL3 control\r\n    */\r\n    var create = function (name) {\r\n        if (!controls[name]) {\r\n            console.warn(name + ' control definition is not defined');\r\n            return false;\r\n        }\r\n        var control = controls[name]();\r\n        /*\r\n        control.setProperties(settings.properties);\r\n        if (properties) {\r\n        control.setProperties(properties);\r\n    }\r\n    */\r\n    return control;\r\n};\r\n// Controls ------------------------------------------------------------------------------------\r\ncontrols.attribution = function () {\r\n    return new ol.control.Attribution({\r\n        collapsible: true\r\n        //tipLabel: $.t('buttons:olAttribution.label')\r\n    });\r\n};\r\ncontrols.zoomSlider = function () {\r\n    return new ol.control.ZoomSlider({\r\n\r\n    });\r\n};\r\ncontrols.zoomToExtent = function () {\r\n    //var projection = ol.proj.get('EPSG:4326'); // EPSG:3857 EPSG:4326\r\n    //var extent = projection.getExtent();\r\n    return new ol.control.ZoomToExtent({\r\n        //extent: extent //ol.proj.transformExtent([-180, -90, 180, 90], 'EPSG:4326', 'EPSG:3857')\r\n        //tipLabel: $.t('buttons:olZoomExtent.label')\r\n    });\r\n};\r\ncontrols.scaleLine = function () {\r\n    return new ol.control.ScaleLine({\r\n        //tipLabel: $.t('buttons:olScaleLine.label')\r\n    });\r\n};\r\ncontrols.fullScreen = function () {\r\n    return new ol.control.FullScreen({\r\n        //className: 'ol-glyphicon',\r\n        //label: '\\e140'\r\n        //tipLabel: $.t('buttons:olFullScreen.label')\r\n    });\r\n};\r\ncontrols.overviewMap = function () {\r\n    return new ol.control.OverviewMap({\r\n        // see in overviewmap-custom.html to see the custom CSS used\r\n        className: 'ol-overviewmap ol-custom-overviewmap',\r\n        //layers: [\r\n        //    mapLayersModule.baselayers\r\n        //],\r\n        collapseLabel: '\\u00AB',\r\n        label: '\\u00BB',\r\n        collapsed: true\r\n        //tipLabel: $.t('buttons:olOverviewmap.label')\r\n    });\r\n};\r\ncontrols.layerSwitcher = function () {\r\n    return new ol.control.LayerSwitcher({\r\n        //tipLabel: $.t('buttons:olLayerswitcher.label')\r\n    });\r\n};\r\ncontrols.mousePosition = function () {\r\n    return new ol.control.MousePosition({\r\n        coordinateFormat: ol.coordinate.createStringXY(4),\r\n        projection: 'EPSG:4326', // infoProjection\r\n        // comment the following two lines to have the mouse position\r\n        // be placed within the map.\r\n        className: 'custom-mouse-position',\r\n        target: document.getElementById('mouse-position'),\r\n        undefinedHTML: '&nbsp;'\r\n    });\r\n};\r\nreturn {\r\n    create: create\r\n};\r\n\r\n})();\r\n"]}