{"version":3,"sources":["../../app/scripts/mapDrawModule.js"],"names":[],"mappings":";;;;;;;;;AASA,IAAI,gBAAgB,YAAa;AAC7B,iBAD6B;;AAG7B,QAAI,IAAJ,CAH6B;;AAK7B,QAAI,WAAW,IAAI,GAAG,UAAH,EAAf;;;;;;;AALyB,QAczB,OAAO,UAAU,GAAV,EAAe;AACtB,uBAAe,MAAf,CAAsB,GAAtB,EADsB;AAEtB,YAAI,cAAJ,CAAmB,MAAnB,EAFsB;KAAf;;;;;;;;AAdkB,QA2BzB,kBAAkB,UAAU,IAAV,EAAgB,GAAhB,EAAqB;AACvC,YAAI,IAAJ,EAAU;AACN,mBAAO,IAAI,GAAG,WAAH,CAAe,IAAf,CAAoB;AAC3B,0BAAU,QAAV;AACA,yDAA2C,IAA3C;aAFG,CAAP,CADM;AAKN,gBAAI,cAAJ,CAAmB,IAAnB,EALM;SAAV;KADkB;;;;;;;;AA3BO,QA6CzB,sBAAsB,UAAU,EAAV,EAAc,GAAd,EAAmB;AACzC,YAAI,aAAa,SAAS,cAAT,CAAwB,EAAxB,CAAb,CADqC;AAEzC,mBAAW,QAAX,GAAsB,YAAY;AAC9B,gBAAI,iBAAJ,CAAsB,IAAtB,EAD8B;AAE9B,4BAAgB,WAAW,KAAX,EAAkB,GAAlC,EAF8B;SAAZ,CAFmB;AAMzC,wBAAgB,WAAW,KAAX,EAAkB,GAAlC,EANyC;KAAnB;;;;;AA7CG,QA2DzB,iBAAiB,IAAI,GAAG,KAAH,CAAS,MAAT,CAAgB;AACrC,gBAAQ,IAAI,GAAG,MAAH,CAAU,MAAV,CAAiB;AACzB,sBAAU,QAAV;SADI,CAAR;AAGA,eAAO,IAAI,GAAG,KAAH,CAAS,KAAT,CAAe;AACtB,kBAAM,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACpB,uBAAO,0BAAP;aADE,CAAN;AAGA,oBAAQ,IAAI,GAAG,KAAH,CAAS,MAAT,CAAgB;AACxB,uBAAO,SAAP;AACA,uBAAO,CAAP;aAFI,CAAR;AAIA,mBAAO,IAAI,GAAG,KAAH,CAAS,MAAT,CAAgB;AACvB,wBAAQ,CAAR;AACA,sBAAM,IAAI,GAAG,KAAH,CAAS,IAAT,CAAc;AACpB,2BAAO,SAAP;iBADE,CAAN;aAFG,CAAP;SARG,CAAP;KAJiB,CAAjB;;;;;AA3DyB,QAqFzB,SAAS,IAAI,GAAG,WAAH,CAAe,MAAf,CAAsB;AACnC,kBAAU,QAAV;;;;AAIA,yBAAiB,UAAU,KAAV,EAAiB;AAC9B,mBAAO,GAAG,MAAH,CAAU,SAAV,CAAoB,YAApB,CAAiC,KAAjC,KACC,GAAG,MAAH,CAAU,SAAV,CAAoB,WAApB,CAAgC,KAAhC,CADD,CADuB;SAAjB;KALR,CAAT,CArFyB;;AAkG7B,WAAO;AACH,cAAM,IAAN;AACA,yBAAiB,eAAjB;AACA,6BAAqB,mBAArB;KAHJ,CAlG6B;CAAZ,EAAjB","file":"mapDrawModule.js","sourcesContent":["//jslint browser: true\n//global document, ol\n\n/**\n * OL3 draw module.\n * @external OL3\n * @module\n * @returns {Object} Public functions and variables\n */\nvar mapDrawModule = (function () {\n    'use strict';\n\n    var draw;\n\n    var features = new ol.Collection();\n\n\n\n    /**\n     * Add the draw interaction to the map\n     * @public\n     * @param {Object} map - OL3 map\n     */\n    var init = function (map) {\n        featureOverlay.setMap(map);\n        map.addInteraction(modify);\n    };\n\n    \n    \n    /**\n     * Add a draw interaction to the map\n     * @public\n     * @param {string} type - Interaction type\n     * @param {Object} OL3 map\n     */\n    var drawInteraction = function (type, map) {\n        if (type) {\n            draw = new ol.interaction.Draw({\n                features: features,\n                type: /** @type {ol.geom.GeometryType} */ (type)\n            });\n            map.addInteraction(draw);\n        }\n    };\n\n\n\n    /**\n     * Let user change the geometry type.\n     * @public\n     * @param {string} id - Select input ID\n     * @param {Object} map - OL3 map\n     */\n    var addDrawTypeSwitcher = function (id, map) {\n        var typeSelect = document.getElementById(id);\n        typeSelect.onchange = function () {\n            map.removeInteraction(draw);\n            drawInteraction(typeSelect.value, map);\n        };\n        drawInteraction(typeSelect.value, map);\n    };\n\n\n\n    /**\n     * Features vector layer\n     */\n    var featureOverlay = new ol.layer.Vector({\n        source: new ol.source.Vector({\n            features: features\n        }),\n        style: new ol.style.Style({\n            fill: new ol.style.Fill({\n                color: 'rgba(255, 255, 255, 0.2)'\n            }),\n            stroke: new ol.style.Stroke({\n                color: '#ffcc33',\n                width: 2\n            }),\n            image: new ol.style.Circle({\n                radius: 7,\n                fill: new ol.style.Fill({\n                    color: '#ffcc33'\n                })\n            })\n        })\n    });\n\n\n\n    /**\n     * Modify interaction\n     */\n    var modify = new ol.interaction.Modify({\n        features: features,\n        // the SHIFT key must be pressed to delete vertices, so\n        // that new vertices can be drawn at the same position\n        // of existing vertices\n        deleteCondition: function (event) {\n            return ol.events.condition.shiftKeyOnly(event) &&\n                    ol.events.condition.singleClick(event);\n        }\n    });\n\n\n    \n    return {\n        init: init,\n        drawInteraction: drawInteraction,\n        addDrawTypeSwitcher: addDrawTypeSwitcher\n    };\n\n})();"]}